
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model asiento_detalles
 * 
 */
export type asiento_detalles = $Result.DefaultSelection<Prisma.$asiento_detallesPayload>
/**
 * Model asientos_contables
 * 
 */
export type asientos_contables = $Result.DefaultSelection<Prisma.$asientos_contablesPayload>
/**
 * Model clientes
 * 
 */
export type clientes = $Result.DefaultSelection<Prisma.$clientesPayload>
/**
 * Model detalle_compra
 * 
 */
export type detalle_compra = $Result.DefaultSelection<Prisma.$detalle_compraPayload>
/**
 * Model detalle_venta
 * 
 */
export type detalle_venta = $Result.DefaultSelection<Prisma.$detalle_ventaPayload>
/**
 * Model inventario_movimientos
 * 
 */
export type inventario_movimientos = $Result.DefaultSelection<Prisma.$inventario_movimientosPayload>
/**
 * Model operacion
 * 
 */
export type operacion = $Result.DefaultSelection<Prisma.$operacionPayload>
/**
 * Model operacion_compras
 * 
 */
export type operacion_compras = $Result.DefaultSelection<Prisma.$operacion_comprasPayload>
/**
 * Model operacion_gastos
 * 
 */
export type operacion_gastos = $Result.DefaultSelection<Prisma.$operacion_gastosPayload>
/**
 * Model operacion_ventas
 * 
 */
export type operacion_ventas = $Result.DefaultSelection<Prisma.$operacion_ventasPayload>
/**
 * Model pagos_clientes
 * 
 */
export type pagos_clientes = $Result.DefaultSelection<Prisma.$pagos_clientesPayload>
/**
 * Model producto_variantes
 * 
 */
export type producto_variantes = $Result.DefaultSelection<Prisma.$producto_variantesPayload>
/**
 * Model productos
 * 
 */
export type productos = $Result.DefaultSelection<Prisma.$productosPayload>
/**
 * Model proveedores
 * 
 */
export type proveedores = $Result.DefaultSelection<Prisma.$proveedoresPayload>
/**
 * Model tipo_operacion
 * 
 */
export type tipo_operacion = $Result.DefaultSelection<Prisma.$tipo_operacionPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Asiento_detalles
 * const asiento_detalles = await prisma.asiento_detalles.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Asiento_detalles
   * const asiento_detalles = await prisma.asiento_detalles.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.asiento_detalles`: Exposes CRUD operations for the **asiento_detalles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Asiento_detalles
    * const asiento_detalles = await prisma.asiento_detalles.findMany()
    * ```
    */
  get asiento_detalles(): Prisma.asiento_detallesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asientos_contables`: Exposes CRUD operations for the **asientos_contables** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Asientos_contables
    * const asientos_contables = await prisma.asientos_contables.findMany()
    * ```
    */
  get asientos_contables(): Prisma.asientos_contablesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientes`: Exposes CRUD operations for the **clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.clientes.findMany()
    * ```
    */
  get clientes(): Prisma.clientesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_compra`: Exposes CRUD operations for the **detalle_compra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_compras
    * const detalle_compras = await prisma.detalle_compra.findMany()
    * ```
    */
  get detalle_compra(): Prisma.detalle_compraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_venta`: Exposes CRUD operations for the **detalle_venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_ventas
    * const detalle_ventas = await prisma.detalle_venta.findMany()
    * ```
    */
  get detalle_venta(): Prisma.detalle_ventaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventario_movimientos`: Exposes CRUD operations for the **inventario_movimientos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inventario_movimientos
    * const inventario_movimientos = await prisma.inventario_movimientos.findMany()
    * ```
    */
  get inventario_movimientos(): Prisma.inventario_movimientosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operacion`: Exposes CRUD operations for the **operacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Operacions
    * const operacions = await prisma.operacion.findMany()
    * ```
    */
  get operacion(): Prisma.operacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operacion_compras`: Exposes CRUD operations for the **operacion_compras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Operacion_compras
    * const operacion_compras = await prisma.operacion_compras.findMany()
    * ```
    */
  get operacion_compras(): Prisma.operacion_comprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operacion_gastos`: Exposes CRUD operations for the **operacion_gastos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Operacion_gastos
    * const operacion_gastos = await prisma.operacion_gastos.findMany()
    * ```
    */
  get operacion_gastos(): Prisma.operacion_gastosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operacion_ventas`: Exposes CRUD operations for the **operacion_ventas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Operacion_ventas
    * const operacion_ventas = await prisma.operacion_ventas.findMany()
    * ```
    */
  get operacion_ventas(): Prisma.operacion_ventasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pagos_clientes`: Exposes CRUD operations for the **pagos_clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos_clientes
    * const pagos_clientes = await prisma.pagos_clientes.findMany()
    * ```
    */
  get pagos_clientes(): Prisma.pagos_clientesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto_variantes`: Exposes CRUD operations for the **producto_variantes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Producto_variantes
    * const producto_variantes = await prisma.producto_variantes.findMany()
    * ```
    */
  get producto_variantes(): Prisma.producto_variantesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productos`: Exposes CRUD operations for the **productos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.productos.findMany()
    * ```
    */
  get productos(): Prisma.productosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proveedores`: Exposes CRUD operations for the **proveedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedores
    * const proveedores = await prisma.proveedores.findMany()
    * ```
    */
  get proveedores(): Prisma.proveedoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipo_operacion`: Exposes CRUD operations for the **tipo_operacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_operacions
    * const tipo_operacions = await prisma.tipo_operacion.findMany()
    * ```
    */
  get tipo_operacion(): Prisma.tipo_operacionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.1
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    asiento_detalles: 'asiento_detalles',
    asientos_contables: 'asientos_contables',
    clientes: 'clientes',
    detalle_compra: 'detalle_compra',
    detalle_venta: 'detalle_venta',
    inventario_movimientos: 'inventario_movimientos',
    operacion: 'operacion',
    operacion_compras: 'operacion_compras',
    operacion_gastos: 'operacion_gastos',
    operacion_ventas: 'operacion_ventas',
    pagos_clientes: 'pagos_clientes',
    producto_variantes: 'producto_variantes',
    productos: 'productos',
    proveedores: 'proveedores',
    tipo_operacion: 'tipo_operacion'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "asiento_detalles" | "asientos_contables" | "clientes" | "detalle_compra" | "detalle_venta" | "inventario_movimientos" | "operacion" | "operacion_compras" | "operacion_gastos" | "operacion_ventas" | "pagos_clientes" | "producto_variantes" | "productos" | "proveedores" | "tipo_operacion"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      asiento_detalles: {
        payload: Prisma.$asiento_detallesPayload<ExtArgs>
        fields: Prisma.asiento_detallesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.asiento_detallesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.asiento_detallesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          findFirst: {
            args: Prisma.asiento_detallesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.asiento_detallesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          findMany: {
            args: Prisma.asiento_detallesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>[]
          }
          create: {
            args: Prisma.asiento_detallesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          createMany: {
            args: Prisma.asiento_detallesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.asiento_detallesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>[]
          }
          delete: {
            args: Prisma.asiento_detallesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          update: {
            args: Prisma.asiento_detallesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          deleteMany: {
            args: Prisma.asiento_detallesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.asiento_detallesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.asiento_detallesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>[]
          }
          upsert: {
            args: Prisma.asiento_detallesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asiento_detallesPayload>
          }
          aggregate: {
            args: Prisma.Asiento_detallesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsiento_detalles>
          }
          groupBy: {
            args: Prisma.asiento_detallesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Asiento_detallesGroupByOutputType>[]
          }
          count: {
            args: Prisma.asiento_detallesCountArgs<ExtArgs>
            result: $Utils.Optional<Asiento_detallesCountAggregateOutputType> | number
          }
        }
      }
      asientos_contables: {
        payload: Prisma.$asientos_contablesPayload<ExtArgs>
        fields: Prisma.asientos_contablesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.asientos_contablesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.asientos_contablesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          findFirst: {
            args: Prisma.asientos_contablesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.asientos_contablesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          findMany: {
            args: Prisma.asientos_contablesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>[]
          }
          create: {
            args: Prisma.asientos_contablesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          createMany: {
            args: Prisma.asientos_contablesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.asientos_contablesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>[]
          }
          delete: {
            args: Prisma.asientos_contablesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          update: {
            args: Prisma.asientos_contablesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          deleteMany: {
            args: Prisma.asientos_contablesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.asientos_contablesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.asientos_contablesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>[]
          }
          upsert: {
            args: Prisma.asientos_contablesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$asientos_contablesPayload>
          }
          aggregate: {
            args: Prisma.Asientos_contablesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsientos_contables>
          }
          groupBy: {
            args: Prisma.asientos_contablesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Asientos_contablesGroupByOutputType>[]
          }
          count: {
            args: Prisma.asientos_contablesCountArgs<ExtArgs>
            result: $Utils.Optional<Asientos_contablesCountAggregateOutputType> | number
          }
        }
      }
      clientes: {
        payload: Prisma.$clientesPayload<ExtArgs>
        fields: Prisma.clientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          findFirst: {
            args: Prisma.clientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          findMany: {
            args: Prisma.clientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>[]
          }
          create: {
            args: Prisma.clientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          createMany: {
            args: Prisma.clientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.clientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>[]
          }
          delete: {
            args: Prisma.clientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          update: {
            args: Prisma.clientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          deleteMany: {
            args: Prisma.clientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.clientesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>[]
          }
          upsert: {
            args: Prisma.clientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          aggregate: {
            args: Prisma.ClientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientes>
          }
          groupBy: {
            args: Prisma.clientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.clientesCountArgs<ExtArgs>
            result: $Utils.Optional<ClientesCountAggregateOutputType> | number
          }
        }
      }
      detalle_compra: {
        payload: Prisma.$detalle_compraPayload<ExtArgs>
        fields: Prisma.detalle_compraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_compraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_compraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          findFirst: {
            args: Prisma.detalle_compraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_compraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          findMany: {
            args: Prisma.detalle_compraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>[]
          }
          create: {
            args: Prisma.detalle_compraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          createMany: {
            args: Prisma.detalle_compraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_compraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>[]
          }
          delete: {
            args: Prisma.detalle_compraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          update: {
            args: Prisma.detalle_compraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          deleteMany: {
            args: Prisma.detalle_compraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_compraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_compraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>[]
          }
          upsert: {
            args: Prisma.detalle_compraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_compraPayload>
          }
          aggregate: {
            args: Prisma.Detalle_compraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_compra>
          }
          groupBy: {
            args: Prisma.detalle_compraGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_compraGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_compraCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_compraCountAggregateOutputType> | number
          }
        }
      }
      detalle_venta: {
        payload: Prisma.$detalle_ventaPayload<ExtArgs>
        fields: Prisma.detalle_ventaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_ventaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_ventaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          findFirst: {
            args: Prisma.detalle_ventaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_ventaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          findMany: {
            args: Prisma.detalle_ventaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>[]
          }
          create: {
            args: Prisma.detalle_ventaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          createMany: {
            args: Prisma.detalle_ventaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_ventaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>[]
          }
          delete: {
            args: Prisma.detalle_ventaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          update: {
            args: Prisma.detalle_ventaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          deleteMany: {
            args: Prisma.detalle_ventaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_ventaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_ventaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>[]
          }
          upsert: {
            args: Prisma.detalle_ventaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventaPayload>
          }
          aggregate: {
            args: Prisma.Detalle_ventaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_venta>
          }
          groupBy: {
            args: Prisma.detalle_ventaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_ventaGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_ventaCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_ventaCountAggregateOutputType> | number
          }
        }
      }
      inventario_movimientos: {
        payload: Prisma.$inventario_movimientosPayload<ExtArgs>
        fields: Prisma.inventario_movimientosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.inventario_movimientosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.inventario_movimientosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          findFirst: {
            args: Prisma.inventario_movimientosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.inventario_movimientosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          findMany: {
            args: Prisma.inventario_movimientosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>[]
          }
          create: {
            args: Prisma.inventario_movimientosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          createMany: {
            args: Prisma.inventario_movimientosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.inventario_movimientosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>[]
          }
          delete: {
            args: Prisma.inventario_movimientosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          update: {
            args: Prisma.inventario_movimientosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          deleteMany: {
            args: Prisma.inventario_movimientosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.inventario_movimientosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.inventario_movimientosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>[]
          }
          upsert: {
            args: Prisma.inventario_movimientosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inventario_movimientosPayload>
          }
          aggregate: {
            args: Prisma.Inventario_movimientosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventario_movimientos>
          }
          groupBy: {
            args: Prisma.inventario_movimientosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Inventario_movimientosGroupByOutputType>[]
          }
          count: {
            args: Prisma.inventario_movimientosCountArgs<ExtArgs>
            result: $Utils.Optional<Inventario_movimientosCountAggregateOutputType> | number
          }
        }
      }
      operacion: {
        payload: Prisma.$operacionPayload<ExtArgs>
        fields: Prisma.operacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.operacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.operacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          findFirst: {
            args: Prisma.operacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.operacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          findMany: {
            args: Prisma.operacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>[]
          }
          create: {
            args: Prisma.operacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          createMany: {
            args: Prisma.operacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.operacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>[]
          }
          delete: {
            args: Prisma.operacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          update: {
            args: Prisma.operacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          deleteMany: {
            args: Prisma.operacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.operacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.operacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>[]
          }
          upsert: {
            args: Prisma.operacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacionPayload>
          }
          aggregate: {
            args: Prisma.OperacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperacion>
          }
          groupBy: {
            args: Prisma.operacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<OperacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.operacionCountArgs<ExtArgs>
            result: $Utils.Optional<OperacionCountAggregateOutputType> | number
          }
        }
      }
      operacion_compras: {
        payload: Prisma.$operacion_comprasPayload<ExtArgs>
        fields: Prisma.operacion_comprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.operacion_comprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.operacion_comprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          findFirst: {
            args: Prisma.operacion_comprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.operacion_comprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          findMany: {
            args: Prisma.operacion_comprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>[]
          }
          create: {
            args: Prisma.operacion_comprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          createMany: {
            args: Prisma.operacion_comprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.operacion_comprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>[]
          }
          delete: {
            args: Prisma.operacion_comprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          update: {
            args: Prisma.operacion_comprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          deleteMany: {
            args: Prisma.operacion_comprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.operacion_comprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.operacion_comprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>[]
          }
          upsert: {
            args: Prisma.operacion_comprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_comprasPayload>
          }
          aggregate: {
            args: Prisma.Operacion_comprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperacion_compras>
          }
          groupBy: {
            args: Prisma.operacion_comprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Operacion_comprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.operacion_comprasCountArgs<ExtArgs>
            result: $Utils.Optional<Operacion_comprasCountAggregateOutputType> | number
          }
        }
      }
      operacion_gastos: {
        payload: Prisma.$operacion_gastosPayload<ExtArgs>
        fields: Prisma.operacion_gastosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.operacion_gastosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.operacion_gastosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          findFirst: {
            args: Prisma.operacion_gastosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.operacion_gastosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          findMany: {
            args: Prisma.operacion_gastosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>[]
          }
          create: {
            args: Prisma.operacion_gastosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          createMany: {
            args: Prisma.operacion_gastosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.operacion_gastosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>[]
          }
          delete: {
            args: Prisma.operacion_gastosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          update: {
            args: Prisma.operacion_gastosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          deleteMany: {
            args: Prisma.operacion_gastosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.operacion_gastosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.operacion_gastosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>[]
          }
          upsert: {
            args: Prisma.operacion_gastosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_gastosPayload>
          }
          aggregate: {
            args: Prisma.Operacion_gastosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperacion_gastos>
          }
          groupBy: {
            args: Prisma.operacion_gastosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Operacion_gastosGroupByOutputType>[]
          }
          count: {
            args: Prisma.operacion_gastosCountArgs<ExtArgs>
            result: $Utils.Optional<Operacion_gastosCountAggregateOutputType> | number
          }
        }
      }
      operacion_ventas: {
        payload: Prisma.$operacion_ventasPayload<ExtArgs>
        fields: Prisma.operacion_ventasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.operacion_ventasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.operacion_ventasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          findFirst: {
            args: Prisma.operacion_ventasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.operacion_ventasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          findMany: {
            args: Prisma.operacion_ventasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>[]
          }
          create: {
            args: Prisma.operacion_ventasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          createMany: {
            args: Prisma.operacion_ventasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.operacion_ventasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>[]
          }
          delete: {
            args: Prisma.operacion_ventasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          update: {
            args: Prisma.operacion_ventasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          deleteMany: {
            args: Prisma.operacion_ventasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.operacion_ventasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.operacion_ventasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>[]
          }
          upsert: {
            args: Prisma.operacion_ventasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$operacion_ventasPayload>
          }
          aggregate: {
            args: Prisma.Operacion_ventasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperacion_ventas>
          }
          groupBy: {
            args: Prisma.operacion_ventasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Operacion_ventasGroupByOutputType>[]
          }
          count: {
            args: Prisma.operacion_ventasCountArgs<ExtArgs>
            result: $Utils.Optional<Operacion_ventasCountAggregateOutputType> | number
          }
        }
      }
      pagos_clientes: {
        payload: Prisma.$pagos_clientesPayload<ExtArgs>
        fields: Prisma.pagos_clientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pagos_clientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pagos_clientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          findFirst: {
            args: Prisma.pagos_clientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pagos_clientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          findMany: {
            args: Prisma.pagos_clientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>[]
          }
          create: {
            args: Prisma.pagos_clientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          createMany: {
            args: Prisma.pagos_clientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pagos_clientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>[]
          }
          delete: {
            args: Prisma.pagos_clientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          update: {
            args: Prisma.pagos_clientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          deleteMany: {
            args: Prisma.pagos_clientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pagos_clientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pagos_clientesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>[]
          }
          upsert: {
            args: Prisma.pagos_clientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pagos_clientesPayload>
          }
          aggregate: {
            args: Prisma.Pagos_clientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagos_clientes>
          }
          groupBy: {
            args: Prisma.pagos_clientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pagos_clientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.pagos_clientesCountArgs<ExtArgs>
            result: $Utils.Optional<Pagos_clientesCountAggregateOutputType> | number
          }
        }
      }
      producto_variantes: {
        payload: Prisma.$producto_variantesPayload<ExtArgs>
        fields: Prisma.producto_variantesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.producto_variantesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.producto_variantesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          findFirst: {
            args: Prisma.producto_variantesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.producto_variantesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          findMany: {
            args: Prisma.producto_variantesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>[]
          }
          create: {
            args: Prisma.producto_variantesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          createMany: {
            args: Prisma.producto_variantesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.producto_variantesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>[]
          }
          delete: {
            args: Prisma.producto_variantesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          update: {
            args: Prisma.producto_variantesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          deleteMany: {
            args: Prisma.producto_variantesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.producto_variantesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.producto_variantesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>[]
          }
          upsert: {
            args: Prisma.producto_variantesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$producto_variantesPayload>
          }
          aggregate: {
            args: Prisma.Producto_variantesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto_variantes>
          }
          groupBy: {
            args: Prisma.producto_variantesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Producto_variantesGroupByOutputType>[]
          }
          count: {
            args: Prisma.producto_variantesCountArgs<ExtArgs>
            result: $Utils.Optional<Producto_variantesCountAggregateOutputType> | number
          }
        }
      }
      productos: {
        payload: Prisma.$productosPayload<ExtArgs>
        fields: Prisma.productosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          findFirst: {
            args: Prisma.productosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          findMany: {
            args: Prisma.productosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          create: {
            args: Prisma.productosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          createMany: {
            args: Prisma.productosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          delete: {
            args: Prisma.productosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          update: {
            args: Prisma.productosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          deleteMany: {
            args: Prisma.productosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          upsert: {
            args: Prisma.productosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          aggregate: {
            args: Prisma.ProductosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductos>
          }
          groupBy: {
            args: Prisma.productosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductosGroupByOutputType>[]
          }
          count: {
            args: Prisma.productosCountArgs<ExtArgs>
            result: $Utils.Optional<ProductosCountAggregateOutputType> | number
          }
        }
      }
      proveedores: {
        payload: Prisma.$proveedoresPayload<ExtArgs>
        fields: Prisma.proveedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proveedoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proveedoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findFirst: {
            args: Prisma.proveedoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proveedoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findMany: {
            args: Prisma.proveedoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          create: {
            args: Prisma.proveedoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          createMany: {
            args: Prisma.proveedoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proveedoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          delete: {
            args: Prisma.proveedoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          update: {
            args: Prisma.proveedoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          deleteMany: {
            args: Prisma.proveedoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proveedoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proveedoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          upsert: {
            args: Prisma.proveedoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          aggregate: {
            args: Prisma.ProveedoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedores>
          }
          groupBy: {
            args: Prisma.proveedoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.proveedoresCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresCountAggregateOutputType> | number
          }
        }
      }
      tipo_operacion: {
        payload: Prisma.$tipo_operacionPayload<ExtArgs>
        fields: Prisma.tipo_operacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_operacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_operacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          findFirst: {
            args: Prisma.tipo_operacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_operacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          findMany: {
            args: Prisma.tipo_operacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>[]
          }
          create: {
            args: Prisma.tipo_operacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          createMany: {
            args: Prisma.tipo_operacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipo_operacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>[]
          }
          delete: {
            args: Prisma.tipo_operacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          update: {
            args: Prisma.tipo_operacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          deleteMany: {
            args: Prisma.tipo_operacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_operacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipo_operacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>[]
          }
          upsert: {
            args: Prisma.tipo_operacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_operacionPayload>
          }
          aggregate: {
            args: Prisma.Tipo_operacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipo_operacion>
          }
          groupBy: {
            args: Prisma.tipo_operacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipo_operacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_operacionCountArgs<ExtArgs>
            result: $Utils.Optional<Tipo_operacionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    asiento_detalles?: asiento_detallesOmit
    asientos_contables?: asientos_contablesOmit
    clientes?: clientesOmit
    detalle_compra?: detalle_compraOmit
    detalle_venta?: detalle_ventaOmit
    inventario_movimientos?: inventario_movimientosOmit
    operacion?: operacionOmit
    operacion_compras?: operacion_comprasOmit
    operacion_gastos?: operacion_gastosOmit
    operacion_ventas?: operacion_ventasOmit
    pagos_clientes?: pagos_clientesOmit
    producto_variantes?: producto_variantesOmit
    productos?: productosOmit
    proveedores?: proveedoresOmit
    tipo_operacion?: tipo_operacionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Asientos_contablesCountOutputType
   */

  export type Asientos_contablesCountOutputType = {
    asiento_detalles: number
  }

  export type Asientos_contablesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asiento_detalles?: boolean | Asientos_contablesCountOutputTypeCountAsiento_detallesArgs
  }

  // Custom InputTypes
  /**
   * Asientos_contablesCountOutputType without action
   */
  export type Asientos_contablesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asientos_contablesCountOutputType
     */
    select?: Asientos_contablesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Asientos_contablesCountOutputType without action
   */
  export type Asientos_contablesCountOutputTypeCountAsiento_detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: asiento_detallesWhereInput
  }


  /**
   * Count Type ClientesCountOutputType
   */

  export type ClientesCountOutputType = {
    operacion_ventas: number
  }

  export type ClientesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | ClientesCountOutputTypeCountOperacion_ventasArgs
  }

  // Custom InputTypes
  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientesCountOutputType
     */
    select?: ClientesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountOperacion_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_ventasWhereInput
  }


  /**
   * Count Type OperacionCountOutputType
   */

  export type OperacionCountOutputType = {
    asientos_contables: number
    inventario_movimientos: number
    operacion_compras: number
    operacion_gastos: number
    operacion_ventas: number
  }

  export type OperacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asientos_contables?: boolean | OperacionCountOutputTypeCountAsientos_contablesArgs
    inventario_movimientos?: boolean | OperacionCountOutputTypeCountInventario_movimientosArgs
    operacion_compras?: boolean | OperacionCountOutputTypeCountOperacion_comprasArgs
    operacion_gastos?: boolean | OperacionCountOutputTypeCountOperacion_gastosArgs
    operacion_ventas?: boolean | OperacionCountOutputTypeCountOperacion_ventasArgs
  }

  // Custom InputTypes
  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperacionCountOutputType
     */
    select?: OperacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeCountAsientos_contablesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: asientos_contablesWhereInput
  }

  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeCountInventario_movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inventario_movimientosWhereInput
  }

  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeCountOperacion_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_comprasWhereInput
  }

  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeCountOperacion_gastosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_gastosWhereInput
  }

  /**
   * OperacionCountOutputType without action
   */
  export type OperacionCountOutputTypeCountOperacion_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_ventasWhereInput
  }


  /**
   * Count Type Operacion_comprasCountOutputType
   */

  export type Operacion_comprasCountOutputType = {
    detalle_compra: number
  }

  export type Operacion_comprasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compra?: boolean | Operacion_comprasCountOutputTypeCountDetalle_compraArgs
  }

  // Custom InputTypes
  /**
   * Operacion_comprasCountOutputType without action
   */
  export type Operacion_comprasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Operacion_comprasCountOutputType
     */
    select?: Operacion_comprasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Operacion_comprasCountOutputType without action
   */
  export type Operacion_comprasCountOutputTypeCountDetalle_compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_compraWhereInput
  }


  /**
   * Count Type Operacion_ventasCountOutputType
   */

  export type Operacion_ventasCountOutputType = {
    detalle_venta: number
    pagos_clientes: number
  }

  export type Operacion_ventasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_venta?: boolean | Operacion_ventasCountOutputTypeCountDetalle_ventaArgs
    pagos_clientes?: boolean | Operacion_ventasCountOutputTypeCountPagos_clientesArgs
  }

  // Custom InputTypes
  /**
   * Operacion_ventasCountOutputType without action
   */
  export type Operacion_ventasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Operacion_ventasCountOutputType
     */
    select?: Operacion_ventasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Operacion_ventasCountOutputType without action
   */
  export type Operacion_ventasCountOutputTypeCountDetalle_ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventaWhereInput
  }

  /**
   * Operacion_ventasCountOutputType without action
   */
  export type Operacion_ventasCountOutputTypeCountPagos_clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagos_clientesWhereInput
  }


  /**
   * Count Type ProductosCountOutputType
   */

  export type ProductosCountOutputType = {
    detalle_compra: number
    detalle_venta: number
    inventario_movimientos: number
    producto_variantes: number
  }

  export type ProductosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compra?: boolean | ProductosCountOutputTypeCountDetalle_compraArgs
    detalle_venta?: boolean | ProductosCountOutputTypeCountDetalle_ventaArgs
    inventario_movimientos?: boolean | ProductosCountOutputTypeCountInventario_movimientosArgs
    producto_variantes?: boolean | ProductosCountOutputTypeCountProducto_variantesArgs
  }

  // Custom InputTypes
  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductosCountOutputType
     */
    select?: ProductosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountDetalle_compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_compraWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountDetalle_ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventaWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountInventario_movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inventario_movimientosWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountProducto_variantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: producto_variantesWhereInput
  }


  /**
   * Count Type ProveedoresCountOutputType
   */

  export type ProveedoresCountOutputType = {
    operacion_compras: number
  }

  export type ProveedoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_compras?: boolean | ProveedoresCountOutputTypeCountOperacion_comprasArgs
  }

  // Custom InputTypes
  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedoresCountOutputType
     */
    select?: ProveedoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeCountOperacion_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_comprasWhereInput
  }


  /**
   * Count Type Tipo_operacionCountOutputType
   */

  export type Tipo_operacionCountOutputType = {
    operacion: number
  }

  export type Tipo_operacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | Tipo_operacionCountOutputTypeCountOperacionArgs
  }

  // Custom InputTypes
  /**
   * Tipo_operacionCountOutputType without action
   */
  export type Tipo_operacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_operacionCountOutputType
     */
    select?: Tipo_operacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipo_operacionCountOutputType without action
   */
  export type Tipo_operacionCountOutputTypeCountOperacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model asiento_detalles
   */

  export type AggregateAsiento_detalles = {
    _count: Asiento_detallesCountAggregateOutputType | null
    _avg: Asiento_detallesAvgAggregateOutputType | null
    _sum: Asiento_detallesSumAggregateOutputType | null
    _min: Asiento_detallesMinAggregateOutputType | null
    _max: Asiento_detallesMaxAggregateOutputType | null
  }

  export type Asiento_detallesAvgAggregateOutputType = {
    id_detalle: number | null
    id_asiento: number | null
    debe: number | null
    haber: number | null
  }

  export type Asiento_detallesSumAggregateOutputType = {
    id_detalle: number | null
    id_asiento: number | null
    debe: number | null
    haber: number | null
  }

  export type Asiento_detallesMinAggregateOutputType = {
    id_detalle: number | null
    id_asiento: number | null
    cuenta: string | null
    debe: number | null
    haber: number | null
  }

  export type Asiento_detallesMaxAggregateOutputType = {
    id_detalle: number | null
    id_asiento: number | null
    cuenta: string | null
    debe: number | null
    haber: number | null
  }

  export type Asiento_detallesCountAggregateOutputType = {
    id_detalle: number
    id_asiento: number
    cuenta: number
    debe: number
    haber: number
    _all: number
  }


  export type Asiento_detallesAvgAggregateInputType = {
    id_detalle?: true
    id_asiento?: true
    debe?: true
    haber?: true
  }

  export type Asiento_detallesSumAggregateInputType = {
    id_detalle?: true
    id_asiento?: true
    debe?: true
    haber?: true
  }

  export type Asiento_detallesMinAggregateInputType = {
    id_detalle?: true
    id_asiento?: true
    cuenta?: true
    debe?: true
    haber?: true
  }

  export type Asiento_detallesMaxAggregateInputType = {
    id_detalle?: true
    id_asiento?: true
    cuenta?: true
    debe?: true
    haber?: true
  }

  export type Asiento_detallesCountAggregateInputType = {
    id_detalle?: true
    id_asiento?: true
    cuenta?: true
    debe?: true
    haber?: true
    _all?: true
  }

  export type Asiento_detallesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which asiento_detalles to aggregate.
     */
    where?: asiento_detallesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asiento_detalles to fetch.
     */
    orderBy?: asiento_detallesOrderByWithRelationInput | asiento_detallesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: asiento_detallesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asiento_detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asiento_detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned asiento_detalles
    **/
    _count?: true | Asiento_detallesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Asiento_detallesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Asiento_detallesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Asiento_detallesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Asiento_detallesMaxAggregateInputType
  }

  export type GetAsiento_detallesAggregateType<T extends Asiento_detallesAggregateArgs> = {
        [P in keyof T & keyof AggregateAsiento_detalles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsiento_detalles[P]>
      : GetScalarType<T[P], AggregateAsiento_detalles[P]>
  }




  export type asiento_detallesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: asiento_detallesWhereInput
    orderBy?: asiento_detallesOrderByWithAggregationInput | asiento_detallesOrderByWithAggregationInput[]
    by: Asiento_detallesScalarFieldEnum[] | Asiento_detallesScalarFieldEnum
    having?: asiento_detallesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Asiento_detallesCountAggregateInputType | true
    _avg?: Asiento_detallesAvgAggregateInputType
    _sum?: Asiento_detallesSumAggregateInputType
    _min?: Asiento_detallesMinAggregateInputType
    _max?: Asiento_detallesMaxAggregateInputType
  }

  export type Asiento_detallesGroupByOutputType = {
    id_detalle: number
    id_asiento: number
    cuenta: string
    debe: number | null
    haber: number | null
    _count: Asiento_detallesCountAggregateOutputType | null
    _avg: Asiento_detallesAvgAggregateOutputType | null
    _sum: Asiento_detallesSumAggregateOutputType | null
    _min: Asiento_detallesMinAggregateOutputType | null
    _max: Asiento_detallesMaxAggregateOutputType | null
  }

  type GetAsiento_detallesGroupByPayload<T extends asiento_detallesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Asiento_detallesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Asiento_detallesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Asiento_detallesGroupByOutputType[P]>
            : GetScalarType<T[P], Asiento_detallesGroupByOutputType[P]>
        }
      >
    >


  export type asiento_detallesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    id_asiento?: boolean
    cuenta?: boolean
    debe?: boolean
    haber?: boolean
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asiento_detalles"]>

  export type asiento_detallesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    id_asiento?: boolean
    cuenta?: boolean
    debe?: boolean
    haber?: boolean
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asiento_detalles"]>

  export type asiento_detallesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle?: boolean
    id_asiento?: boolean
    cuenta?: boolean
    debe?: boolean
    haber?: boolean
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asiento_detalles"]>

  export type asiento_detallesSelectScalar = {
    id_detalle?: boolean
    id_asiento?: boolean
    cuenta?: boolean
    debe?: boolean
    haber?: boolean
  }

  export type asiento_detallesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle" | "id_asiento" | "cuenta" | "debe" | "haber", ExtArgs["result"]["asiento_detalles"]>
  export type asiento_detallesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }
  export type asiento_detallesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }
  export type asiento_detallesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asientos_contables?: boolean | asientos_contablesDefaultArgs<ExtArgs>
  }

  export type $asiento_detallesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "asiento_detalles"
    objects: {
      asientos_contables: Prisma.$asientos_contablesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle: number
      id_asiento: number
      cuenta: string
      debe: number | null
      haber: number | null
    }, ExtArgs["result"]["asiento_detalles"]>
    composites: {}
  }

  type asiento_detallesGetPayload<S extends boolean | null | undefined | asiento_detallesDefaultArgs> = $Result.GetResult<Prisma.$asiento_detallesPayload, S>

  type asiento_detallesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<asiento_detallesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Asiento_detallesCountAggregateInputType | true
    }

  export interface asiento_detallesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['asiento_detalles'], meta: { name: 'asiento_detalles' } }
    /**
     * Find zero or one Asiento_detalles that matches the filter.
     * @param {asiento_detallesFindUniqueArgs} args - Arguments to find a Asiento_detalles
     * @example
     * // Get one Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends asiento_detallesFindUniqueArgs>(args: SelectSubset<T, asiento_detallesFindUniqueArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Asiento_detalles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {asiento_detallesFindUniqueOrThrowArgs} args - Arguments to find a Asiento_detalles
     * @example
     * // Get one Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends asiento_detallesFindUniqueOrThrowArgs>(args: SelectSubset<T, asiento_detallesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asiento_detalles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesFindFirstArgs} args - Arguments to find a Asiento_detalles
     * @example
     * // Get one Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends asiento_detallesFindFirstArgs>(args?: SelectSubset<T, asiento_detallesFindFirstArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asiento_detalles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesFindFirstOrThrowArgs} args - Arguments to find a Asiento_detalles
     * @example
     * // Get one Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends asiento_detallesFindFirstOrThrowArgs>(args?: SelectSubset<T, asiento_detallesFindFirstOrThrowArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Asiento_detalles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findMany()
     * 
     * // Get first 10 Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle`
     * const asiento_detallesWithId_detalleOnly = await prisma.asiento_detalles.findMany({ select: { id_detalle: true } })
     * 
     */
    findMany<T extends asiento_detallesFindManyArgs>(args?: SelectSubset<T, asiento_detallesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Asiento_detalles.
     * @param {asiento_detallesCreateArgs} args - Arguments to create a Asiento_detalles.
     * @example
     * // Create one Asiento_detalles
     * const Asiento_detalles = await prisma.asiento_detalles.create({
     *   data: {
     *     // ... data to create a Asiento_detalles
     *   }
     * })
     * 
     */
    create<T extends asiento_detallesCreateArgs>(args: SelectSubset<T, asiento_detallesCreateArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Asiento_detalles.
     * @param {asiento_detallesCreateManyArgs} args - Arguments to create many Asiento_detalles.
     * @example
     * // Create many Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends asiento_detallesCreateManyArgs>(args?: SelectSubset<T, asiento_detallesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Asiento_detalles and returns the data saved in the database.
     * @param {asiento_detallesCreateManyAndReturnArgs} args - Arguments to create many Asiento_detalles.
     * @example
     * // Create many Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Asiento_detalles and only return the `id_detalle`
     * const asiento_detallesWithId_detalleOnly = await prisma.asiento_detalles.createManyAndReturn({
     *   select: { id_detalle: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends asiento_detallesCreateManyAndReturnArgs>(args?: SelectSubset<T, asiento_detallesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Asiento_detalles.
     * @param {asiento_detallesDeleteArgs} args - Arguments to delete one Asiento_detalles.
     * @example
     * // Delete one Asiento_detalles
     * const Asiento_detalles = await prisma.asiento_detalles.delete({
     *   where: {
     *     // ... filter to delete one Asiento_detalles
     *   }
     * })
     * 
     */
    delete<T extends asiento_detallesDeleteArgs>(args: SelectSubset<T, asiento_detallesDeleteArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Asiento_detalles.
     * @param {asiento_detallesUpdateArgs} args - Arguments to update one Asiento_detalles.
     * @example
     * // Update one Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends asiento_detallesUpdateArgs>(args: SelectSubset<T, asiento_detallesUpdateArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Asiento_detalles.
     * @param {asiento_detallesDeleteManyArgs} args - Arguments to filter Asiento_detalles to delete.
     * @example
     * // Delete a few Asiento_detalles
     * const { count } = await prisma.asiento_detalles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends asiento_detallesDeleteManyArgs>(args?: SelectSubset<T, asiento_detallesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asiento_detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends asiento_detallesUpdateManyArgs>(args: SelectSubset<T, asiento_detallesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asiento_detalles and returns the data updated in the database.
     * @param {asiento_detallesUpdateManyAndReturnArgs} args - Arguments to update many Asiento_detalles.
     * @example
     * // Update many Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Asiento_detalles and only return the `id_detalle`
     * const asiento_detallesWithId_detalleOnly = await prisma.asiento_detalles.updateManyAndReturn({
     *   select: { id_detalle: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends asiento_detallesUpdateManyAndReturnArgs>(args: SelectSubset<T, asiento_detallesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Asiento_detalles.
     * @param {asiento_detallesUpsertArgs} args - Arguments to update or create a Asiento_detalles.
     * @example
     * // Update or create a Asiento_detalles
     * const asiento_detalles = await prisma.asiento_detalles.upsert({
     *   create: {
     *     // ... data to create a Asiento_detalles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Asiento_detalles we want to update
     *   }
     * })
     */
    upsert<T extends asiento_detallesUpsertArgs>(args: SelectSubset<T, asiento_detallesUpsertArgs<ExtArgs>>): Prisma__asiento_detallesClient<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Asiento_detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesCountArgs} args - Arguments to filter Asiento_detalles to count.
     * @example
     * // Count the number of Asiento_detalles
     * const count = await prisma.asiento_detalles.count({
     *   where: {
     *     // ... the filter for the Asiento_detalles we want to count
     *   }
     * })
    **/
    count<T extends asiento_detallesCountArgs>(
      args?: Subset<T, asiento_detallesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Asiento_detallesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Asiento_detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Asiento_detallesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Asiento_detallesAggregateArgs>(args: Subset<T, Asiento_detallesAggregateArgs>): Prisma.PrismaPromise<GetAsiento_detallesAggregateType<T>>

    /**
     * Group by Asiento_detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asiento_detallesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends asiento_detallesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: asiento_detallesGroupByArgs['orderBy'] }
        : { orderBy?: asiento_detallesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, asiento_detallesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsiento_detallesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the asiento_detalles model
   */
  readonly fields: asiento_detallesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for asiento_detalles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__asiento_detallesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asientos_contables<T extends asientos_contablesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, asientos_contablesDefaultArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the asiento_detalles model
   */
  interface asiento_detallesFieldRefs {
    readonly id_detalle: FieldRef<"asiento_detalles", 'Int'>
    readonly id_asiento: FieldRef<"asiento_detalles", 'Int'>
    readonly cuenta: FieldRef<"asiento_detalles", 'String'>
    readonly debe: FieldRef<"asiento_detalles", 'Float'>
    readonly haber: FieldRef<"asiento_detalles", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * asiento_detalles findUnique
   */
  export type asiento_detallesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter, which asiento_detalles to fetch.
     */
    where: asiento_detallesWhereUniqueInput
  }

  /**
   * asiento_detalles findUniqueOrThrow
   */
  export type asiento_detallesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter, which asiento_detalles to fetch.
     */
    where: asiento_detallesWhereUniqueInput
  }

  /**
   * asiento_detalles findFirst
   */
  export type asiento_detallesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter, which asiento_detalles to fetch.
     */
    where?: asiento_detallesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asiento_detalles to fetch.
     */
    orderBy?: asiento_detallesOrderByWithRelationInput | asiento_detallesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for asiento_detalles.
     */
    cursor?: asiento_detallesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asiento_detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asiento_detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of asiento_detalles.
     */
    distinct?: Asiento_detallesScalarFieldEnum | Asiento_detallesScalarFieldEnum[]
  }

  /**
   * asiento_detalles findFirstOrThrow
   */
  export type asiento_detallesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter, which asiento_detalles to fetch.
     */
    where?: asiento_detallesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asiento_detalles to fetch.
     */
    orderBy?: asiento_detallesOrderByWithRelationInput | asiento_detallesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for asiento_detalles.
     */
    cursor?: asiento_detallesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asiento_detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asiento_detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of asiento_detalles.
     */
    distinct?: Asiento_detallesScalarFieldEnum | Asiento_detallesScalarFieldEnum[]
  }

  /**
   * asiento_detalles findMany
   */
  export type asiento_detallesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter, which asiento_detalles to fetch.
     */
    where?: asiento_detallesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asiento_detalles to fetch.
     */
    orderBy?: asiento_detallesOrderByWithRelationInput | asiento_detallesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing asiento_detalles.
     */
    cursor?: asiento_detallesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asiento_detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asiento_detalles.
     */
    skip?: number
    distinct?: Asiento_detallesScalarFieldEnum | Asiento_detallesScalarFieldEnum[]
  }

  /**
   * asiento_detalles create
   */
  export type asiento_detallesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * The data needed to create a asiento_detalles.
     */
    data: XOR<asiento_detallesCreateInput, asiento_detallesUncheckedCreateInput>
  }

  /**
   * asiento_detalles createMany
   */
  export type asiento_detallesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many asiento_detalles.
     */
    data: asiento_detallesCreateManyInput | asiento_detallesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * asiento_detalles createManyAndReturn
   */
  export type asiento_detallesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * The data used to create many asiento_detalles.
     */
    data: asiento_detallesCreateManyInput | asiento_detallesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * asiento_detalles update
   */
  export type asiento_detallesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * The data needed to update a asiento_detalles.
     */
    data: XOR<asiento_detallesUpdateInput, asiento_detallesUncheckedUpdateInput>
    /**
     * Choose, which asiento_detalles to update.
     */
    where: asiento_detallesWhereUniqueInput
  }

  /**
   * asiento_detalles updateMany
   */
  export type asiento_detallesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update asiento_detalles.
     */
    data: XOR<asiento_detallesUpdateManyMutationInput, asiento_detallesUncheckedUpdateManyInput>
    /**
     * Filter which asiento_detalles to update
     */
    where?: asiento_detallesWhereInput
    /**
     * Limit how many asiento_detalles to update.
     */
    limit?: number
  }

  /**
   * asiento_detalles updateManyAndReturn
   */
  export type asiento_detallesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * The data used to update asiento_detalles.
     */
    data: XOR<asiento_detallesUpdateManyMutationInput, asiento_detallesUncheckedUpdateManyInput>
    /**
     * Filter which asiento_detalles to update
     */
    where?: asiento_detallesWhereInput
    /**
     * Limit how many asiento_detalles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * asiento_detalles upsert
   */
  export type asiento_detallesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * The filter to search for the asiento_detalles to update in case it exists.
     */
    where: asiento_detallesWhereUniqueInput
    /**
     * In case the asiento_detalles found by the `where` argument doesn't exist, create a new asiento_detalles with this data.
     */
    create: XOR<asiento_detallesCreateInput, asiento_detallesUncheckedCreateInput>
    /**
     * In case the asiento_detalles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<asiento_detallesUpdateInput, asiento_detallesUncheckedUpdateInput>
  }

  /**
   * asiento_detalles delete
   */
  export type asiento_detallesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    /**
     * Filter which asiento_detalles to delete.
     */
    where: asiento_detallesWhereUniqueInput
  }

  /**
   * asiento_detalles deleteMany
   */
  export type asiento_detallesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which asiento_detalles to delete
     */
    where?: asiento_detallesWhereInput
    /**
     * Limit how many asiento_detalles to delete.
     */
    limit?: number
  }

  /**
   * asiento_detalles without action
   */
  export type asiento_detallesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
  }


  /**
   * Model asientos_contables
   */

  export type AggregateAsientos_contables = {
    _count: Asientos_contablesCountAggregateOutputType | null
    _avg: Asientos_contablesAvgAggregateOutputType | null
    _sum: Asientos_contablesSumAggregateOutputType | null
    _min: Asientos_contablesMinAggregateOutputType | null
    _max: Asientos_contablesMaxAggregateOutputType | null
  }

  export type Asientos_contablesAvgAggregateOutputType = {
    id_asiento: number | null
    id_operacion: number | null
  }

  export type Asientos_contablesSumAggregateOutputType = {
    id_asiento: number | null
    id_operacion: number | null
  }

  export type Asientos_contablesMinAggregateOutputType = {
    id_asiento: number | null
    id_operacion: number | null
    fecha: Date | null
    descripcion: string | null
  }

  export type Asientos_contablesMaxAggregateOutputType = {
    id_asiento: number | null
    id_operacion: number | null
    fecha: Date | null
    descripcion: string | null
  }

  export type Asientos_contablesCountAggregateOutputType = {
    id_asiento: number
    id_operacion: number
    fecha: number
    descripcion: number
    _all: number
  }


  export type Asientos_contablesAvgAggregateInputType = {
    id_asiento?: true
    id_operacion?: true
  }

  export type Asientos_contablesSumAggregateInputType = {
    id_asiento?: true
    id_operacion?: true
  }

  export type Asientos_contablesMinAggregateInputType = {
    id_asiento?: true
    id_operacion?: true
    fecha?: true
    descripcion?: true
  }

  export type Asientos_contablesMaxAggregateInputType = {
    id_asiento?: true
    id_operacion?: true
    fecha?: true
    descripcion?: true
  }

  export type Asientos_contablesCountAggregateInputType = {
    id_asiento?: true
    id_operacion?: true
    fecha?: true
    descripcion?: true
    _all?: true
  }

  export type Asientos_contablesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which asientos_contables to aggregate.
     */
    where?: asientos_contablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asientos_contables to fetch.
     */
    orderBy?: asientos_contablesOrderByWithRelationInput | asientos_contablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: asientos_contablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asientos_contables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asientos_contables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned asientos_contables
    **/
    _count?: true | Asientos_contablesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Asientos_contablesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Asientos_contablesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Asientos_contablesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Asientos_contablesMaxAggregateInputType
  }

  export type GetAsientos_contablesAggregateType<T extends Asientos_contablesAggregateArgs> = {
        [P in keyof T & keyof AggregateAsientos_contables]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsientos_contables[P]>
      : GetScalarType<T[P], AggregateAsientos_contables[P]>
  }




  export type asientos_contablesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: asientos_contablesWhereInput
    orderBy?: asientos_contablesOrderByWithAggregationInput | asientos_contablesOrderByWithAggregationInput[]
    by: Asientos_contablesScalarFieldEnum[] | Asientos_contablesScalarFieldEnum
    having?: asientos_contablesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Asientos_contablesCountAggregateInputType | true
    _avg?: Asientos_contablesAvgAggregateInputType
    _sum?: Asientos_contablesSumAggregateInputType
    _min?: Asientos_contablesMinAggregateInputType
    _max?: Asientos_contablesMaxAggregateInputType
  }

  export type Asientos_contablesGroupByOutputType = {
    id_asiento: number
    id_operacion: number
    fecha: Date
    descripcion: string | null
    _count: Asientos_contablesCountAggregateOutputType | null
    _avg: Asientos_contablesAvgAggregateOutputType | null
    _sum: Asientos_contablesSumAggregateOutputType | null
    _min: Asientos_contablesMinAggregateOutputType | null
    _max: Asientos_contablesMaxAggregateOutputType | null
  }

  type GetAsientos_contablesGroupByPayload<T extends asientos_contablesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Asientos_contablesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Asientos_contablesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Asientos_contablesGroupByOutputType[P]>
            : GetScalarType<T[P], Asientos_contablesGroupByOutputType[P]>
        }
      >
    >


  export type asientos_contablesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_asiento?: boolean
    id_operacion?: boolean
    fecha?: boolean
    descripcion?: boolean
    asiento_detalles?: boolean | asientos_contables$asiento_detallesArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    _count?: boolean | Asientos_contablesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asientos_contables"]>

  export type asientos_contablesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_asiento?: boolean
    id_operacion?: boolean
    fecha?: boolean
    descripcion?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asientos_contables"]>

  export type asientos_contablesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_asiento?: boolean
    id_operacion?: boolean
    fecha?: boolean
    descripcion?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asientos_contables"]>

  export type asientos_contablesSelectScalar = {
    id_asiento?: boolean
    id_operacion?: boolean
    fecha?: boolean
    descripcion?: boolean
  }

  export type asientos_contablesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_asiento" | "id_operacion" | "fecha" | "descripcion", ExtArgs["result"]["asientos_contables"]>
  export type asientos_contablesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asiento_detalles?: boolean | asientos_contables$asiento_detallesArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    _count?: boolean | Asientos_contablesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type asientos_contablesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }
  export type asientos_contablesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }

  export type $asientos_contablesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "asientos_contables"
    objects: {
      asiento_detalles: Prisma.$asiento_detallesPayload<ExtArgs>[]
      operacion: Prisma.$operacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_asiento: number
      id_operacion: number
      fecha: Date
      descripcion: string | null
    }, ExtArgs["result"]["asientos_contables"]>
    composites: {}
  }

  type asientos_contablesGetPayload<S extends boolean | null | undefined | asientos_contablesDefaultArgs> = $Result.GetResult<Prisma.$asientos_contablesPayload, S>

  type asientos_contablesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<asientos_contablesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Asientos_contablesCountAggregateInputType | true
    }

  export interface asientos_contablesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['asientos_contables'], meta: { name: 'asientos_contables' } }
    /**
     * Find zero or one Asientos_contables that matches the filter.
     * @param {asientos_contablesFindUniqueArgs} args - Arguments to find a Asientos_contables
     * @example
     * // Get one Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends asientos_contablesFindUniqueArgs>(args: SelectSubset<T, asientos_contablesFindUniqueArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Asientos_contables that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {asientos_contablesFindUniqueOrThrowArgs} args - Arguments to find a Asientos_contables
     * @example
     * // Get one Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends asientos_contablesFindUniqueOrThrowArgs>(args: SelectSubset<T, asientos_contablesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asientos_contables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesFindFirstArgs} args - Arguments to find a Asientos_contables
     * @example
     * // Get one Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends asientos_contablesFindFirstArgs>(args?: SelectSubset<T, asientos_contablesFindFirstArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asientos_contables that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesFindFirstOrThrowArgs} args - Arguments to find a Asientos_contables
     * @example
     * // Get one Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends asientos_contablesFindFirstOrThrowArgs>(args?: SelectSubset<T, asientos_contablesFindFirstOrThrowArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Asientos_contables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findMany()
     * 
     * // Get first 10 Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.findMany({ take: 10 })
     * 
     * // Only select the `id_asiento`
     * const asientos_contablesWithId_asientoOnly = await prisma.asientos_contables.findMany({ select: { id_asiento: true } })
     * 
     */
    findMany<T extends asientos_contablesFindManyArgs>(args?: SelectSubset<T, asientos_contablesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Asientos_contables.
     * @param {asientos_contablesCreateArgs} args - Arguments to create a Asientos_contables.
     * @example
     * // Create one Asientos_contables
     * const Asientos_contables = await prisma.asientos_contables.create({
     *   data: {
     *     // ... data to create a Asientos_contables
     *   }
     * })
     * 
     */
    create<T extends asientos_contablesCreateArgs>(args: SelectSubset<T, asientos_contablesCreateArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Asientos_contables.
     * @param {asientos_contablesCreateManyArgs} args - Arguments to create many Asientos_contables.
     * @example
     * // Create many Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends asientos_contablesCreateManyArgs>(args?: SelectSubset<T, asientos_contablesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Asientos_contables and returns the data saved in the database.
     * @param {asientos_contablesCreateManyAndReturnArgs} args - Arguments to create many Asientos_contables.
     * @example
     * // Create many Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Asientos_contables and only return the `id_asiento`
     * const asientos_contablesWithId_asientoOnly = await prisma.asientos_contables.createManyAndReturn({
     *   select: { id_asiento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends asientos_contablesCreateManyAndReturnArgs>(args?: SelectSubset<T, asientos_contablesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Asientos_contables.
     * @param {asientos_contablesDeleteArgs} args - Arguments to delete one Asientos_contables.
     * @example
     * // Delete one Asientos_contables
     * const Asientos_contables = await prisma.asientos_contables.delete({
     *   where: {
     *     // ... filter to delete one Asientos_contables
     *   }
     * })
     * 
     */
    delete<T extends asientos_contablesDeleteArgs>(args: SelectSubset<T, asientos_contablesDeleteArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Asientos_contables.
     * @param {asientos_contablesUpdateArgs} args - Arguments to update one Asientos_contables.
     * @example
     * // Update one Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends asientos_contablesUpdateArgs>(args: SelectSubset<T, asientos_contablesUpdateArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Asientos_contables.
     * @param {asientos_contablesDeleteManyArgs} args - Arguments to filter Asientos_contables to delete.
     * @example
     * // Delete a few Asientos_contables
     * const { count } = await prisma.asientos_contables.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends asientos_contablesDeleteManyArgs>(args?: SelectSubset<T, asientos_contablesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asientos_contables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends asientos_contablesUpdateManyArgs>(args: SelectSubset<T, asientos_contablesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asientos_contables and returns the data updated in the database.
     * @param {asientos_contablesUpdateManyAndReturnArgs} args - Arguments to update many Asientos_contables.
     * @example
     * // Update many Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Asientos_contables and only return the `id_asiento`
     * const asientos_contablesWithId_asientoOnly = await prisma.asientos_contables.updateManyAndReturn({
     *   select: { id_asiento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends asientos_contablesUpdateManyAndReturnArgs>(args: SelectSubset<T, asientos_contablesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Asientos_contables.
     * @param {asientos_contablesUpsertArgs} args - Arguments to update or create a Asientos_contables.
     * @example
     * // Update or create a Asientos_contables
     * const asientos_contables = await prisma.asientos_contables.upsert({
     *   create: {
     *     // ... data to create a Asientos_contables
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Asientos_contables we want to update
     *   }
     * })
     */
    upsert<T extends asientos_contablesUpsertArgs>(args: SelectSubset<T, asientos_contablesUpsertArgs<ExtArgs>>): Prisma__asientos_contablesClient<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Asientos_contables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesCountArgs} args - Arguments to filter Asientos_contables to count.
     * @example
     * // Count the number of Asientos_contables
     * const count = await prisma.asientos_contables.count({
     *   where: {
     *     // ... the filter for the Asientos_contables we want to count
     *   }
     * })
    **/
    count<T extends asientos_contablesCountArgs>(
      args?: Subset<T, asientos_contablesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Asientos_contablesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Asientos_contables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Asientos_contablesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Asientos_contablesAggregateArgs>(args: Subset<T, Asientos_contablesAggregateArgs>): Prisma.PrismaPromise<GetAsientos_contablesAggregateType<T>>

    /**
     * Group by Asientos_contables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {asientos_contablesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends asientos_contablesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: asientos_contablesGroupByArgs['orderBy'] }
        : { orderBy?: asientos_contablesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, asientos_contablesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsientos_contablesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the asientos_contables model
   */
  readonly fields: asientos_contablesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for asientos_contables.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__asientos_contablesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asiento_detalles<T extends asientos_contables$asiento_detallesArgs<ExtArgs> = {}>(args?: Subset<T, asientos_contables$asiento_detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asiento_detallesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    operacion<T extends operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacionDefaultArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the asientos_contables model
   */
  interface asientos_contablesFieldRefs {
    readonly id_asiento: FieldRef<"asientos_contables", 'Int'>
    readonly id_operacion: FieldRef<"asientos_contables", 'Int'>
    readonly fecha: FieldRef<"asientos_contables", 'DateTime'>
    readonly descripcion: FieldRef<"asientos_contables", 'String'>
  }
    

  // Custom InputTypes
  /**
   * asientos_contables findUnique
   */
  export type asientos_contablesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter, which asientos_contables to fetch.
     */
    where: asientos_contablesWhereUniqueInput
  }

  /**
   * asientos_contables findUniqueOrThrow
   */
  export type asientos_contablesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter, which asientos_contables to fetch.
     */
    where: asientos_contablesWhereUniqueInput
  }

  /**
   * asientos_contables findFirst
   */
  export type asientos_contablesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter, which asientos_contables to fetch.
     */
    where?: asientos_contablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asientos_contables to fetch.
     */
    orderBy?: asientos_contablesOrderByWithRelationInput | asientos_contablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for asientos_contables.
     */
    cursor?: asientos_contablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asientos_contables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asientos_contables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of asientos_contables.
     */
    distinct?: Asientos_contablesScalarFieldEnum | Asientos_contablesScalarFieldEnum[]
  }

  /**
   * asientos_contables findFirstOrThrow
   */
  export type asientos_contablesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter, which asientos_contables to fetch.
     */
    where?: asientos_contablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asientos_contables to fetch.
     */
    orderBy?: asientos_contablesOrderByWithRelationInput | asientos_contablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for asientos_contables.
     */
    cursor?: asientos_contablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asientos_contables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asientos_contables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of asientos_contables.
     */
    distinct?: Asientos_contablesScalarFieldEnum | Asientos_contablesScalarFieldEnum[]
  }

  /**
   * asientos_contables findMany
   */
  export type asientos_contablesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter, which asientos_contables to fetch.
     */
    where?: asientos_contablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of asientos_contables to fetch.
     */
    orderBy?: asientos_contablesOrderByWithRelationInput | asientos_contablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing asientos_contables.
     */
    cursor?: asientos_contablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` asientos_contables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` asientos_contables.
     */
    skip?: number
    distinct?: Asientos_contablesScalarFieldEnum | Asientos_contablesScalarFieldEnum[]
  }

  /**
   * asientos_contables create
   */
  export type asientos_contablesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * The data needed to create a asientos_contables.
     */
    data: XOR<asientos_contablesCreateInput, asientos_contablesUncheckedCreateInput>
  }

  /**
   * asientos_contables createMany
   */
  export type asientos_contablesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many asientos_contables.
     */
    data: asientos_contablesCreateManyInput | asientos_contablesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * asientos_contables createManyAndReturn
   */
  export type asientos_contablesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * The data used to create many asientos_contables.
     */
    data: asientos_contablesCreateManyInput | asientos_contablesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * asientos_contables update
   */
  export type asientos_contablesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * The data needed to update a asientos_contables.
     */
    data: XOR<asientos_contablesUpdateInput, asientos_contablesUncheckedUpdateInput>
    /**
     * Choose, which asientos_contables to update.
     */
    where: asientos_contablesWhereUniqueInput
  }

  /**
   * asientos_contables updateMany
   */
  export type asientos_contablesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update asientos_contables.
     */
    data: XOR<asientos_contablesUpdateManyMutationInput, asientos_contablesUncheckedUpdateManyInput>
    /**
     * Filter which asientos_contables to update
     */
    where?: asientos_contablesWhereInput
    /**
     * Limit how many asientos_contables to update.
     */
    limit?: number
  }

  /**
   * asientos_contables updateManyAndReturn
   */
  export type asientos_contablesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * The data used to update asientos_contables.
     */
    data: XOR<asientos_contablesUpdateManyMutationInput, asientos_contablesUncheckedUpdateManyInput>
    /**
     * Filter which asientos_contables to update
     */
    where?: asientos_contablesWhereInput
    /**
     * Limit how many asientos_contables to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * asientos_contables upsert
   */
  export type asientos_contablesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * The filter to search for the asientos_contables to update in case it exists.
     */
    where: asientos_contablesWhereUniqueInput
    /**
     * In case the asientos_contables found by the `where` argument doesn't exist, create a new asientos_contables with this data.
     */
    create: XOR<asientos_contablesCreateInput, asientos_contablesUncheckedCreateInput>
    /**
     * In case the asientos_contables was found with the provided `where` argument, update it with this data.
     */
    update: XOR<asientos_contablesUpdateInput, asientos_contablesUncheckedUpdateInput>
  }

  /**
   * asientos_contables delete
   */
  export type asientos_contablesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    /**
     * Filter which asientos_contables to delete.
     */
    where: asientos_contablesWhereUniqueInput
  }

  /**
   * asientos_contables deleteMany
   */
  export type asientos_contablesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which asientos_contables to delete
     */
    where?: asientos_contablesWhereInput
    /**
     * Limit how many asientos_contables to delete.
     */
    limit?: number
  }

  /**
   * asientos_contables.asiento_detalles
   */
  export type asientos_contables$asiento_detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asiento_detalles
     */
    select?: asiento_detallesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asiento_detalles
     */
    omit?: asiento_detallesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asiento_detallesInclude<ExtArgs> | null
    where?: asiento_detallesWhereInput
    orderBy?: asiento_detallesOrderByWithRelationInput | asiento_detallesOrderByWithRelationInput[]
    cursor?: asiento_detallesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Asiento_detallesScalarFieldEnum | Asiento_detallesScalarFieldEnum[]
  }

  /**
   * asientos_contables without action
   */
  export type asientos_contablesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
  }


  /**
   * Model clientes
   */

  export type AggregateClientes = {
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  export type ClientesAvgAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClientesSumAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClientesMinAggregateOutputType = {
    id_cliente: number | null
    nombre: string | null
    apellido: string | null
    celular: string | null
  }

  export type ClientesMaxAggregateOutputType = {
    id_cliente: number | null
    nombre: string | null
    apellido: string | null
    celular: string | null
  }

  export type ClientesCountAggregateOutputType = {
    id_cliente: number
    nombre: number
    apellido: number
    celular: number
    _all: number
  }


  export type ClientesAvgAggregateInputType = {
    id_cliente?: true
  }

  export type ClientesSumAggregateInputType = {
    id_cliente?: true
  }

  export type ClientesMinAggregateInputType = {
    id_cliente?: true
    nombre?: true
    apellido?: true
    celular?: true
  }

  export type ClientesMaxAggregateInputType = {
    id_cliente?: true
    nombre?: true
    apellido?: true
    celular?: true
  }

  export type ClientesCountAggregateInputType = {
    id_cliente?: true
    nombre?: true
    apellido?: true
    celular?: true
    _all?: true
  }

  export type ClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to aggregate.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clientes
    **/
    _count?: true | ClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientesMaxAggregateInputType
  }

  export type GetClientesAggregateType<T extends ClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientes[P]>
      : GetScalarType<T[P], AggregateClientes[P]>
  }




  export type clientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientesWhereInput
    orderBy?: clientesOrderByWithAggregationInput | clientesOrderByWithAggregationInput[]
    by: ClientesScalarFieldEnum[] | ClientesScalarFieldEnum
    having?: clientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientesCountAggregateInputType | true
    _avg?: ClientesAvgAggregateInputType
    _sum?: ClientesSumAggregateInputType
    _min?: ClientesMinAggregateInputType
    _max?: ClientesMaxAggregateInputType
  }

  export type ClientesGroupByOutputType = {
    id_cliente: number
    nombre: string
    apellido: string
    celular: string | null
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  type GetClientesGroupByPayload<T extends clientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientesGroupByOutputType[P]>
            : GetScalarType<T[P], ClientesGroupByOutputType[P]>
        }
      >
    >


  export type clientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    apellido?: boolean
    celular?: boolean
    operacion_ventas?: boolean | clientes$operacion_ventasArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientes"]>

  export type clientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    apellido?: boolean
    celular?: boolean
  }, ExtArgs["result"]["clientes"]>

  export type clientesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    apellido?: boolean
    celular?: boolean
  }, ExtArgs["result"]["clientes"]>

  export type clientesSelectScalar = {
    id_cliente?: boolean
    nombre?: boolean
    apellido?: boolean
    celular?: boolean
  }

  export type clientesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cliente" | "nombre" | "apellido" | "celular", ExtArgs["result"]["clientes"]>
  export type clientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | clientes$operacion_ventasArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type clientesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type clientesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $clientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clientes"
    objects: {
      operacion_ventas: Prisma.$operacion_ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cliente: number
      nombre: string
      apellido: string
      celular: string | null
    }, ExtArgs["result"]["clientes"]>
    composites: {}
  }

  type clientesGetPayload<S extends boolean | null | undefined | clientesDefaultArgs> = $Result.GetResult<Prisma.$clientesPayload, S>

  type clientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<clientesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientesCountAggregateInputType | true
    }

  export interface clientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clientes'], meta: { name: 'clientes' } }
    /**
     * Find zero or one Clientes that matches the filter.
     * @param {clientesFindUniqueArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clientesFindUniqueArgs>(args: SelectSubset<T, clientesFindUniqueArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clientes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {clientesFindUniqueOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clientesFindUniqueOrThrowArgs>(args: SelectSubset<T, clientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindFirstArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clientesFindFirstArgs>(args?: SelectSubset<T, clientesFindFirstArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindFirstOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clientesFindFirstOrThrowArgs>(args?: SelectSubset<T, clientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.clientes.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.clientes.findMany({ take: 10 })
     * 
     * // Only select the `id_cliente`
     * const clientesWithId_clienteOnly = await prisma.clientes.findMany({ select: { id_cliente: true } })
     * 
     */
    findMany<T extends clientesFindManyArgs>(args?: SelectSubset<T, clientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clientes.
     * @param {clientesCreateArgs} args - Arguments to create a Clientes.
     * @example
     * // Create one Clientes
     * const Clientes = await prisma.clientes.create({
     *   data: {
     *     // ... data to create a Clientes
     *   }
     * })
     * 
     */
    create<T extends clientesCreateArgs>(args: SelectSubset<T, clientesCreateArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {clientesCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clientesCreateManyArgs>(args?: SelectSubset<T, clientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {clientesCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id_cliente`
     * const clientesWithId_clienteOnly = await prisma.clientes.createManyAndReturn({
     *   select: { id_cliente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends clientesCreateManyAndReturnArgs>(args?: SelectSubset<T, clientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Clientes.
     * @param {clientesDeleteArgs} args - Arguments to delete one Clientes.
     * @example
     * // Delete one Clientes
     * const Clientes = await prisma.clientes.delete({
     *   where: {
     *     // ... filter to delete one Clientes
     *   }
     * })
     * 
     */
    delete<T extends clientesDeleteArgs>(args: SelectSubset<T, clientesDeleteArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clientes.
     * @param {clientesUpdateArgs} args - Arguments to update one Clientes.
     * @example
     * // Update one Clientes
     * const clientes = await prisma.clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clientesUpdateArgs>(args: SelectSubset<T, clientesUpdateArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {clientesDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clientesDeleteManyArgs>(args?: SelectSubset<T, clientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clientesUpdateManyArgs>(args: SelectSubset<T, clientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {clientesUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `id_cliente`
     * const clientesWithId_clienteOnly = await prisma.clientes.updateManyAndReturn({
     *   select: { id_cliente: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends clientesUpdateManyAndReturnArgs>(args: SelectSubset<T, clientesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Clientes.
     * @param {clientesUpsertArgs} args - Arguments to update or create a Clientes.
     * @example
     * // Update or create a Clientes
     * const clientes = await prisma.clientes.upsert({
     *   create: {
     *     // ... data to create a Clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clientes we want to update
     *   }
     * })
     */
    upsert<T extends clientesUpsertArgs>(args: SelectSubset<T, clientesUpsertArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.clientes.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends clientesCountArgs>(
      args?: Subset<T, clientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientesAggregateArgs>(args: Subset<T, ClientesAggregateArgs>): Prisma.PrismaPromise<GetClientesAggregateType<T>>

    /**
     * Group by Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clientesGroupByArgs['orderBy'] }
        : { orderBy?: clientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clientes model
   */
  readonly fields: clientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion_ventas<T extends clientes$operacion_ventasArgs<ExtArgs> = {}>(args?: Subset<T, clientes$operacion_ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the clientes model
   */
  interface clientesFieldRefs {
    readonly id_cliente: FieldRef<"clientes", 'Int'>
    readonly nombre: FieldRef<"clientes", 'String'>
    readonly apellido: FieldRef<"clientes", 'String'>
    readonly celular: FieldRef<"clientes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * clientes findUnique
   */
  export type clientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where: clientesWhereUniqueInput
  }

  /**
   * clientes findUniqueOrThrow
   */
  export type clientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where: clientesWhereUniqueInput
  }

  /**
   * clientes findFirst
   */
  export type clientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * clientes findFirstOrThrow
   */
  export type clientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * clientes findMany
   */
  export type clientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * clientes create
   */
  export type clientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The data needed to create a clientes.
     */
    data: XOR<clientesCreateInput, clientesUncheckedCreateInput>
  }

  /**
   * clientes createMany
   */
  export type clientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clientes.
     */
    data: clientesCreateManyInput | clientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clientes createManyAndReturn
   */
  export type clientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * The data used to create many clientes.
     */
    data: clientesCreateManyInput | clientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clientes update
   */
  export type clientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The data needed to update a clientes.
     */
    data: XOR<clientesUpdateInput, clientesUncheckedUpdateInput>
    /**
     * Choose, which clientes to update.
     */
    where: clientesWhereUniqueInput
  }

  /**
   * clientes updateMany
   */
  export type clientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clientes.
     */
    data: XOR<clientesUpdateManyMutationInput, clientesUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clientesWhereInput
    /**
     * Limit how many clientes to update.
     */
    limit?: number
  }

  /**
   * clientes updateManyAndReturn
   */
  export type clientesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * The data used to update clientes.
     */
    data: XOR<clientesUpdateManyMutationInput, clientesUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clientesWhereInput
    /**
     * Limit how many clientes to update.
     */
    limit?: number
  }

  /**
   * clientes upsert
   */
  export type clientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The filter to search for the clientes to update in case it exists.
     */
    where: clientesWhereUniqueInput
    /**
     * In case the clientes found by the `where` argument doesn't exist, create a new clientes with this data.
     */
    create: XOR<clientesCreateInput, clientesUncheckedCreateInput>
    /**
     * In case the clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clientesUpdateInput, clientesUncheckedUpdateInput>
  }

  /**
   * clientes delete
   */
  export type clientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter which clientes to delete.
     */
    where: clientesWhereUniqueInput
  }

  /**
   * clientes deleteMany
   */
  export type clientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to delete
     */
    where?: clientesWhereInput
    /**
     * Limit how many clientes to delete.
     */
    limit?: number
  }

  /**
   * clientes.operacion_ventas
   */
  export type clientes$operacion_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    where?: operacion_ventasWhereInput
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    cursor?: operacion_ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Operacion_ventasScalarFieldEnum | Operacion_ventasScalarFieldEnum[]
  }

  /**
   * clientes without action
   */
  export type clientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clientes
     */
    omit?: clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientesInclude<ExtArgs> | null
  }


  /**
   * Model detalle_compra
   */

  export type AggregateDetalle_compra = {
    _count: Detalle_compraCountAggregateOutputType | null
    _avg: Detalle_compraAvgAggregateOutputType | null
    _sum: Detalle_compraSumAggregateOutputType | null
    _min: Detalle_compraMinAggregateOutputType | null
    _max: Detalle_compraMaxAggregateOutputType | null
  }

  export type Detalle_compraAvgAggregateOutputType = {
    id_detalle_compra: number | null
    id_operacion_compra: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_compraSumAggregateOutputType = {
    id_detalle_compra: number | null
    id_operacion_compra: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_compraMinAggregateOutputType = {
    id_detalle_compra: number | null
    id_operacion_compra: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_compraMaxAggregateOutputType = {
    id_detalle_compra: number | null
    id_operacion_compra: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_compraCountAggregateOutputType = {
    id_detalle_compra: number
    id_operacion_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
    _all: number
  }


  export type Detalle_compraAvgAggregateInputType = {
    id_detalle_compra?: true
    id_operacion_compra?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_compraSumAggregateInputType = {
    id_detalle_compra?: true
    id_operacion_compra?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_compraMinAggregateInputType = {
    id_detalle_compra?: true
    id_operacion_compra?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_compraMaxAggregateInputType = {
    id_detalle_compra?: true
    id_operacion_compra?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_compraCountAggregateInputType = {
    id_detalle_compra?: true
    id_operacion_compra?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
    _all?: true
  }

  export type Detalle_compraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_compra to aggregate.
     */
    where?: detalle_compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_compras
    **/
    _count?: true | Detalle_compraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_compraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_compraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_compraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_compraMaxAggregateInputType
  }

  export type GetDetalle_compraAggregateType<T extends Detalle_compraAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_compra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_compra[P]>
      : GetScalarType<T[P], AggregateDetalle_compra[P]>
  }




  export type detalle_compraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_compraWhereInput
    orderBy?: detalle_compraOrderByWithAggregationInput | detalle_compraOrderByWithAggregationInput[]
    by: Detalle_compraScalarFieldEnum[] | Detalle_compraScalarFieldEnum
    having?: detalle_compraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_compraCountAggregateInputType | true
    _avg?: Detalle_compraAvgAggregateInputType
    _sum?: Detalle_compraSumAggregateInputType
    _min?: Detalle_compraMinAggregateInputType
    _max?: Detalle_compraMaxAggregateInputType
  }

  export type Detalle_compraGroupByOutputType = {
    id_detalle_compra: number
    id_operacion_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
    _count: Detalle_compraCountAggregateOutputType | null
    _avg: Detalle_compraAvgAggregateOutputType | null
    _sum: Detalle_compraSumAggregateOutputType | null
    _min: Detalle_compraMinAggregateOutputType | null
    _max: Detalle_compraMaxAggregateOutputType | null
  }

  type GetDetalle_compraGroupByPayload<T extends detalle_compraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_compraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_compraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_compraGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_compraGroupByOutputType[P]>
        }
      >
    >


  export type detalle_compraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_compra?: boolean
    id_operacion_compra?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compra"]>

  export type detalle_compraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_compra?: boolean
    id_operacion_compra?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compra"]>

  export type detalle_compraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_compra?: boolean
    id_operacion_compra?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compra"]>

  export type detalle_compraSelectScalar = {
    id_detalle_compra?: boolean
    id_operacion_compra?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
  }

  export type detalle_compraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_compra" | "id_operacion_compra" | "id_producto" | "cantidad" | "precio_unitario", ExtArgs["result"]["detalle_compra"]>
  export type detalle_compraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type detalle_compraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type detalle_compraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_compras?: boolean | operacion_comprasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }

  export type $detalle_compraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_compra"
    objects: {
      operacion_compras: Prisma.$operacion_comprasPayload<ExtArgs>
      productos: Prisma.$productosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_compra: number
      id_operacion_compra: number
      id_producto: number
      cantidad: number
      precio_unitario: number
    }, ExtArgs["result"]["detalle_compra"]>
    composites: {}
  }

  type detalle_compraGetPayload<S extends boolean | null | undefined | detalle_compraDefaultArgs> = $Result.GetResult<Prisma.$detalle_compraPayload, S>

  type detalle_compraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_compraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_compraCountAggregateInputType | true
    }

  export interface detalle_compraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_compra'], meta: { name: 'detalle_compra' } }
    /**
     * Find zero or one Detalle_compra that matches the filter.
     * @param {detalle_compraFindUniqueArgs} args - Arguments to find a Detalle_compra
     * @example
     * // Get one Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_compraFindUniqueArgs>(args: SelectSubset<T, detalle_compraFindUniqueArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_compra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_compraFindUniqueOrThrowArgs} args - Arguments to find a Detalle_compra
     * @example
     * // Get one Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_compraFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_compraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_compra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraFindFirstArgs} args - Arguments to find a Detalle_compra
     * @example
     * // Get one Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_compraFindFirstArgs>(args?: SelectSubset<T, detalle_compraFindFirstArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_compra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraFindFirstOrThrowArgs} args - Arguments to find a Detalle_compra
     * @example
     * // Get one Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_compraFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_compraFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_compras
     * const detalle_compras = await prisma.detalle_compra.findMany()
     * 
     * // Get first 10 Detalle_compras
     * const detalle_compras = await prisma.detalle_compra.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_compra`
     * const detalle_compraWithId_detalle_compraOnly = await prisma.detalle_compra.findMany({ select: { id_detalle_compra: true } })
     * 
     */
    findMany<T extends detalle_compraFindManyArgs>(args?: SelectSubset<T, detalle_compraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_compra.
     * @param {detalle_compraCreateArgs} args - Arguments to create a Detalle_compra.
     * @example
     * // Create one Detalle_compra
     * const Detalle_compra = await prisma.detalle_compra.create({
     *   data: {
     *     // ... data to create a Detalle_compra
     *   }
     * })
     * 
     */
    create<T extends detalle_compraCreateArgs>(args: SelectSubset<T, detalle_compraCreateArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_compras.
     * @param {detalle_compraCreateManyArgs} args - Arguments to create many Detalle_compras.
     * @example
     * // Create many Detalle_compras
     * const detalle_compra = await prisma.detalle_compra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_compraCreateManyArgs>(args?: SelectSubset<T, detalle_compraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_compras and returns the data saved in the database.
     * @param {detalle_compraCreateManyAndReturnArgs} args - Arguments to create many Detalle_compras.
     * @example
     * // Create many Detalle_compras
     * const detalle_compra = await prisma.detalle_compra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_compras and only return the `id_detalle_compra`
     * const detalle_compraWithId_detalle_compraOnly = await prisma.detalle_compra.createManyAndReturn({
     *   select: { id_detalle_compra: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_compraCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_compraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_compra.
     * @param {detalle_compraDeleteArgs} args - Arguments to delete one Detalle_compra.
     * @example
     * // Delete one Detalle_compra
     * const Detalle_compra = await prisma.detalle_compra.delete({
     *   where: {
     *     // ... filter to delete one Detalle_compra
     *   }
     * })
     * 
     */
    delete<T extends detalle_compraDeleteArgs>(args: SelectSubset<T, detalle_compraDeleteArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_compra.
     * @param {detalle_compraUpdateArgs} args - Arguments to update one Detalle_compra.
     * @example
     * // Update one Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_compraUpdateArgs>(args: SelectSubset<T, detalle_compraUpdateArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_compras.
     * @param {detalle_compraDeleteManyArgs} args - Arguments to filter Detalle_compras to delete.
     * @example
     * // Delete a few Detalle_compras
     * const { count } = await prisma.detalle_compra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_compraDeleteManyArgs>(args?: SelectSubset<T, detalle_compraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_compras
     * const detalle_compra = await prisma.detalle_compra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_compraUpdateManyArgs>(args: SelectSubset<T, detalle_compraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_compras and returns the data updated in the database.
     * @param {detalle_compraUpdateManyAndReturnArgs} args - Arguments to update many Detalle_compras.
     * @example
     * // Update many Detalle_compras
     * const detalle_compra = await prisma.detalle_compra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_compras and only return the `id_detalle_compra`
     * const detalle_compraWithId_detalle_compraOnly = await prisma.detalle_compra.updateManyAndReturn({
     *   select: { id_detalle_compra: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_compraUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_compraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_compra.
     * @param {detalle_compraUpsertArgs} args - Arguments to update or create a Detalle_compra.
     * @example
     * // Update or create a Detalle_compra
     * const detalle_compra = await prisma.detalle_compra.upsert({
     *   create: {
     *     // ... data to create a Detalle_compra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_compra we want to update
     *   }
     * })
     */
    upsert<T extends detalle_compraUpsertArgs>(args: SelectSubset<T, detalle_compraUpsertArgs<ExtArgs>>): Prisma__detalle_compraClient<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraCountArgs} args - Arguments to filter Detalle_compras to count.
     * @example
     * // Count the number of Detalle_compras
     * const count = await prisma.detalle_compra.count({
     *   where: {
     *     // ... the filter for the Detalle_compras we want to count
     *   }
     * })
    **/
    count<T extends detalle_compraCountArgs>(
      args?: Subset<T, detalle_compraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_compraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_compraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_compraAggregateArgs>(args: Subset<T, Detalle_compraAggregateArgs>): Prisma.PrismaPromise<GetDetalle_compraAggregateType<T>>

    /**
     * Group by Detalle_compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_compraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_compraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_compraGroupByArgs['orderBy'] }
        : { orderBy?: detalle_compraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_compraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_compraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_compra model
   */
  readonly fields: detalle_compraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_compra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_compraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion_compras<T extends operacion_comprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacion_comprasDefaultArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productos<T extends productosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productosDefaultArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_compra model
   */
  interface detalle_compraFieldRefs {
    readonly id_detalle_compra: FieldRef<"detalle_compra", 'Int'>
    readonly id_operacion_compra: FieldRef<"detalle_compra", 'Int'>
    readonly id_producto: FieldRef<"detalle_compra", 'Int'>
    readonly cantidad: FieldRef<"detalle_compra", 'Int'>
    readonly precio_unitario: FieldRef<"detalle_compra", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * detalle_compra findUnique
   */
  export type detalle_compraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compra to fetch.
     */
    where: detalle_compraWhereUniqueInput
  }

  /**
   * detalle_compra findUniqueOrThrow
   */
  export type detalle_compraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compra to fetch.
     */
    where: detalle_compraWhereUniqueInput
  }

  /**
   * detalle_compra findFirst
   */
  export type detalle_compraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compra to fetch.
     */
    where?: detalle_compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_compras.
     */
    cursor?: detalle_compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_compras.
     */
    distinct?: Detalle_compraScalarFieldEnum | Detalle_compraScalarFieldEnum[]
  }

  /**
   * detalle_compra findFirstOrThrow
   */
  export type detalle_compraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compra to fetch.
     */
    where?: detalle_compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_compras.
     */
    cursor?: detalle_compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_compras.
     */
    distinct?: Detalle_compraScalarFieldEnum | Detalle_compraScalarFieldEnum[]
  }

  /**
   * detalle_compra findMany
   */
  export type detalle_compraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where?: detalle_compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_compras.
     */
    cursor?: detalle_compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    distinct?: Detalle_compraScalarFieldEnum | Detalle_compraScalarFieldEnum[]
  }

  /**
   * detalle_compra create
   */
  export type detalle_compraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_compra.
     */
    data: XOR<detalle_compraCreateInput, detalle_compraUncheckedCreateInput>
  }

  /**
   * detalle_compra createMany
   */
  export type detalle_compraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_compras.
     */
    data: detalle_compraCreateManyInput | detalle_compraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_compra createManyAndReturn
   */
  export type detalle_compraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_compras.
     */
    data: detalle_compraCreateManyInput | detalle_compraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_compra update
   */
  export type detalle_compraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_compra.
     */
    data: XOR<detalle_compraUpdateInput, detalle_compraUncheckedUpdateInput>
    /**
     * Choose, which detalle_compra to update.
     */
    where: detalle_compraWhereUniqueInput
  }

  /**
   * detalle_compra updateMany
   */
  export type detalle_compraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_compras.
     */
    data: XOR<detalle_compraUpdateManyMutationInput, detalle_compraUncheckedUpdateManyInput>
    /**
     * Filter which detalle_compras to update
     */
    where?: detalle_compraWhereInput
    /**
     * Limit how many detalle_compras to update.
     */
    limit?: number
  }

  /**
   * detalle_compra updateManyAndReturn
   */
  export type detalle_compraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * The data used to update detalle_compras.
     */
    data: XOR<detalle_compraUpdateManyMutationInput, detalle_compraUncheckedUpdateManyInput>
    /**
     * Filter which detalle_compras to update
     */
    where?: detalle_compraWhereInput
    /**
     * Limit how many detalle_compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_compra upsert
   */
  export type detalle_compraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_compra to update in case it exists.
     */
    where: detalle_compraWhereUniqueInput
    /**
     * In case the detalle_compra found by the `where` argument doesn't exist, create a new detalle_compra with this data.
     */
    create: XOR<detalle_compraCreateInput, detalle_compraUncheckedCreateInput>
    /**
     * In case the detalle_compra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_compraUpdateInput, detalle_compraUncheckedUpdateInput>
  }

  /**
   * detalle_compra delete
   */
  export type detalle_compraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    /**
     * Filter which detalle_compra to delete.
     */
    where: detalle_compraWhereUniqueInput
  }

  /**
   * detalle_compra deleteMany
   */
  export type detalle_compraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_compras to delete
     */
    where?: detalle_compraWhereInput
    /**
     * Limit how many detalle_compras to delete.
     */
    limit?: number
  }

  /**
   * detalle_compra without action
   */
  export type detalle_compraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
  }


  /**
   * Model detalle_venta
   */

  export type AggregateDetalle_venta = {
    _count: Detalle_ventaCountAggregateOutputType | null
    _avg: Detalle_ventaAvgAggregateOutputType | null
    _sum: Detalle_ventaSumAggregateOutputType | null
    _min: Detalle_ventaMinAggregateOutputType | null
    _max: Detalle_ventaMaxAggregateOutputType | null
  }

  export type Detalle_ventaAvgAggregateOutputType = {
    id_detalle_venta: number | null
    id_operacion_venta: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_ventaSumAggregateOutputType = {
    id_detalle_venta: number | null
    id_operacion_venta: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_ventaMinAggregateOutputType = {
    id_detalle_venta: number | null
    id_operacion_venta: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_ventaMaxAggregateOutputType = {
    id_detalle_venta: number | null
    id_operacion_venta: number | null
    id_producto: number | null
    cantidad: number | null
    precio_unitario: number | null
  }

  export type Detalle_ventaCountAggregateOutputType = {
    id_detalle_venta: number
    id_operacion_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
    _all: number
  }


  export type Detalle_ventaAvgAggregateInputType = {
    id_detalle_venta?: true
    id_operacion_venta?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventaSumAggregateInputType = {
    id_detalle_venta?: true
    id_operacion_venta?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventaMinAggregateInputType = {
    id_detalle_venta?: true
    id_operacion_venta?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventaMaxAggregateInputType = {
    id_detalle_venta?: true
    id_operacion_venta?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventaCountAggregateInputType = {
    id_detalle_venta?: true
    id_operacion_venta?: true
    id_producto?: true
    cantidad?: true
    precio_unitario?: true
    _all?: true
  }

  export type Detalle_ventaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_venta to aggregate.
     */
    where?: detalle_ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_ventas
    **/
    _count?: true | Detalle_ventaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_ventaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_ventaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_ventaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_ventaMaxAggregateInputType
  }

  export type GetDetalle_ventaAggregateType<T extends Detalle_ventaAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_venta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_venta[P]>
      : GetScalarType<T[P], AggregateDetalle_venta[P]>
  }




  export type detalle_ventaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventaWhereInput
    orderBy?: detalle_ventaOrderByWithAggregationInput | detalle_ventaOrderByWithAggregationInput[]
    by: Detalle_ventaScalarFieldEnum[] | Detalle_ventaScalarFieldEnum
    having?: detalle_ventaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_ventaCountAggregateInputType | true
    _avg?: Detalle_ventaAvgAggregateInputType
    _sum?: Detalle_ventaSumAggregateInputType
    _min?: Detalle_ventaMinAggregateInputType
    _max?: Detalle_ventaMaxAggregateInputType
  }

  export type Detalle_ventaGroupByOutputType = {
    id_detalle_venta: number
    id_operacion_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
    _count: Detalle_ventaCountAggregateOutputType | null
    _avg: Detalle_ventaAvgAggregateOutputType | null
    _sum: Detalle_ventaSumAggregateOutputType | null
    _min: Detalle_ventaMinAggregateOutputType | null
    _max: Detalle_ventaMaxAggregateOutputType | null
  }

  type GetDetalle_ventaGroupByPayload<T extends detalle_ventaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_ventaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_ventaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_ventaGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_ventaGroupByOutputType[P]>
        }
      >
    >


  export type detalle_ventaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_venta?: boolean
    id_operacion_venta?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_venta"]>

  export type detalle_ventaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_venta?: boolean
    id_operacion_venta?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_venta"]>

  export type detalle_ventaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_venta?: boolean
    id_operacion_venta?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_venta"]>

  export type detalle_ventaSelectScalar = {
    id_detalle_venta?: boolean
    id_operacion_venta?: boolean
    id_producto?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
  }

  export type detalle_ventaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_venta" | "id_operacion_venta" | "id_producto" | "cantidad" | "precio_unitario", ExtArgs["result"]["detalle_venta"]>
  export type detalle_ventaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type detalle_ventaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type detalle_ventaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }

  export type $detalle_ventaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_venta"
    objects: {
      operacion_ventas: Prisma.$operacion_ventasPayload<ExtArgs>
      productos: Prisma.$productosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_venta: number
      id_operacion_venta: number
      id_producto: number
      cantidad: number
      precio_unitario: number
    }, ExtArgs["result"]["detalle_venta"]>
    composites: {}
  }

  type detalle_ventaGetPayload<S extends boolean | null | undefined | detalle_ventaDefaultArgs> = $Result.GetResult<Prisma.$detalle_ventaPayload, S>

  type detalle_ventaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_ventaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_ventaCountAggregateInputType | true
    }

  export interface detalle_ventaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_venta'], meta: { name: 'detalle_venta' } }
    /**
     * Find zero or one Detalle_venta that matches the filter.
     * @param {detalle_ventaFindUniqueArgs} args - Arguments to find a Detalle_venta
     * @example
     * // Get one Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_ventaFindUniqueArgs>(args: SelectSubset<T, detalle_ventaFindUniqueArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_ventaFindUniqueOrThrowArgs} args - Arguments to find a Detalle_venta
     * @example
     * // Get one Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_ventaFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_ventaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaFindFirstArgs} args - Arguments to find a Detalle_venta
     * @example
     * // Get one Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_ventaFindFirstArgs>(args?: SelectSubset<T, detalle_ventaFindFirstArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaFindFirstOrThrowArgs} args - Arguments to find a Detalle_venta
     * @example
     * // Get one Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_ventaFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_ventaFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_ventas
     * const detalle_ventas = await prisma.detalle_venta.findMany()
     * 
     * // Get first 10 Detalle_ventas
     * const detalle_ventas = await prisma.detalle_venta.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_venta`
     * const detalle_ventaWithId_detalle_ventaOnly = await prisma.detalle_venta.findMany({ select: { id_detalle_venta: true } })
     * 
     */
    findMany<T extends detalle_ventaFindManyArgs>(args?: SelectSubset<T, detalle_ventaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_venta.
     * @param {detalle_ventaCreateArgs} args - Arguments to create a Detalle_venta.
     * @example
     * // Create one Detalle_venta
     * const Detalle_venta = await prisma.detalle_venta.create({
     *   data: {
     *     // ... data to create a Detalle_venta
     *   }
     * })
     * 
     */
    create<T extends detalle_ventaCreateArgs>(args: SelectSubset<T, detalle_ventaCreateArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_ventas.
     * @param {detalle_ventaCreateManyArgs} args - Arguments to create many Detalle_ventas.
     * @example
     * // Create many Detalle_ventas
     * const detalle_venta = await prisma.detalle_venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_ventaCreateManyArgs>(args?: SelectSubset<T, detalle_ventaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_ventas and returns the data saved in the database.
     * @param {detalle_ventaCreateManyAndReturnArgs} args - Arguments to create many Detalle_ventas.
     * @example
     * // Create many Detalle_ventas
     * const detalle_venta = await prisma.detalle_venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_ventas and only return the `id_detalle_venta`
     * const detalle_ventaWithId_detalle_ventaOnly = await prisma.detalle_venta.createManyAndReturn({
     *   select: { id_detalle_venta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_ventaCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_ventaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_venta.
     * @param {detalle_ventaDeleteArgs} args - Arguments to delete one Detalle_venta.
     * @example
     * // Delete one Detalle_venta
     * const Detalle_venta = await prisma.detalle_venta.delete({
     *   where: {
     *     // ... filter to delete one Detalle_venta
     *   }
     * })
     * 
     */
    delete<T extends detalle_ventaDeleteArgs>(args: SelectSubset<T, detalle_ventaDeleteArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_venta.
     * @param {detalle_ventaUpdateArgs} args - Arguments to update one Detalle_venta.
     * @example
     * // Update one Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_ventaUpdateArgs>(args: SelectSubset<T, detalle_ventaUpdateArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_ventas.
     * @param {detalle_ventaDeleteManyArgs} args - Arguments to filter Detalle_ventas to delete.
     * @example
     * // Delete a few Detalle_ventas
     * const { count } = await prisma.detalle_venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_ventaDeleteManyArgs>(args?: SelectSubset<T, detalle_ventaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_ventas
     * const detalle_venta = await prisma.detalle_venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_ventaUpdateManyArgs>(args: SelectSubset<T, detalle_ventaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_ventas and returns the data updated in the database.
     * @param {detalle_ventaUpdateManyAndReturnArgs} args - Arguments to update many Detalle_ventas.
     * @example
     * // Update many Detalle_ventas
     * const detalle_venta = await prisma.detalle_venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_ventas and only return the `id_detalle_venta`
     * const detalle_ventaWithId_detalle_ventaOnly = await prisma.detalle_venta.updateManyAndReturn({
     *   select: { id_detalle_venta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_ventaUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_ventaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_venta.
     * @param {detalle_ventaUpsertArgs} args - Arguments to update or create a Detalle_venta.
     * @example
     * // Update or create a Detalle_venta
     * const detalle_venta = await prisma.detalle_venta.upsert({
     *   create: {
     *     // ... data to create a Detalle_venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_venta we want to update
     *   }
     * })
     */
    upsert<T extends detalle_ventaUpsertArgs>(args: SelectSubset<T, detalle_ventaUpsertArgs<ExtArgs>>): Prisma__detalle_ventaClient<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaCountArgs} args - Arguments to filter Detalle_ventas to count.
     * @example
     * // Count the number of Detalle_ventas
     * const count = await prisma.detalle_venta.count({
     *   where: {
     *     // ... the filter for the Detalle_ventas we want to count
     *   }
     * })
    **/
    count<T extends detalle_ventaCountArgs>(
      args?: Subset<T, detalle_ventaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_ventaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_ventaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_ventaAggregateArgs>(args: Subset<T, Detalle_ventaAggregateArgs>): Prisma.PrismaPromise<GetDetalle_ventaAggregateType<T>>

    /**
     * Group by Detalle_venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_ventaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_ventaGroupByArgs['orderBy'] }
        : { orderBy?: detalle_ventaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_ventaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_ventaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_venta model
   */
  readonly fields: detalle_ventaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_ventaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion_ventas<T extends operacion_ventasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacion_ventasDefaultArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productos<T extends productosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productosDefaultArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_venta model
   */
  interface detalle_ventaFieldRefs {
    readonly id_detalle_venta: FieldRef<"detalle_venta", 'Int'>
    readonly id_operacion_venta: FieldRef<"detalle_venta", 'Int'>
    readonly id_producto: FieldRef<"detalle_venta", 'Int'>
    readonly cantidad: FieldRef<"detalle_venta", 'Int'>
    readonly precio_unitario: FieldRef<"detalle_venta", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * detalle_venta findUnique
   */
  export type detalle_ventaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_venta to fetch.
     */
    where: detalle_ventaWhereUniqueInput
  }

  /**
   * detalle_venta findUniqueOrThrow
   */
  export type detalle_ventaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_venta to fetch.
     */
    where: detalle_ventaWhereUniqueInput
  }

  /**
   * detalle_venta findFirst
   */
  export type detalle_ventaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_venta to fetch.
     */
    where?: detalle_ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_ventas.
     */
    cursor?: detalle_ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_ventas.
     */
    distinct?: Detalle_ventaScalarFieldEnum | Detalle_ventaScalarFieldEnum[]
  }

  /**
   * detalle_venta findFirstOrThrow
   */
  export type detalle_ventaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_venta to fetch.
     */
    where?: detalle_ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_ventas.
     */
    cursor?: detalle_ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_ventas.
     */
    distinct?: Detalle_ventaScalarFieldEnum | Detalle_ventaScalarFieldEnum[]
  }

  /**
   * detalle_venta findMany
   */
  export type detalle_ventaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where?: detalle_ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_ventas.
     */
    cursor?: detalle_ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    distinct?: Detalle_ventaScalarFieldEnum | Detalle_ventaScalarFieldEnum[]
  }

  /**
   * detalle_venta create
   */
  export type detalle_ventaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_venta.
     */
    data: XOR<detalle_ventaCreateInput, detalle_ventaUncheckedCreateInput>
  }

  /**
   * detalle_venta createMany
   */
  export type detalle_ventaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_ventas.
     */
    data: detalle_ventaCreateManyInput | detalle_ventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_venta createManyAndReturn
   */
  export type detalle_ventaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_ventas.
     */
    data: detalle_ventaCreateManyInput | detalle_ventaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_venta update
   */
  export type detalle_ventaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_venta.
     */
    data: XOR<detalle_ventaUpdateInput, detalle_ventaUncheckedUpdateInput>
    /**
     * Choose, which detalle_venta to update.
     */
    where: detalle_ventaWhereUniqueInput
  }

  /**
   * detalle_venta updateMany
   */
  export type detalle_ventaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_ventas.
     */
    data: XOR<detalle_ventaUpdateManyMutationInput, detalle_ventaUncheckedUpdateManyInput>
    /**
     * Filter which detalle_ventas to update
     */
    where?: detalle_ventaWhereInput
    /**
     * Limit how many detalle_ventas to update.
     */
    limit?: number
  }

  /**
   * detalle_venta updateManyAndReturn
   */
  export type detalle_ventaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * The data used to update detalle_ventas.
     */
    data: XOR<detalle_ventaUpdateManyMutationInput, detalle_ventaUncheckedUpdateManyInput>
    /**
     * Filter which detalle_ventas to update
     */
    where?: detalle_ventaWhereInput
    /**
     * Limit how many detalle_ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_venta upsert
   */
  export type detalle_ventaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_venta to update in case it exists.
     */
    where: detalle_ventaWhereUniqueInput
    /**
     * In case the detalle_venta found by the `where` argument doesn't exist, create a new detalle_venta with this data.
     */
    create: XOR<detalle_ventaCreateInput, detalle_ventaUncheckedCreateInput>
    /**
     * In case the detalle_venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_ventaUpdateInput, detalle_ventaUncheckedUpdateInput>
  }

  /**
   * detalle_venta delete
   */
  export type detalle_ventaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    /**
     * Filter which detalle_venta to delete.
     */
    where: detalle_ventaWhereUniqueInput
  }

  /**
   * detalle_venta deleteMany
   */
  export type detalle_ventaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_ventas to delete
     */
    where?: detalle_ventaWhereInput
    /**
     * Limit how many detalle_ventas to delete.
     */
    limit?: number
  }

  /**
   * detalle_venta without action
   */
  export type detalle_ventaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
  }


  /**
   * Model inventario_movimientos
   */

  export type AggregateInventario_movimientos = {
    _count: Inventario_movimientosCountAggregateOutputType | null
    _avg: Inventario_movimientosAvgAggregateOutputType | null
    _sum: Inventario_movimientosSumAggregateOutputType | null
    _min: Inventario_movimientosMinAggregateOutputType | null
    _max: Inventario_movimientosMaxAggregateOutputType | null
  }

  export type Inventario_movimientosAvgAggregateOutputType = {
    id_movimiento: number | null
    id_operacion: number | null
    id_producto: number | null
    cantidad: number | null
  }

  export type Inventario_movimientosSumAggregateOutputType = {
    id_movimiento: number | null
    id_operacion: number | null
    id_producto: number | null
    cantidad: number | null
  }

  export type Inventario_movimientosMinAggregateOutputType = {
    id_movimiento: number | null
    id_operacion: number | null
    id_producto: number | null
    cantidad: number | null
    fecha: Date | null
    motivo: string | null
  }

  export type Inventario_movimientosMaxAggregateOutputType = {
    id_movimiento: number | null
    id_operacion: number | null
    id_producto: number | null
    cantidad: number | null
    fecha: Date | null
    motivo: string | null
  }

  export type Inventario_movimientosCountAggregateOutputType = {
    id_movimiento: number
    id_operacion: number
    id_producto: number
    cantidad: number
    fecha: number
    motivo: number
    _all: number
  }


  export type Inventario_movimientosAvgAggregateInputType = {
    id_movimiento?: true
    id_operacion?: true
    id_producto?: true
    cantidad?: true
  }

  export type Inventario_movimientosSumAggregateInputType = {
    id_movimiento?: true
    id_operacion?: true
    id_producto?: true
    cantidad?: true
  }

  export type Inventario_movimientosMinAggregateInputType = {
    id_movimiento?: true
    id_operacion?: true
    id_producto?: true
    cantidad?: true
    fecha?: true
    motivo?: true
  }

  export type Inventario_movimientosMaxAggregateInputType = {
    id_movimiento?: true
    id_operacion?: true
    id_producto?: true
    cantidad?: true
    fecha?: true
    motivo?: true
  }

  export type Inventario_movimientosCountAggregateInputType = {
    id_movimiento?: true
    id_operacion?: true
    id_producto?: true
    cantidad?: true
    fecha?: true
    motivo?: true
    _all?: true
  }

  export type Inventario_movimientosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inventario_movimientos to aggregate.
     */
    where?: inventario_movimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inventario_movimientos to fetch.
     */
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: inventario_movimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inventario_movimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inventario_movimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inventario_movimientos
    **/
    _count?: true | Inventario_movimientosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Inventario_movimientosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Inventario_movimientosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Inventario_movimientosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Inventario_movimientosMaxAggregateInputType
  }

  export type GetInventario_movimientosAggregateType<T extends Inventario_movimientosAggregateArgs> = {
        [P in keyof T & keyof AggregateInventario_movimientos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventario_movimientos[P]>
      : GetScalarType<T[P], AggregateInventario_movimientos[P]>
  }




  export type inventario_movimientosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inventario_movimientosWhereInput
    orderBy?: inventario_movimientosOrderByWithAggregationInput | inventario_movimientosOrderByWithAggregationInput[]
    by: Inventario_movimientosScalarFieldEnum[] | Inventario_movimientosScalarFieldEnum
    having?: inventario_movimientosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Inventario_movimientosCountAggregateInputType | true
    _avg?: Inventario_movimientosAvgAggregateInputType
    _sum?: Inventario_movimientosSumAggregateInputType
    _min?: Inventario_movimientosMinAggregateInputType
    _max?: Inventario_movimientosMaxAggregateInputType
  }

  export type Inventario_movimientosGroupByOutputType = {
    id_movimiento: number
    id_operacion: number
    id_producto: number
    cantidad: number
    fecha: Date
    motivo: string
    _count: Inventario_movimientosCountAggregateOutputType | null
    _avg: Inventario_movimientosAvgAggregateOutputType | null
    _sum: Inventario_movimientosSumAggregateOutputType | null
    _min: Inventario_movimientosMinAggregateOutputType | null
    _max: Inventario_movimientosMaxAggregateOutputType | null
  }

  type GetInventario_movimientosGroupByPayload<T extends inventario_movimientosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Inventario_movimientosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Inventario_movimientosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Inventario_movimientosGroupByOutputType[P]>
            : GetScalarType<T[P], Inventario_movimientosGroupByOutputType[P]>
        }
      >
    >


  export type inventario_movimientosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimiento?: boolean
    id_operacion?: boolean
    id_producto?: boolean
    cantidad?: boolean
    fecha?: boolean
    motivo?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario_movimientos"]>

  export type inventario_movimientosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimiento?: boolean
    id_operacion?: boolean
    id_producto?: boolean
    cantidad?: boolean
    fecha?: boolean
    motivo?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario_movimientos"]>

  export type inventario_movimientosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimiento?: boolean
    id_operacion?: boolean
    id_producto?: boolean
    cantidad?: boolean
    fecha?: boolean
    motivo?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario_movimientos"]>

  export type inventario_movimientosSelectScalar = {
    id_movimiento?: boolean
    id_operacion?: boolean
    id_producto?: boolean
    cantidad?: boolean
    fecha?: boolean
    motivo?: boolean
  }

  export type inventario_movimientosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_movimiento" | "id_operacion" | "id_producto" | "cantidad" | "fecha" | "motivo", ExtArgs["result"]["inventario_movimientos"]>
  export type inventario_movimientosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type inventario_movimientosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type inventario_movimientosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }

  export type $inventario_movimientosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "inventario_movimientos"
    objects: {
      operacion: Prisma.$operacionPayload<ExtArgs>
      productos: Prisma.$productosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_movimiento: number
      id_operacion: number
      id_producto: number
      cantidad: number
      fecha: Date
      motivo: string
    }, ExtArgs["result"]["inventario_movimientos"]>
    composites: {}
  }

  type inventario_movimientosGetPayload<S extends boolean | null | undefined | inventario_movimientosDefaultArgs> = $Result.GetResult<Prisma.$inventario_movimientosPayload, S>

  type inventario_movimientosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<inventario_movimientosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Inventario_movimientosCountAggregateInputType | true
    }

  export interface inventario_movimientosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['inventario_movimientos'], meta: { name: 'inventario_movimientos' } }
    /**
     * Find zero or one Inventario_movimientos that matches the filter.
     * @param {inventario_movimientosFindUniqueArgs} args - Arguments to find a Inventario_movimientos
     * @example
     * // Get one Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends inventario_movimientosFindUniqueArgs>(args: SelectSubset<T, inventario_movimientosFindUniqueArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inventario_movimientos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {inventario_movimientosFindUniqueOrThrowArgs} args - Arguments to find a Inventario_movimientos
     * @example
     * // Get one Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends inventario_movimientosFindUniqueOrThrowArgs>(args: SelectSubset<T, inventario_movimientosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario_movimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosFindFirstArgs} args - Arguments to find a Inventario_movimientos
     * @example
     * // Get one Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends inventario_movimientosFindFirstArgs>(args?: SelectSubset<T, inventario_movimientosFindFirstArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario_movimientos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosFindFirstOrThrowArgs} args - Arguments to find a Inventario_movimientos
     * @example
     * // Get one Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends inventario_movimientosFindFirstOrThrowArgs>(args?: SelectSubset<T, inventario_movimientosFindFirstOrThrowArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inventario_movimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findMany()
     * 
     * // Get first 10 Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.findMany({ take: 10 })
     * 
     * // Only select the `id_movimiento`
     * const inventario_movimientosWithId_movimientoOnly = await prisma.inventario_movimientos.findMany({ select: { id_movimiento: true } })
     * 
     */
    findMany<T extends inventario_movimientosFindManyArgs>(args?: SelectSubset<T, inventario_movimientosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inventario_movimientos.
     * @param {inventario_movimientosCreateArgs} args - Arguments to create a Inventario_movimientos.
     * @example
     * // Create one Inventario_movimientos
     * const Inventario_movimientos = await prisma.inventario_movimientos.create({
     *   data: {
     *     // ... data to create a Inventario_movimientos
     *   }
     * })
     * 
     */
    create<T extends inventario_movimientosCreateArgs>(args: SelectSubset<T, inventario_movimientosCreateArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inventario_movimientos.
     * @param {inventario_movimientosCreateManyArgs} args - Arguments to create many Inventario_movimientos.
     * @example
     * // Create many Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends inventario_movimientosCreateManyArgs>(args?: SelectSubset<T, inventario_movimientosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inventario_movimientos and returns the data saved in the database.
     * @param {inventario_movimientosCreateManyAndReturnArgs} args - Arguments to create many Inventario_movimientos.
     * @example
     * // Create many Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inventario_movimientos and only return the `id_movimiento`
     * const inventario_movimientosWithId_movimientoOnly = await prisma.inventario_movimientos.createManyAndReturn({
     *   select: { id_movimiento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends inventario_movimientosCreateManyAndReturnArgs>(args?: SelectSubset<T, inventario_movimientosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inventario_movimientos.
     * @param {inventario_movimientosDeleteArgs} args - Arguments to delete one Inventario_movimientos.
     * @example
     * // Delete one Inventario_movimientos
     * const Inventario_movimientos = await prisma.inventario_movimientos.delete({
     *   where: {
     *     // ... filter to delete one Inventario_movimientos
     *   }
     * })
     * 
     */
    delete<T extends inventario_movimientosDeleteArgs>(args: SelectSubset<T, inventario_movimientosDeleteArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inventario_movimientos.
     * @param {inventario_movimientosUpdateArgs} args - Arguments to update one Inventario_movimientos.
     * @example
     * // Update one Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends inventario_movimientosUpdateArgs>(args: SelectSubset<T, inventario_movimientosUpdateArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inventario_movimientos.
     * @param {inventario_movimientosDeleteManyArgs} args - Arguments to filter Inventario_movimientos to delete.
     * @example
     * // Delete a few Inventario_movimientos
     * const { count } = await prisma.inventario_movimientos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends inventario_movimientosDeleteManyArgs>(args?: SelectSubset<T, inventario_movimientosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventario_movimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends inventario_movimientosUpdateManyArgs>(args: SelectSubset<T, inventario_movimientosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventario_movimientos and returns the data updated in the database.
     * @param {inventario_movimientosUpdateManyAndReturnArgs} args - Arguments to update many Inventario_movimientos.
     * @example
     * // Update many Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inventario_movimientos and only return the `id_movimiento`
     * const inventario_movimientosWithId_movimientoOnly = await prisma.inventario_movimientos.updateManyAndReturn({
     *   select: { id_movimiento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends inventario_movimientosUpdateManyAndReturnArgs>(args: SelectSubset<T, inventario_movimientosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inventario_movimientos.
     * @param {inventario_movimientosUpsertArgs} args - Arguments to update or create a Inventario_movimientos.
     * @example
     * // Update or create a Inventario_movimientos
     * const inventario_movimientos = await prisma.inventario_movimientos.upsert({
     *   create: {
     *     // ... data to create a Inventario_movimientos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inventario_movimientos we want to update
     *   }
     * })
     */
    upsert<T extends inventario_movimientosUpsertArgs>(args: SelectSubset<T, inventario_movimientosUpsertArgs<ExtArgs>>): Prisma__inventario_movimientosClient<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inventario_movimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosCountArgs} args - Arguments to filter Inventario_movimientos to count.
     * @example
     * // Count the number of Inventario_movimientos
     * const count = await prisma.inventario_movimientos.count({
     *   where: {
     *     // ... the filter for the Inventario_movimientos we want to count
     *   }
     * })
    **/
    count<T extends inventario_movimientosCountArgs>(
      args?: Subset<T, inventario_movimientosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Inventario_movimientosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inventario_movimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Inventario_movimientosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Inventario_movimientosAggregateArgs>(args: Subset<T, Inventario_movimientosAggregateArgs>): Prisma.PrismaPromise<GetInventario_movimientosAggregateType<T>>

    /**
     * Group by Inventario_movimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inventario_movimientosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends inventario_movimientosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: inventario_movimientosGroupByArgs['orderBy'] }
        : { orderBy?: inventario_movimientosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, inventario_movimientosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventario_movimientosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the inventario_movimientos model
   */
  readonly fields: inventario_movimientosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for inventario_movimientos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__inventario_movimientosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion<T extends operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacionDefaultArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productos<T extends productosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productosDefaultArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the inventario_movimientos model
   */
  interface inventario_movimientosFieldRefs {
    readonly id_movimiento: FieldRef<"inventario_movimientos", 'Int'>
    readonly id_operacion: FieldRef<"inventario_movimientos", 'Int'>
    readonly id_producto: FieldRef<"inventario_movimientos", 'Int'>
    readonly cantidad: FieldRef<"inventario_movimientos", 'Int'>
    readonly fecha: FieldRef<"inventario_movimientos", 'DateTime'>
    readonly motivo: FieldRef<"inventario_movimientos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * inventario_movimientos findUnique
   */
  export type inventario_movimientosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter, which inventario_movimientos to fetch.
     */
    where: inventario_movimientosWhereUniqueInput
  }

  /**
   * inventario_movimientos findUniqueOrThrow
   */
  export type inventario_movimientosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter, which inventario_movimientos to fetch.
     */
    where: inventario_movimientosWhereUniqueInput
  }

  /**
   * inventario_movimientos findFirst
   */
  export type inventario_movimientosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter, which inventario_movimientos to fetch.
     */
    where?: inventario_movimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inventario_movimientos to fetch.
     */
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inventario_movimientos.
     */
    cursor?: inventario_movimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inventario_movimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inventario_movimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inventario_movimientos.
     */
    distinct?: Inventario_movimientosScalarFieldEnum | Inventario_movimientosScalarFieldEnum[]
  }

  /**
   * inventario_movimientos findFirstOrThrow
   */
  export type inventario_movimientosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter, which inventario_movimientos to fetch.
     */
    where?: inventario_movimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inventario_movimientos to fetch.
     */
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inventario_movimientos.
     */
    cursor?: inventario_movimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inventario_movimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inventario_movimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inventario_movimientos.
     */
    distinct?: Inventario_movimientosScalarFieldEnum | Inventario_movimientosScalarFieldEnum[]
  }

  /**
   * inventario_movimientos findMany
   */
  export type inventario_movimientosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter, which inventario_movimientos to fetch.
     */
    where?: inventario_movimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inventario_movimientos to fetch.
     */
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inventario_movimientos.
     */
    cursor?: inventario_movimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inventario_movimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inventario_movimientos.
     */
    skip?: number
    distinct?: Inventario_movimientosScalarFieldEnum | Inventario_movimientosScalarFieldEnum[]
  }

  /**
   * inventario_movimientos create
   */
  export type inventario_movimientosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * The data needed to create a inventario_movimientos.
     */
    data: XOR<inventario_movimientosCreateInput, inventario_movimientosUncheckedCreateInput>
  }

  /**
   * inventario_movimientos createMany
   */
  export type inventario_movimientosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many inventario_movimientos.
     */
    data: inventario_movimientosCreateManyInput | inventario_movimientosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inventario_movimientos createManyAndReturn
   */
  export type inventario_movimientosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * The data used to create many inventario_movimientos.
     */
    data: inventario_movimientosCreateManyInput | inventario_movimientosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * inventario_movimientos update
   */
  export type inventario_movimientosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * The data needed to update a inventario_movimientos.
     */
    data: XOR<inventario_movimientosUpdateInput, inventario_movimientosUncheckedUpdateInput>
    /**
     * Choose, which inventario_movimientos to update.
     */
    where: inventario_movimientosWhereUniqueInput
  }

  /**
   * inventario_movimientos updateMany
   */
  export type inventario_movimientosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update inventario_movimientos.
     */
    data: XOR<inventario_movimientosUpdateManyMutationInput, inventario_movimientosUncheckedUpdateManyInput>
    /**
     * Filter which inventario_movimientos to update
     */
    where?: inventario_movimientosWhereInput
    /**
     * Limit how many inventario_movimientos to update.
     */
    limit?: number
  }

  /**
   * inventario_movimientos updateManyAndReturn
   */
  export type inventario_movimientosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * The data used to update inventario_movimientos.
     */
    data: XOR<inventario_movimientosUpdateManyMutationInput, inventario_movimientosUncheckedUpdateManyInput>
    /**
     * Filter which inventario_movimientos to update
     */
    where?: inventario_movimientosWhereInput
    /**
     * Limit how many inventario_movimientos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * inventario_movimientos upsert
   */
  export type inventario_movimientosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * The filter to search for the inventario_movimientos to update in case it exists.
     */
    where: inventario_movimientosWhereUniqueInput
    /**
     * In case the inventario_movimientos found by the `where` argument doesn't exist, create a new inventario_movimientos with this data.
     */
    create: XOR<inventario_movimientosCreateInput, inventario_movimientosUncheckedCreateInput>
    /**
     * In case the inventario_movimientos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<inventario_movimientosUpdateInput, inventario_movimientosUncheckedUpdateInput>
  }

  /**
   * inventario_movimientos delete
   */
  export type inventario_movimientosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    /**
     * Filter which inventario_movimientos to delete.
     */
    where: inventario_movimientosWhereUniqueInput
  }

  /**
   * inventario_movimientos deleteMany
   */
  export type inventario_movimientosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inventario_movimientos to delete
     */
    where?: inventario_movimientosWhereInput
    /**
     * Limit how many inventario_movimientos to delete.
     */
    limit?: number
  }

  /**
   * inventario_movimientos without action
   */
  export type inventario_movimientosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
  }


  /**
   * Model operacion
   */

  export type AggregateOperacion = {
    _count: OperacionCountAggregateOutputType | null
    _avg: OperacionAvgAggregateOutputType | null
    _sum: OperacionSumAggregateOutputType | null
    _min: OperacionMinAggregateOutputType | null
    _max: OperacionMaxAggregateOutputType | null
  }

  export type OperacionAvgAggregateOutputType = {
    id_operacion: number | null
    id_tipo_operacion: number | null
  }

  export type OperacionSumAggregateOutputType = {
    id_operacion: number | null
    id_tipo_operacion: number | null
  }

  export type OperacionMinAggregateOutputType = {
    id_operacion: number | null
    id_tipo_operacion: number | null
    estado: string | null
  }

  export type OperacionMaxAggregateOutputType = {
    id_operacion: number | null
    id_tipo_operacion: number | null
    estado: string | null
  }

  export type OperacionCountAggregateOutputType = {
    id_operacion: number
    id_tipo_operacion: number
    estado: number
    _all: number
  }


  export type OperacionAvgAggregateInputType = {
    id_operacion?: true
    id_tipo_operacion?: true
  }

  export type OperacionSumAggregateInputType = {
    id_operacion?: true
    id_tipo_operacion?: true
  }

  export type OperacionMinAggregateInputType = {
    id_operacion?: true
    id_tipo_operacion?: true
    estado?: true
  }

  export type OperacionMaxAggregateInputType = {
    id_operacion?: true
    id_tipo_operacion?: true
    estado?: true
  }

  export type OperacionCountAggregateInputType = {
    id_operacion?: true
    id_tipo_operacion?: true
    estado?: true
    _all?: true
  }

  export type OperacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion to aggregate.
     */
    where?: operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacions to fetch.
     */
    orderBy?: operacionOrderByWithRelationInput | operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned operacions
    **/
    _count?: true | OperacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OperacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OperacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OperacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OperacionMaxAggregateInputType
  }

  export type GetOperacionAggregateType<T extends OperacionAggregateArgs> = {
        [P in keyof T & keyof AggregateOperacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperacion[P]>
      : GetScalarType<T[P], AggregateOperacion[P]>
  }




  export type operacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacionWhereInput
    orderBy?: operacionOrderByWithAggregationInput | operacionOrderByWithAggregationInput[]
    by: OperacionScalarFieldEnum[] | OperacionScalarFieldEnum
    having?: operacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OperacionCountAggregateInputType | true
    _avg?: OperacionAvgAggregateInputType
    _sum?: OperacionSumAggregateInputType
    _min?: OperacionMinAggregateInputType
    _max?: OperacionMaxAggregateInputType
  }

  export type OperacionGroupByOutputType = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    _count: OperacionCountAggregateOutputType | null
    _avg: OperacionAvgAggregateOutputType | null
    _sum: OperacionSumAggregateOutputType | null
    _min: OperacionMinAggregateOutputType | null
    _max: OperacionMaxAggregateOutputType | null
  }

  type GetOperacionGroupByPayload<T extends operacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OperacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OperacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OperacionGroupByOutputType[P]>
            : GetScalarType<T[P], OperacionGroupByOutputType[P]>
        }
      >
    >


  export type operacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion?: boolean
    id_tipo_operacion?: boolean
    estado?: boolean
    asientos_contables?: boolean | operacion$asientos_contablesArgs<ExtArgs>
    inventario_movimientos?: boolean | operacion$inventario_movimientosArgs<ExtArgs>
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
    operacion_compras?: boolean | operacion$operacion_comprasArgs<ExtArgs>
    operacion_gastos?: boolean | operacion$operacion_gastosArgs<ExtArgs>
    operacion_ventas?: boolean | operacion$operacion_ventasArgs<ExtArgs>
    _count?: boolean | OperacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion"]>

  export type operacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion?: boolean
    id_tipo_operacion?: boolean
    estado?: boolean
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion"]>

  export type operacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion?: boolean
    id_tipo_operacion?: boolean
    estado?: boolean
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion"]>

  export type operacionSelectScalar = {
    id_operacion?: boolean
    id_tipo_operacion?: boolean
    estado?: boolean
  }

  export type operacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_operacion" | "id_tipo_operacion" | "estado", ExtArgs["result"]["operacion"]>
  export type operacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asientos_contables?: boolean | operacion$asientos_contablesArgs<ExtArgs>
    inventario_movimientos?: boolean | operacion$inventario_movimientosArgs<ExtArgs>
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
    operacion_compras?: boolean | operacion$operacion_comprasArgs<ExtArgs>
    operacion_gastos?: boolean | operacion$operacion_gastosArgs<ExtArgs>
    operacion_ventas?: boolean | operacion$operacion_ventasArgs<ExtArgs>
    _count?: boolean | OperacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type operacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
  }
  export type operacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_operacion?: boolean | tipo_operacionDefaultArgs<ExtArgs>
  }

  export type $operacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "operacion"
    objects: {
      asientos_contables: Prisma.$asientos_contablesPayload<ExtArgs>[]
      inventario_movimientos: Prisma.$inventario_movimientosPayload<ExtArgs>[]
      tipo_operacion: Prisma.$tipo_operacionPayload<ExtArgs>
      operacion_compras: Prisma.$operacion_comprasPayload<ExtArgs>[]
      operacion_gastos: Prisma.$operacion_gastosPayload<ExtArgs>[]
      operacion_ventas: Prisma.$operacion_ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_operacion: number
      id_tipo_operacion: number
      estado: string
    }, ExtArgs["result"]["operacion"]>
    composites: {}
  }

  type operacionGetPayload<S extends boolean | null | undefined | operacionDefaultArgs> = $Result.GetResult<Prisma.$operacionPayload, S>

  type operacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<operacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OperacionCountAggregateInputType | true
    }

  export interface operacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['operacion'], meta: { name: 'operacion' } }
    /**
     * Find zero or one Operacion that matches the filter.
     * @param {operacionFindUniqueArgs} args - Arguments to find a Operacion
     * @example
     * // Get one Operacion
     * const operacion = await prisma.operacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends operacionFindUniqueArgs>(args: SelectSubset<T, operacionFindUniqueArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Operacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {operacionFindUniqueOrThrowArgs} args - Arguments to find a Operacion
     * @example
     * // Get one Operacion
     * const operacion = await prisma.operacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends operacionFindUniqueOrThrowArgs>(args: SelectSubset<T, operacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionFindFirstArgs} args - Arguments to find a Operacion
     * @example
     * // Get one Operacion
     * const operacion = await prisma.operacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends operacionFindFirstArgs>(args?: SelectSubset<T, operacionFindFirstArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionFindFirstOrThrowArgs} args - Arguments to find a Operacion
     * @example
     * // Get one Operacion
     * const operacion = await prisma.operacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends operacionFindFirstOrThrowArgs>(args?: SelectSubset<T, operacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Operacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Operacions
     * const operacions = await prisma.operacion.findMany()
     * 
     * // Get first 10 Operacions
     * const operacions = await prisma.operacion.findMany({ take: 10 })
     * 
     * // Only select the `id_operacion`
     * const operacionWithId_operacionOnly = await prisma.operacion.findMany({ select: { id_operacion: true } })
     * 
     */
    findMany<T extends operacionFindManyArgs>(args?: SelectSubset<T, operacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Operacion.
     * @param {operacionCreateArgs} args - Arguments to create a Operacion.
     * @example
     * // Create one Operacion
     * const Operacion = await prisma.operacion.create({
     *   data: {
     *     // ... data to create a Operacion
     *   }
     * })
     * 
     */
    create<T extends operacionCreateArgs>(args: SelectSubset<T, operacionCreateArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Operacions.
     * @param {operacionCreateManyArgs} args - Arguments to create many Operacions.
     * @example
     * // Create many Operacions
     * const operacion = await prisma.operacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends operacionCreateManyArgs>(args?: SelectSubset<T, operacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Operacions and returns the data saved in the database.
     * @param {operacionCreateManyAndReturnArgs} args - Arguments to create many Operacions.
     * @example
     * // Create many Operacions
     * const operacion = await prisma.operacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Operacions and only return the `id_operacion`
     * const operacionWithId_operacionOnly = await prisma.operacion.createManyAndReturn({
     *   select: { id_operacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends operacionCreateManyAndReturnArgs>(args?: SelectSubset<T, operacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Operacion.
     * @param {operacionDeleteArgs} args - Arguments to delete one Operacion.
     * @example
     * // Delete one Operacion
     * const Operacion = await prisma.operacion.delete({
     *   where: {
     *     // ... filter to delete one Operacion
     *   }
     * })
     * 
     */
    delete<T extends operacionDeleteArgs>(args: SelectSubset<T, operacionDeleteArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Operacion.
     * @param {operacionUpdateArgs} args - Arguments to update one Operacion.
     * @example
     * // Update one Operacion
     * const operacion = await prisma.operacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends operacionUpdateArgs>(args: SelectSubset<T, operacionUpdateArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Operacions.
     * @param {operacionDeleteManyArgs} args - Arguments to filter Operacions to delete.
     * @example
     * // Delete a few Operacions
     * const { count } = await prisma.operacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends operacionDeleteManyArgs>(args?: SelectSubset<T, operacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Operacions
     * const operacion = await prisma.operacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends operacionUpdateManyArgs>(args: SelectSubset<T, operacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacions and returns the data updated in the database.
     * @param {operacionUpdateManyAndReturnArgs} args - Arguments to update many Operacions.
     * @example
     * // Update many Operacions
     * const operacion = await prisma.operacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Operacions and only return the `id_operacion`
     * const operacionWithId_operacionOnly = await prisma.operacion.updateManyAndReturn({
     *   select: { id_operacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends operacionUpdateManyAndReturnArgs>(args: SelectSubset<T, operacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Operacion.
     * @param {operacionUpsertArgs} args - Arguments to update or create a Operacion.
     * @example
     * // Update or create a Operacion
     * const operacion = await prisma.operacion.upsert({
     *   create: {
     *     // ... data to create a Operacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Operacion we want to update
     *   }
     * })
     */
    upsert<T extends operacionUpsertArgs>(args: SelectSubset<T, operacionUpsertArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Operacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionCountArgs} args - Arguments to filter Operacions to count.
     * @example
     * // Count the number of Operacions
     * const count = await prisma.operacion.count({
     *   where: {
     *     // ... the filter for the Operacions we want to count
     *   }
     * })
    **/
    count<T extends operacionCountArgs>(
      args?: Subset<T, operacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OperacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Operacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OperacionAggregateArgs>(args: Subset<T, OperacionAggregateArgs>): Prisma.PrismaPromise<GetOperacionAggregateType<T>>

    /**
     * Group by Operacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends operacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: operacionGroupByArgs['orderBy'] }
        : { orderBy?: operacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, operacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the operacion model
   */
  readonly fields: operacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for operacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__operacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asientos_contables<T extends operacion$asientos_contablesArgs<ExtArgs> = {}>(args?: Subset<T, operacion$asientos_contablesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$asientos_contablesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inventario_movimientos<T extends operacion$inventario_movimientosArgs<ExtArgs> = {}>(args?: Subset<T, operacion$inventario_movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tipo_operacion<T extends tipo_operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_operacionDefaultArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    operacion_compras<T extends operacion$operacion_comprasArgs<ExtArgs> = {}>(args?: Subset<T, operacion$operacion_comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    operacion_gastos<T extends operacion$operacion_gastosArgs<ExtArgs> = {}>(args?: Subset<T, operacion$operacion_gastosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    operacion_ventas<T extends operacion$operacion_ventasArgs<ExtArgs> = {}>(args?: Subset<T, operacion$operacion_ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the operacion model
   */
  interface operacionFieldRefs {
    readonly id_operacion: FieldRef<"operacion", 'Int'>
    readonly id_tipo_operacion: FieldRef<"operacion", 'Int'>
    readonly estado: FieldRef<"operacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * operacion findUnique
   */
  export type operacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter, which operacion to fetch.
     */
    where: operacionWhereUniqueInput
  }

  /**
   * operacion findUniqueOrThrow
   */
  export type operacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter, which operacion to fetch.
     */
    where: operacionWhereUniqueInput
  }

  /**
   * operacion findFirst
   */
  export type operacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter, which operacion to fetch.
     */
    where?: operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacions to fetch.
     */
    orderBy?: operacionOrderByWithRelationInput | operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacions.
     */
    cursor?: operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacions.
     */
    distinct?: OperacionScalarFieldEnum | OperacionScalarFieldEnum[]
  }

  /**
   * operacion findFirstOrThrow
   */
  export type operacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter, which operacion to fetch.
     */
    where?: operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacions to fetch.
     */
    orderBy?: operacionOrderByWithRelationInput | operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacions.
     */
    cursor?: operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacions.
     */
    distinct?: OperacionScalarFieldEnum | OperacionScalarFieldEnum[]
  }

  /**
   * operacion findMany
   */
  export type operacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter, which operacions to fetch.
     */
    where?: operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacions to fetch.
     */
    orderBy?: operacionOrderByWithRelationInput | operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing operacions.
     */
    cursor?: operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacions.
     */
    skip?: number
    distinct?: OperacionScalarFieldEnum | OperacionScalarFieldEnum[]
  }

  /**
   * operacion create
   */
  export type operacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * The data needed to create a operacion.
     */
    data: XOR<operacionCreateInput, operacionUncheckedCreateInput>
  }

  /**
   * operacion createMany
   */
  export type operacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many operacions.
     */
    data: operacionCreateManyInput | operacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * operacion createManyAndReturn
   */
  export type operacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * The data used to create many operacions.
     */
    data: operacionCreateManyInput | operacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion update
   */
  export type operacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * The data needed to update a operacion.
     */
    data: XOR<operacionUpdateInput, operacionUncheckedUpdateInput>
    /**
     * Choose, which operacion to update.
     */
    where: operacionWhereUniqueInput
  }

  /**
   * operacion updateMany
   */
  export type operacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update operacions.
     */
    data: XOR<operacionUpdateManyMutationInput, operacionUncheckedUpdateManyInput>
    /**
     * Filter which operacions to update
     */
    where?: operacionWhereInput
    /**
     * Limit how many operacions to update.
     */
    limit?: number
  }

  /**
   * operacion updateManyAndReturn
   */
  export type operacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * The data used to update operacions.
     */
    data: XOR<operacionUpdateManyMutationInput, operacionUncheckedUpdateManyInput>
    /**
     * Filter which operacions to update
     */
    where?: operacionWhereInput
    /**
     * Limit how many operacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion upsert
   */
  export type operacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * The filter to search for the operacion to update in case it exists.
     */
    where: operacionWhereUniqueInput
    /**
     * In case the operacion found by the `where` argument doesn't exist, create a new operacion with this data.
     */
    create: XOR<operacionCreateInput, operacionUncheckedCreateInput>
    /**
     * In case the operacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<operacionUpdateInput, operacionUncheckedUpdateInput>
  }

  /**
   * operacion delete
   */
  export type operacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    /**
     * Filter which operacion to delete.
     */
    where: operacionWhereUniqueInput
  }

  /**
   * operacion deleteMany
   */
  export type operacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacions to delete
     */
    where?: operacionWhereInput
    /**
     * Limit how many operacions to delete.
     */
    limit?: number
  }

  /**
   * operacion.asientos_contables
   */
  export type operacion$asientos_contablesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the asientos_contables
     */
    select?: asientos_contablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the asientos_contables
     */
    omit?: asientos_contablesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: asientos_contablesInclude<ExtArgs> | null
    where?: asientos_contablesWhereInput
    orderBy?: asientos_contablesOrderByWithRelationInput | asientos_contablesOrderByWithRelationInput[]
    cursor?: asientos_contablesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Asientos_contablesScalarFieldEnum | Asientos_contablesScalarFieldEnum[]
  }

  /**
   * operacion.inventario_movimientos
   */
  export type operacion$inventario_movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    where?: inventario_movimientosWhereInput
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    cursor?: inventario_movimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Inventario_movimientosScalarFieldEnum | Inventario_movimientosScalarFieldEnum[]
  }

  /**
   * operacion.operacion_compras
   */
  export type operacion$operacion_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    where?: operacion_comprasWhereInput
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    cursor?: operacion_comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Operacion_comprasScalarFieldEnum | Operacion_comprasScalarFieldEnum[]
  }

  /**
   * operacion.operacion_gastos
   */
  export type operacion$operacion_gastosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    where?: operacion_gastosWhereInput
    orderBy?: operacion_gastosOrderByWithRelationInput | operacion_gastosOrderByWithRelationInput[]
    cursor?: operacion_gastosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Operacion_gastosScalarFieldEnum | Operacion_gastosScalarFieldEnum[]
  }

  /**
   * operacion.operacion_ventas
   */
  export type operacion$operacion_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    where?: operacion_ventasWhereInput
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    cursor?: operacion_ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Operacion_ventasScalarFieldEnum | Operacion_ventasScalarFieldEnum[]
  }

  /**
   * operacion without action
   */
  export type operacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
  }


  /**
   * Model operacion_compras
   */

  export type AggregateOperacion_compras = {
    _count: Operacion_comprasCountAggregateOutputType | null
    _avg: Operacion_comprasAvgAggregateOutputType | null
    _sum: Operacion_comprasSumAggregateOutputType | null
    _min: Operacion_comprasMinAggregateOutputType | null
    _max: Operacion_comprasMaxAggregateOutputType | null
  }

  export type Operacion_comprasAvgAggregateOutputType = {
    id_operacion_compras: number | null
    id_operacion: number | null
    id_proveedor: number | null
    total: number | null
  }

  export type Operacion_comprasSumAggregateOutputType = {
    id_operacion_compras: number | null
    id_operacion: number | null
    id_proveedor: number | null
    total: number | null
  }

  export type Operacion_comprasMinAggregateOutputType = {
    id_operacion_compras: number | null
    id_operacion: number | null
    id_proveedor: number | null
    fecha: Date | null
    total: number | null
    metodo_pago: string | null
  }

  export type Operacion_comprasMaxAggregateOutputType = {
    id_operacion_compras: number | null
    id_operacion: number | null
    id_proveedor: number | null
    fecha: Date | null
    total: number | null
    metodo_pago: string | null
  }

  export type Operacion_comprasCountAggregateOutputType = {
    id_operacion_compras: number
    id_operacion: number
    id_proveedor: number
    fecha: number
    total: number
    metodo_pago: number
    _all: number
  }


  export type Operacion_comprasAvgAggregateInputType = {
    id_operacion_compras?: true
    id_operacion?: true
    id_proveedor?: true
    total?: true
  }

  export type Operacion_comprasSumAggregateInputType = {
    id_operacion_compras?: true
    id_operacion?: true
    id_proveedor?: true
    total?: true
  }

  export type Operacion_comprasMinAggregateInputType = {
    id_operacion_compras?: true
    id_operacion?: true
    id_proveedor?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type Operacion_comprasMaxAggregateInputType = {
    id_operacion_compras?: true
    id_operacion?: true
    id_proveedor?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type Operacion_comprasCountAggregateInputType = {
    id_operacion_compras?: true
    id_operacion?: true
    id_proveedor?: true
    fecha?: true
    total?: true
    metodo_pago?: true
    _all?: true
  }

  export type Operacion_comprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_compras to aggregate.
     */
    where?: operacion_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_compras to fetch.
     */
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: operacion_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned operacion_compras
    **/
    _count?: true | Operacion_comprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Operacion_comprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Operacion_comprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Operacion_comprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Operacion_comprasMaxAggregateInputType
  }

  export type GetOperacion_comprasAggregateType<T extends Operacion_comprasAggregateArgs> = {
        [P in keyof T & keyof AggregateOperacion_compras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperacion_compras[P]>
      : GetScalarType<T[P], AggregateOperacion_compras[P]>
  }




  export type operacion_comprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_comprasWhereInput
    orderBy?: operacion_comprasOrderByWithAggregationInput | operacion_comprasOrderByWithAggregationInput[]
    by: Operacion_comprasScalarFieldEnum[] | Operacion_comprasScalarFieldEnum
    having?: operacion_comprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Operacion_comprasCountAggregateInputType | true
    _avg?: Operacion_comprasAvgAggregateInputType
    _sum?: Operacion_comprasSumAggregateInputType
    _min?: Operacion_comprasMinAggregateInputType
    _max?: Operacion_comprasMaxAggregateInputType
  }

  export type Operacion_comprasGroupByOutputType = {
    id_operacion_compras: number
    id_operacion: number
    id_proveedor: number
    fecha: Date
    total: number
    metodo_pago: string
    _count: Operacion_comprasCountAggregateOutputType | null
    _avg: Operacion_comprasAvgAggregateOutputType | null
    _sum: Operacion_comprasSumAggregateOutputType | null
    _min: Operacion_comprasMinAggregateOutputType | null
    _max: Operacion_comprasMaxAggregateOutputType | null
  }

  type GetOperacion_comprasGroupByPayload<T extends operacion_comprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Operacion_comprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Operacion_comprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Operacion_comprasGroupByOutputType[P]>
            : GetScalarType<T[P], Operacion_comprasGroupByOutputType[P]>
        }
      >
    >


  export type operacion_comprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_compras?: boolean
    id_operacion?: boolean
    id_proveedor?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    detalle_compra?: boolean | operacion_compras$detalle_compraArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
    _count?: boolean | Operacion_comprasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_compras"]>

  export type operacion_comprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_compras?: boolean
    id_operacion?: boolean
    id_proveedor?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_compras"]>

  export type operacion_comprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_compras?: boolean
    id_operacion?: boolean
    id_proveedor?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_compras"]>

  export type operacion_comprasSelectScalar = {
    id_operacion_compras?: boolean
    id_operacion?: boolean
    id_proveedor?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
  }

  export type operacion_comprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_operacion_compras" | "id_operacion" | "id_proveedor" | "fecha" | "total" | "metodo_pago", ExtArgs["result"]["operacion_compras"]>
  export type operacion_comprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compra?: boolean | operacion_compras$detalle_compraArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
    _count?: boolean | Operacion_comprasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type operacion_comprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
  }
  export type operacion_comprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    proveedores?: boolean | proveedoresDefaultArgs<ExtArgs>
  }

  export type $operacion_comprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "operacion_compras"
    objects: {
      detalle_compra: Prisma.$detalle_compraPayload<ExtArgs>[]
      operacion: Prisma.$operacionPayload<ExtArgs>
      proveedores: Prisma.$proveedoresPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_operacion_compras: number
      id_operacion: number
      id_proveedor: number
      fecha: Date
      total: number
      metodo_pago: string
    }, ExtArgs["result"]["operacion_compras"]>
    composites: {}
  }

  type operacion_comprasGetPayload<S extends boolean | null | undefined | operacion_comprasDefaultArgs> = $Result.GetResult<Prisma.$operacion_comprasPayload, S>

  type operacion_comprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<operacion_comprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Operacion_comprasCountAggregateInputType | true
    }

  export interface operacion_comprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['operacion_compras'], meta: { name: 'operacion_compras' } }
    /**
     * Find zero or one Operacion_compras that matches the filter.
     * @param {operacion_comprasFindUniqueArgs} args - Arguments to find a Operacion_compras
     * @example
     * // Get one Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends operacion_comprasFindUniqueArgs>(args: SelectSubset<T, operacion_comprasFindUniqueArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Operacion_compras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {operacion_comprasFindUniqueOrThrowArgs} args - Arguments to find a Operacion_compras
     * @example
     * // Get one Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends operacion_comprasFindUniqueOrThrowArgs>(args: SelectSubset<T, operacion_comprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasFindFirstArgs} args - Arguments to find a Operacion_compras
     * @example
     * // Get one Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends operacion_comprasFindFirstArgs>(args?: SelectSubset<T, operacion_comprasFindFirstArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_compras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasFindFirstOrThrowArgs} args - Arguments to find a Operacion_compras
     * @example
     * // Get one Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends operacion_comprasFindFirstOrThrowArgs>(args?: SelectSubset<T, operacion_comprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Operacion_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findMany()
     * 
     * // Get first 10 Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.findMany({ take: 10 })
     * 
     * // Only select the `id_operacion_compras`
     * const operacion_comprasWithId_operacion_comprasOnly = await prisma.operacion_compras.findMany({ select: { id_operacion_compras: true } })
     * 
     */
    findMany<T extends operacion_comprasFindManyArgs>(args?: SelectSubset<T, operacion_comprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Operacion_compras.
     * @param {operacion_comprasCreateArgs} args - Arguments to create a Operacion_compras.
     * @example
     * // Create one Operacion_compras
     * const Operacion_compras = await prisma.operacion_compras.create({
     *   data: {
     *     // ... data to create a Operacion_compras
     *   }
     * })
     * 
     */
    create<T extends operacion_comprasCreateArgs>(args: SelectSubset<T, operacion_comprasCreateArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Operacion_compras.
     * @param {operacion_comprasCreateManyArgs} args - Arguments to create many Operacion_compras.
     * @example
     * // Create many Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends operacion_comprasCreateManyArgs>(args?: SelectSubset<T, operacion_comprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Operacion_compras and returns the data saved in the database.
     * @param {operacion_comprasCreateManyAndReturnArgs} args - Arguments to create many Operacion_compras.
     * @example
     * // Create many Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Operacion_compras and only return the `id_operacion_compras`
     * const operacion_comprasWithId_operacion_comprasOnly = await prisma.operacion_compras.createManyAndReturn({
     *   select: { id_operacion_compras: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends operacion_comprasCreateManyAndReturnArgs>(args?: SelectSubset<T, operacion_comprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Operacion_compras.
     * @param {operacion_comprasDeleteArgs} args - Arguments to delete one Operacion_compras.
     * @example
     * // Delete one Operacion_compras
     * const Operacion_compras = await prisma.operacion_compras.delete({
     *   where: {
     *     // ... filter to delete one Operacion_compras
     *   }
     * })
     * 
     */
    delete<T extends operacion_comprasDeleteArgs>(args: SelectSubset<T, operacion_comprasDeleteArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Operacion_compras.
     * @param {operacion_comprasUpdateArgs} args - Arguments to update one Operacion_compras.
     * @example
     * // Update one Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends operacion_comprasUpdateArgs>(args: SelectSubset<T, operacion_comprasUpdateArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Operacion_compras.
     * @param {operacion_comprasDeleteManyArgs} args - Arguments to filter Operacion_compras to delete.
     * @example
     * // Delete a few Operacion_compras
     * const { count } = await prisma.operacion_compras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends operacion_comprasDeleteManyArgs>(args?: SelectSubset<T, operacion_comprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends operacion_comprasUpdateManyArgs>(args: SelectSubset<T, operacion_comprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_compras and returns the data updated in the database.
     * @param {operacion_comprasUpdateManyAndReturnArgs} args - Arguments to update many Operacion_compras.
     * @example
     * // Update many Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Operacion_compras and only return the `id_operacion_compras`
     * const operacion_comprasWithId_operacion_comprasOnly = await prisma.operacion_compras.updateManyAndReturn({
     *   select: { id_operacion_compras: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends operacion_comprasUpdateManyAndReturnArgs>(args: SelectSubset<T, operacion_comprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Operacion_compras.
     * @param {operacion_comprasUpsertArgs} args - Arguments to update or create a Operacion_compras.
     * @example
     * // Update or create a Operacion_compras
     * const operacion_compras = await prisma.operacion_compras.upsert({
     *   create: {
     *     // ... data to create a Operacion_compras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Operacion_compras we want to update
     *   }
     * })
     */
    upsert<T extends operacion_comprasUpsertArgs>(args: SelectSubset<T, operacion_comprasUpsertArgs<ExtArgs>>): Prisma__operacion_comprasClient<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Operacion_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasCountArgs} args - Arguments to filter Operacion_compras to count.
     * @example
     * // Count the number of Operacion_compras
     * const count = await prisma.operacion_compras.count({
     *   where: {
     *     // ... the filter for the Operacion_compras we want to count
     *   }
     * })
    **/
    count<T extends operacion_comprasCountArgs>(
      args?: Subset<T, operacion_comprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Operacion_comprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Operacion_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Operacion_comprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Operacion_comprasAggregateArgs>(args: Subset<T, Operacion_comprasAggregateArgs>): Prisma.PrismaPromise<GetOperacion_comprasAggregateType<T>>

    /**
     * Group by Operacion_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_comprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends operacion_comprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: operacion_comprasGroupByArgs['orderBy'] }
        : { orderBy?: operacion_comprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, operacion_comprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperacion_comprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the operacion_compras model
   */
  readonly fields: operacion_comprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for operacion_compras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__operacion_comprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_compra<T extends operacion_compras$detalle_compraArgs<ExtArgs> = {}>(args?: Subset<T, operacion_compras$detalle_compraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    operacion<T extends operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacionDefaultArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedores<T extends proveedoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, proveedoresDefaultArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the operacion_compras model
   */
  interface operacion_comprasFieldRefs {
    readonly id_operacion_compras: FieldRef<"operacion_compras", 'Int'>
    readonly id_operacion: FieldRef<"operacion_compras", 'Int'>
    readonly id_proveedor: FieldRef<"operacion_compras", 'Int'>
    readonly fecha: FieldRef<"operacion_compras", 'DateTime'>
    readonly total: FieldRef<"operacion_compras", 'Float'>
    readonly metodo_pago: FieldRef<"operacion_compras", 'String'>
  }
    

  // Custom InputTypes
  /**
   * operacion_compras findUnique
   */
  export type operacion_comprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_compras to fetch.
     */
    where: operacion_comprasWhereUniqueInput
  }

  /**
   * operacion_compras findUniqueOrThrow
   */
  export type operacion_comprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_compras to fetch.
     */
    where: operacion_comprasWhereUniqueInput
  }

  /**
   * operacion_compras findFirst
   */
  export type operacion_comprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_compras to fetch.
     */
    where?: operacion_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_compras to fetch.
     */
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_compras.
     */
    cursor?: operacion_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_compras.
     */
    distinct?: Operacion_comprasScalarFieldEnum | Operacion_comprasScalarFieldEnum[]
  }

  /**
   * operacion_compras findFirstOrThrow
   */
  export type operacion_comprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_compras to fetch.
     */
    where?: operacion_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_compras to fetch.
     */
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_compras.
     */
    cursor?: operacion_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_compras.
     */
    distinct?: Operacion_comprasScalarFieldEnum | Operacion_comprasScalarFieldEnum[]
  }

  /**
   * operacion_compras findMany
   */
  export type operacion_comprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_compras to fetch.
     */
    where?: operacion_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_compras to fetch.
     */
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing operacion_compras.
     */
    cursor?: operacion_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_compras.
     */
    skip?: number
    distinct?: Operacion_comprasScalarFieldEnum | Operacion_comprasScalarFieldEnum[]
  }

  /**
   * operacion_compras create
   */
  export type operacion_comprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * The data needed to create a operacion_compras.
     */
    data: XOR<operacion_comprasCreateInput, operacion_comprasUncheckedCreateInput>
  }

  /**
   * operacion_compras createMany
   */
  export type operacion_comprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many operacion_compras.
     */
    data: operacion_comprasCreateManyInput | operacion_comprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * operacion_compras createManyAndReturn
   */
  export type operacion_comprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * The data used to create many operacion_compras.
     */
    data: operacion_comprasCreateManyInput | operacion_comprasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_compras update
   */
  export type operacion_comprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * The data needed to update a operacion_compras.
     */
    data: XOR<operacion_comprasUpdateInput, operacion_comprasUncheckedUpdateInput>
    /**
     * Choose, which operacion_compras to update.
     */
    where: operacion_comprasWhereUniqueInput
  }

  /**
   * operacion_compras updateMany
   */
  export type operacion_comprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update operacion_compras.
     */
    data: XOR<operacion_comprasUpdateManyMutationInput, operacion_comprasUncheckedUpdateManyInput>
    /**
     * Filter which operacion_compras to update
     */
    where?: operacion_comprasWhereInput
    /**
     * Limit how many operacion_compras to update.
     */
    limit?: number
  }

  /**
   * operacion_compras updateManyAndReturn
   */
  export type operacion_comprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * The data used to update operacion_compras.
     */
    data: XOR<operacion_comprasUpdateManyMutationInput, operacion_comprasUncheckedUpdateManyInput>
    /**
     * Filter which operacion_compras to update
     */
    where?: operacion_comprasWhereInput
    /**
     * Limit how many operacion_compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_compras upsert
   */
  export type operacion_comprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * The filter to search for the operacion_compras to update in case it exists.
     */
    where: operacion_comprasWhereUniqueInput
    /**
     * In case the operacion_compras found by the `where` argument doesn't exist, create a new operacion_compras with this data.
     */
    create: XOR<operacion_comprasCreateInput, operacion_comprasUncheckedCreateInput>
    /**
     * In case the operacion_compras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<operacion_comprasUpdateInput, operacion_comprasUncheckedUpdateInput>
  }

  /**
   * operacion_compras delete
   */
  export type operacion_comprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    /**
     * Filter which operacion_compras to delete.
     */
    where: operacion_comprasWhereUniqueInput
  }

  /**
   * operacion_compras deleteMany
   */
  export type operacion_comprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_compras to delete
     */
    where?: operacion_comprasWhereInput
    /**
     * Limit how many operacion_compras to delete.
     */
    limit?: number
  }

  /**
   * operacion_compras.detalle_compra
   */
  export type operacion_compras$detalle_compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    where?: detalle_compraWhereInput
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    cursor?: detalle_compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_compraScalarFieldEnum | Detalle_compraScalarFieldEnum[]
  }

  /**
   * operacion_compras without action
   */
  export type operacion_comprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
  }


  /**
   * Model operacion_gastos
   */

  export type AggregateOperacion_gastos = {
    _count: Operacion_gastosCountAggregateOutputType | null
    _avg: Operacion_gastosAvgAggregateOutputType | null
    _sum: Operacion_gastosSumAggregateOutputType | null
    _min: Operacion_gastosMinAggregateOutputType | null
    _max: Operacion_gastosMaxAggregateOutputType | null
  }

  export type Operacion_gastosAvgAggregateOutputType = {
    id_operacion_gastos: number | null
    id_operacion: number | null
    total: number | null
  }

  export type Operacion_gastosSumAggregateOutputType = {
    id_operacion_gastos: number | null
    id_operacion: number | null
    total: number | null
  }

  export type Operacion_gastosMinAggregateOutputType = {
    id_operacion_gastos: number | null
    id_operacion: number | null
    nombre: string | null
    detalle: string | null
    total: number | null
  }

  export type Operacion_gastosMaxAggregateOutputType = {
    id_operacion_gastos: number | null
    id_operacion: number | null
    nombre: string | null
    detalle: string | null
    total: number | null
  }

  export type Operacion_gastosCountAggregateOutputType = {
    id_operacion_gastos: number
    id_operacion: number
    nombre: number
    detalle: number
    total: number
    _all: number
  }


  export type Operacion_gastosAvgAggregateInputType = {
    id_operacion_gastos?: true
    id_operacion?: true
    total?: true
  }

  export type Operacion_gastosSumAggregateInputType = {
    id_operacion_gastos?: true
    id_operacion?: true
    total?: true
  }

  export type Operacion_gastosMinAggregateInputType = {
    id_operacion_gastos?: true
    id_operacion?: true
    nombre?: true
    detalle?: true
    total?: true
  }

  export type Operacion_gastosMaxAggregateInputType = {
    id_operacion_gastos?: true
    id_operacion?: true
    nombre?: true
    detalle?: true
    total?: true
  }

  export type Operacion_gastosCountAggregateInputType = {
    id_operacion_gastos?: true
    id_operacion?: true
    nombre?: true
    detalle?: true
    total?: true
    _all?: true
  }

  export type Operacion_gastosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_gastos to aggregate.
     */
    where?: operacion_gastosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_gastos to fetch.
     */
    orderBy?: operacion_gastosOrderByWithRelationInput | operacion_gastosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: operacion_gastosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_gastos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_gastos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned operacion_gastos
    **/
    _count?: true | Operacion_gastosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Operacion_gastosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Operacion_gastosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Operacion_gastosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Operacion_gastosMaxAggregateInputType
  }

  export type GetOperacion_gastosAggregateType<T extends Operacion_gastosAggregateArgs> = {
        [P in keyof T & keyof AggregateOperacion_gastos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperacion_gastos[P]>
      : GetScalarType<T[P], AggregateOperacion_gastos[P]>
  }




  export type operacion_gastosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_gastosWhereInput
    orderBy?: operacion_gastosOrderByWithAggregationInput | operacion_gastosOrderByWithAggregationInput[]
    by: Operacion_gastosScalarFieldEnum[] | Operacion_gastosScalarFieldEnum
    having?: operacion_gastosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Operacion_gastosCountAggregateInputType | true
    _avg?: Operacion_gastosAvgAggregateInputType
    _sum?: Operacion_gastosSumAggregateInputType
    _min?: Operacion_gastosMinAggregateInputType
    _max?: Operacion_gastosMaxAggregateInputType
  }

  export type Operacion_gastosGroupByOutputType = {
    id_operacion_gastos: number
    id_operacion: number
    nombre: string
    detalle: string
    total: number
    _count: Operacion_gastosCountAggregateOutputType | null
    _avg: Operacion_gastosAvgAggregateOutputType | null
    _sum: Operacion_gastosSumAggregateOutputType | null
    _min: Operacion_gastosMinAggregateOutputType | null
    _max: Operacion_gastosMaxAggregateOutputType | null
  }

  type GetOperacion_gastosGroupByPayload<T extends operacion_gastosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Operacion_gastosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Operacion_gastosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Operacion_gastosGroupByOutputType[P]>
            : GetScalarType<T[P], Operacion_gastosGroupByOutputType[P]>
        }
      >
    >


  export type operacion_gastosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_gastos?: boolean
    id_operacion?: boolean
    nombre?: boolean
    detalle?: boolean
    total?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_gastos"]>

  export type operacion_gastosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_gastos?: boolean
    id_operacion?: boolean
    nombre?: boolean
    detalle?: boolean
    total?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_gastos"]>

  export type operacion_gastosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_gastos?: boolean
    id_operacion?: boolean
    nombre?: boolean
    detalle?: boolean
    total?: boolean
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_gastos"]>

  export type operacion_gastosSelectScalar = {
    id_operacion_gastos?: boolean
    id_operacion?: boolean
    nombre?: boolean
    detalle?: boolean
    total?: boolean
  }

  export type operacion_gastosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_operacion_gastos" | "id_operacion" | "nombre" | "detalle" | "total", ExtArgs["result"]["operacion_gastos"]>
  export type operacion_gastosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }
  export type operacion_gastosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }
  export type operacion_gastosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }

  export type $operacion_gastosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "operacion_gastos"
    objects: {
      operacion: Prisma.$operacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_operacion_gastos: number
      id_operacion: number
      nombre: string
      detalle: string
      total: number
    }, ExtArgs["result"]["operacion_gastos"]>
    composites: {}
  }

  type operacion_gastosGetPayload<S extends boolean | null | undefined | operacion_gastosDefaultArgs> = $Result.GetResult<Prisma.$operacion_gastosPayload, S>

  type operacion_gastosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<operacion_gastosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Operacion_gastosCountAggregateInputType | true
    }

  export interface operacion_gastosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['operacion_gastos'], meta: { name: 'operacion_gastos' } }
    /**
     * Find zero or one Operacion_gastos that matches the filter.
     * @param {operacion_gastosFindUniqueArgs} args - Arguments to find a Operacion_gastos
     * @example
     * // Get one Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends operacion_gastosFindUniqueArgs>(args: SelectSubset<T, operacion_gastosFindUniqueArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Operacion_gastos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {operacion_gastosFindUniqueOrThrowArgs} args - Arguments to find a Operacion_gastos
     * @example
     * // Get one Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends operacion_gastosFindUniqueOrThrowArgs>(args: SelectSubset<T, operacion_gastosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_gastos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosFindFirstArgs} args - Arguments to find a Operacion_gastos
     * @example
     * // Get one Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends operacion_gastosFindFirstArgs>(args?: SelectSubset<T, operacion_gastosFindFirstArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_gastos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosFindFirstOrThrowArgs} args - Arguments to find a Operacion_gastos
     * @example
     * // Get one Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends operacion_gastosFindFirstOrThrowArgs>(args?: SelectSubset<T, operacion_gastosFindFirstOrThrowArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Operacion_gastos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findMany()
     * 
     * // Get first 10 Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.findMany({ take: 10 })
     * 
     * // Only select the `id_operacion_gastos`
     * const operacion_gastosWithId_operacion_gastosOnly = await prisma.operacion_gastos.findMany({ select: { id_operacion_gastos: true } })
     * 
     */
    findMany<T extends operacion_gastosFindManyArgs>(args?: SelectSubset<T, operacion_gastosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Operacion_gastos.
     * @param {operacion_gastosCreateArgs} args - Arguments to create a Operacion_gastos.
     * @example
     * // Create one Operacion_gastos
     * const Operacion_gastos = await prisma.operacion_gastos.create({
     *   data: {
     *     // ... data to create a Operacion_gastos
     *   }
     * })
     * 
     */
    create<T extends operacion_gastosCreateArgs>(args: SelectSubset<T, operacion_gastosCreateArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Operacion_gastos.
     * @param {operacion_gastosCreateManyArgs} args - Arguments to create many Operacion_gastos.
     * @example
     * // Create many Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends operacion_gastosCreateManyArgs>(args?: SelectSubset<T, operacion_gastosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Operacion_gastos and returns the data saved in the database.
     * @param {operacion_gastosCreateManyAndReturnArgs} args - Arguments to create many Operacion_gastos.
     * @example
     * // Create many Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Operacion_gastos and only return the `id_operacion_gastos`
     * const operacion_gastosWithId_operacion_gastosOnly = await prisma.operacion_gastos.createManyAndReturn({
     *   select: { id_operacion_gastos: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends operacion_gastosCreateManyAndReturnArgs>(args?: SelectSubset<T, operacion_gastosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Operacion_gastos.
     * @param {operacion_gastosDeleteArgs} args - Arguments to delete one Operacion_gastos.
     * @example
     * // Delete one Operacion_gastos
     * const Operacion_gastos = await prisma.operacion_gastos.delete({
     *   where: {
     *     // ... filter to delete one Operacion_gastos
     *   }
     * })
     * 
     */
    delete<T extends operacion_gastosDeleteArgs>(args: SelectSubset<T, operacion_gastosDeleteArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Operacion_gastos.
     * @param {operacion_gastosUpdateArgs} args - Arguments to update one Operacion_gastos.
     * @example
     * // Update one Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends operacion_gastosUpdateArgs>(args: SelectSubset<T, operacion_gastosUpdateArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Operacion_gastos.
     * @param {operacion_gastosDeleteManyArgs} args - Arguments to filter Operacion_gastos to delete.
     * @example
     * // Delete a few Operacion_gastos
     * const { count } = await prisma.operacion_gastos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends operacion_gastosDeleteManyArgs>(args?: SelectSubset<T, operacion_gastosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_gastos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends operacion_gastosUpdateManyArgs>(args: SelectSubset<T, operacion_gastosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_gastos and returns the data updated in the database.
     * @param {operacion_gastosUpdateManyAndReturnArgs} args - Arguments to update many Operacion_gastos.
     * @example
     * // Update many Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Operacion_gastos and only return the `id_operacion_gastos`
     * const operacion_gastosWithId_operacion_gastosOnly = await prisma.operacion_gastos.updateManyAndReturn({
     *   select: { id_operacion_gastos: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends operacion_gastosUpdateManyAndReturnArgs>(args: SelectSubset<T, operacion_gastosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Operacion_gastos.
     * @param {operacion_gastosUpsertArgs} args - Arguments to update or create a Operacion_gastos.
     * @example
     * // Update or create a Operacion_gastos
     * const operacion_gastos = await prisma.operacion_gastos.upsert({
     *   create: {
     *     // ... data to create a Operacion_gastos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Operacion_gastos we want to update
     *   }
     * })
     */
    upsert<T extends operacion_gastosUpsertArgs>(args: SelectSubset<T, operacion_gastosUpsertArgs<ExtArgs>>): Prisma__operacion_gastosClient<$Result.GetResult<Prisma.$operacion_gastosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Operacion_gastos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosCountArgs} args - Arguments to filter Operacion_gastos to count.
     * @example
     * // Count the number of Operacion_gastos
     * const count = await prisma.operacion_gastos.count({
     *   where: {
     *     // ... the filter for the Operacion_gastos we want to count
     *   }
     * })
    **/
    count<T extends operacion_gastosCountArgs>(
      args?: Subset<T, operacion_gastosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Operacion_gastosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Operacion_gastos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Operacion_gastosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Operacion_gastosAggregateArgs>(args: Subset<T, Operacion_gastosAggregateArgs>): Prisma.PrismaPromise<GetOperacion_gastosAggregateType<T>>

    /**
     * Group by Operacion_gastos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_gastosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends operacion_gastosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: operacion_gastosGroupByArgs['orderBy'] }
        : { orderBy?: operacion_gastosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, operacion_gastosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperacion_gastosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the operacion_gastos model
   */
  readonly fields: operacion_gastosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for operacion_gastos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__operacion_gastosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion<T extends operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacionDefaultArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the operacion_gastos model
   */
  interface operacion_gastosFieldRefs {
    readonly id_operacion_gastos: FieldRef<"operacion_gastos", 'Int'>
    readonly id_operacion: FieldRef<"operacion_gastos", 'Int'>
    readonly nombre: FieldRef<"operacion_gastos", 'String'>
    readonly detalle: FieldRef<"operacion_gastos", 'String'>
    readonly total: FieldRef<"operacion_gastos", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * operacion_gastos findUnique
   */
  export type operacion_gastosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter, which operacion_gastos to fetch.
     */
    where: operacion_gastosWhereUniqueInput
  }

  /**
   * operacion_gastos findUniqueOrThrow
   */
  export type operacion_gastosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter, which operacion_gastos to fetch.
     */
    where: operacion_gastosWhereUniqueInput
  }

  /**
   * operacion_gastos findFirst
   */
  export type operacion_gastosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter, which operacion_gastos to fetch.
     */
    where?: operacion_gastosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_gastos to fetch.
     */
    orderBy?: operacion_gastosOrderByWithRelationInput | operacion_gastosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_gastos.
     */
    cursor?: operacion_gastosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_gastos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_gastos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_gastos.
     */
    distinct?: Operacion_gastosScalarFieldEnum | Operacion_gastosScalarFieldEnum[]
  }

  /**
   * operacion_gastos findFirstOrThrow
   */
  export type operacion_gastosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter, which operacion_gastos to fetch.
     */
    where?: operacion_gastosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_gastos to fetch.
     */
    orderBy?: operacion_gastosOrderByWithRelationInput | operacion_gastosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_gastos.
     */
    cursor?: operacion_gastosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_gastos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_gastos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_gastos.
     */
    distinct?: Operacion_gastosScalarFieldEnum | Operacion_gastosScalarFieldEnum[]
  }

  /**
   * operacion_gastos findMany
   */
  export type operacion_gastosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter, which operacion_gastos to fetch.
     */
    where?: operacion_gastosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_gastos to fetch.
     */
    orderBy?: operacion_gastosOrderByWithRelationInput | operacion_gastosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing operacion_gastos.
     */
    cursor?: operacion_gastosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_gastos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_gastos.
     */
    skip?: number
    distinct?: Operacion_gastosScalarFieldEnum | Operacion_gastosScalarFieldEnum[]
  }

  /**
   * operacion_gastos create
   */
  export type operacion_gastosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * The data needed to create a operacion_gastos.
     */
    data: XOR<operacion_gastosCreateInput, operacion_gastosUncheckedCreateInput>
  }

  /**
   * operacion_gastos createMany
   */
  export type operacion_gastosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many operacion_gastos.
     */
    data: operacion_gastosCreateManyInput | operacion_gastosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * operacion_gastos createManyAndReturn
   */
  export type operacion_gastosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * The data used to create many operacion_gastos.
     */
    data: operacion_gastosCreateManyInput | operacion_gastosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_gastos update
   */
  export type operacion_gastosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * The data needed to update a operacion_gastos.
     */
    data: XOR<operacion_gastosUpdateInput, operacion_gastosUncheckedUpdateInput>
    /**
     * Choose, which operacion_gastos to update.
     */
    where: operacion_gastosWhereUniqueInput
  }

  /**
   * operacion_gastos updateMany
   */
  export type operacion_gastosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update operacion_gastos.
     */
    data: XOR<operacion_gastosUpdateManyMutationInput, operacion_gastosUncheckedUpdateManyInput>
    /**
     * Filter which operacion_gastos to update
     */
    where?: operacion_gastosWhereInput
    /**
     * Limit how many operacion_gastos to update.
     */
    limit?: number
  }

  /**
   * operacion_gastos updateManyAndReturn
   */
  export type operacion_gastosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * The data used to update operacion_gastos.
     */
    data: XOR<operacion_gastosUpdateManyMutationInput, operacion_gastosUncheckedUpdateManyInput>
    /**
     * Filter which operacion_gastos to update
     */
    where?: operacion_gastosWhereInput
    /**
     * Limit how many operacion_gastos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_gastos upsert
   */
  export type operacion_gastosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * The filter to search for the operacion_gastos to update in case it exists.
     */
    where: operacion_gastosWhereUniqueInput
    /**
     * In case the operacion_gastos found by the `where` argument doesn't exist, create a new operacion_gastos with this data.
     */
    create: XOR<operacion_gastosCreateInput, operacion_gastosUncheckedCreateInput>
    /**
     * In case the operacion_gastos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<operacion_gastosUpdateInput, operacion_gastosUncheckedUpdateInput>
  }

  /**
   * operacion_gastos delete
   */
  export type operacion_gastosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
    /**
     * Filter which operacion_gastos to delete.
     */
    where: operacion_gastosWhereUniqueInput
  }

  /**
   * operacion_gastos deleteMany
   */
  export type operacion_gastosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_gastos to delete
     */
    where?: operacion_gastosWhereInput
    /**
     * Limit how many operacion_gastos to delete.
     */
    limit?: number
  }

  /**
   * operacion_gastos without action
   */
  export type operacion_gastosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_gastos
     */
    select?: operacion_gastosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_gastos
     */
    omit?: operacion_gastosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_gastosInclude<ExtArgs> | null
  }


  /**
   * Model operacion_ventas
   */

  export type AggregateOperacion_ventas = {
    _count: Operacion_ventasCountAggregateOutputType | null
    _avg: Operacion_ventasAvgAggregateOutputType | null
    _sum: Operacion_ventasSumAggregateOutputType | null
    _min: Operacion_ventasMinAggregateOutputType | null
    _max: Operacion_ventasMaxAggregateOutputType | null
  }

  export type Operacion_ventasAvgAggregateOutputType = {
    id_operacion_ventas: number | null
    id_operacion: number | null
    id_cliente: number | null
    total: number | null
  }

  export type Operacion_ventasSumAggregateOutputType = {
    id_operacion_ventas: number | null
    id_operacion: number | null
    id_cliente: number | null
    total: number | null
  }

  export type Operacion_ventasMinAggregateOutputType = {
    id_operacion_ventas: number | null
    id_operacion: number | null
    id_cliente: number | null
    fecha: Date | null
    total: number | null
    metodo_pago: string | null
  }

  export type Operacion_ventasMaxAggregateOutputType = {
    id_operacion_ventas: number | null
    id_operacion: number | null
    id_cliente: number | null
    fecha: Date | null
    total: number | null
    metodo_pago: string | null
  }

  export type Operacion_ventasCountAggregateOutputType = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: number
    total: number
    metodo_pago: number
    _all: number
  }


  export type Operacion_ventasAvgAggregateInputType = {
    id_operacion_ventas?: true
    id_operacion?: true
    id_cliente?: true
    total?: true
  }

  export type Operacion_ventasSumAggregateInputType = {
    id_operacion_ventas?: true
    id_operacion?: true
    id_cliente?: true
    total?: true
  }

  export type Operacion_ventasMinAggregateInputType = {
    id_operacion_ventas?: true
    id_operacion?: true
    id_cliente?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type Operacion_ventasMaxAggregateInputType = {
    id_operacion_ventas?: true
    id_operacion?: true
    id_cliente?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type Operacion_ventasCountAggregateInputType = {
    id_operacion_ventas?: true
    id_operacion?: true
    id_cliente?: true
    fecha?: true
    total?: true
    metodo_pago?: true
    _all?: true
  }

  export type Operacion_ventasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_ventas to aggregate.
     */
    where?: operacion_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_ventas to fetch.
     */
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: operacion_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned operacion_ventas
    **/
    _count?: true | Operacion_ventasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Operacion_ventasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Operacion_ventasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Operacion_ventasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Operacion_ventasMaxAggregateInputType
  }

  export type GetOperacion_ventasAggregateType<T extends Operacion_ventasAggregateArgs> = {
        [P in keyof T & keyof AggregateOperacion_ventas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperacion_ventas[P]>
      : GetScalarType<T[P], AggregateOperacion_ventas[P]>
  }




  export type operacion_ventasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: operacion_ventasWhereInput
    orderBy?: operacion_ventasOrderByWithAggregationInput | operacion_ventasOrderByWithAggregationInput[]
    by: Operacion_ventasScalarFieldEnum[] | Operacion_ventasScalarFieldEnum
    having?: operacion_ventasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Operacion_ventasCountAggregateInputType | true
    _avg?: Operacion_ventasAvgAggregateInputType
    _sum?: Operacion_ventasSumAggregateInputType
    _min?: Operacion_ventasMinAggregateInputType
    _max?: Operacion_ventasMaxAggregateInputType
  }

  export type Operacion_ventasGroupByOutputType = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: Date
    total: number
    metodo_pago: string
    _count: Operacion_ventasCountAggregateOutputType | null
    _avg: Operacion_ventasAvgAggregateOutputType | null
    _sum: Operacion_ventasSumAggregateOutputType | null
    _min: Operacion_ventasMinAggregateOutputType | null
    _max: Operacion_ventasMaxAggregateOutputType | null
  }

  type GetOperacion_ventasGroupByPayload<T extends operacion_ventasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Operacion_ventasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Operacion_ventasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Operacion_ventasGroupByOutputType[P]>
            : GetScalarType<T[P], Operacion_ventasGroupByOutputType[P]>
        }
      >
    >


  export type operacion_ventasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_ventas?: boolean
    id_operacion?: boolean
    id_cliente?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    detalle_venta?: boolean | operacion_ventas$detalle_ventaArgs<ExtArgs>
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    pagos_clientes?: boolean | operacion_ventas$pagos_clientesArgs<ExtArgs>
    _count?: boolean | Operacion_ventasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_ventas"]>

  export type operacion_ventasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_ventas?: boolean
    id_operacion?: boolean
    id_cliente?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_ventas"]>

  export type operacion_ventasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_operacion_ventas?: boolean
    id_operacion?: boolean
    id_cliente?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["operacion_ventas"]>

  export type operacion_ventasSelectScalar = {
    id_operacion_ventas?: boolean
    id_operacion?: boolean
    id_cliente?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
  }

  export type operacion_ventasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_operacion_ventas" | "id_operacion" | "id_cliente" | "fecha" | "total" | "metodo_pago", ExtArgs["result"]["operacion_ventas"]>
  export type operacion_ventasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_venta?: boolean | operacion_ventas$detalle_ventaArgs<ExtArgs>
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
    pagos_clientes?: boolean | operacion_ventas$pagos_clientesArgs<ExtArgs>
    _count?: boolean | Operacion_ventasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type operacion_ventasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }
  export type operacion_ventasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | clientesDefaultArgs<ExtArgs>
    operacion?: boolean | operacionDefaultArgs<ExtArgs>
  }

  export type $operacion_ventasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "operacion_ventas"
    objects: {
      detalle_venta: Prisma.$detalle_ventaPayload<ExtArgs>[]
      clientes: Prisma.$clientesPayload<ExtArgs>
      operacion: Prisma.$operacionPayload<ExtArgs>
      pagos_clientes: Prisma.$pagos_clientesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_operacion_ventas: number
      id_operacion: number
      id_cliente: number
      fecha: Date
      total: number
      metodo_pago: string
    }, ExtArgs["result"]["operacion_ventas"]>
    composites: {}
  }

  type operacion_ventasGetPayload<S extends boolean | null | undefined | operacion_ventasDefaultArgs> = $Result.GetResult<Prisma.$operacion_ventasPayload, S>

  type operacion_ventasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<operacion_ventasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Operacion_ventasCountAggregateInputType | true
    }

  export interface operacion_ventasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['operacion_ventas'], meta: { name: 'operacion_ventas' } }
    /**
     * Find zero or one Operacion_ventas that matches the filter.
     * @param {operacion_ventasFindUniqueArgs} args - Arguments to find a Operacion_ventas
     * @example
     * // Get one Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends operacion_ventasFindUniqueArgs>(args: SelectSubset<T, operacion_ventasFindUniqueArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Operacion_ventas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {operacion_ventasFindUniqueOrThrowArgs} args - Arguments to find a Operacion_ventas
     * @example
     * // Get one Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends operacion_ventasFindUniqueOrThrowArgs>(args: SelectSubset<T, operacion_ventasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasFindFirstArgs} args - Arguments to find a Operacion_ventas
     * @example
     * // Get one Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends operacion_ventasFindFirstArgs>(args?: SelectSubset<T, operacion_ventasFindFirstArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Operacion_ventas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasFindFirstOrThrowArgs} args - Arguments to find a Operacion_ventas
     * @example
     * // Get one Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends operacion_ventasFindFirstOrThrowArgs>(args?: SelectSubset<T, operacion_ventasFindFirstOrThrowArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Operacion_ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findMany()
     * 
     * // Get first 10 Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.findMany({ take: 10 })
     * 
     * // Only select the `id_operacion_ventas`
     * const operacion_ventasWithId_operacion_ventasOnly = await prisma.operacion_ventas.findMany({ select: { id_operacion_ventas: true } })
     * 
     */
    findMany<T extends operacion_ventasFindManyArgs>(args?: SelectSubset<T, operacion_ventasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Operacion_ventas.
     * @param {operacion_ventasCreateArgs} args - Arguments to create a Operacion_ventas.
     * @example
     * // Create one Operacion_ventas
     * const Operacion_ventas = await prisma.operacion_ventas.create({
     *   data: {
     *     // ... data to create a Operacion_ventas
     *   }
     * })
     * 
     */
    create<T extends operacion_ventasCreateArgs>(args: SelectSubset<T, operacion_ventasCreateArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Operacion_ventas.
     * @param {operacion_ventasCreateManyArgs} args - Arguments to create many Operacion_ventas.
     * @example
     * // Create many Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends operacion_ventasCreateManyArgs>(args?: SelectSubset<T, operacion_ventasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Operacion_ventas and returns the data saved in the database.
     * @param {operacion_ventasCreateManyAndReturnArgs} args - Arguments to create many Operacion_ventas.
     * @example
     * // Create many Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Operacion_ventas and only return the `id_operacion_ventas`
     * const operacion_ventasWithId_operacion_ventasOnly = await prisma.operacion_ventas.createManyAndReturn({
     *   select: { id_operacion_ventas: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends operacion_ventasCreateManyAndReturnArgs>(args?: SelectSubset<T, operacion_ventasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Operacion_ventas.
     * @param {operacion_ventasDeleteArgs} args - Arguments to delete one Operacion_ventas.
     * @example
     * // Delete one Operacion_ventas
     * const Operacion_ventas = await prisma.operacion_ventas.delete({
     *   where: {
     *     // ... filter to delete one Operacion_ventas
     *   }
     * })
     * 
     */
    delete<T extends operacion_ventasDeleteArgs>(args: SelectSubset<T, operacion_ventasDeleteArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Operacion_ventas.
     * @param {operacion_ventasUpdateArgs} args - Arguments to update one Operacion_ventas.
     * @example
     * // Update one Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends operacion_ventasUpdateArgs>(args: SelectSubset<T, operacion_ventasUpdateArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Operacion_ventas.
     * @param {operacion_ventasDeleteManyArgs} args - Arguments to filter Operacion_ventas to delete.
     * @example
     * // Delete a few Operacion_ventas
     * const { count } = await prisma.operacion_ventas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends operacion_ventasDeleteManyArgs>(args?: SelectSubset<T, operacion_ventasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends operacion_ventasUpdateManyArgs>(args: SelectSubset<T, operacion_ventasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Operacion_ventas and returns the data updated in the database.
     * @param {operacion_ventasUpdateManyAndReturnArgs} args - Arguments to update many Operacion_ventas.
     * @example
     * // Update many Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Operacion_ventas and only return the `id_operacion_ventas`
     * const operacion_ventasWithId_operacion_ventasOnly = await prisma.operacion_ventas.updateManyAndReturn({
     *   select: { id_operacion_ventas: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends operacion_ventasUpdateManyAndReturnArgs>(args: SelectSubset<T, operacion_ventasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Operacion_ventas.
     * @param {operacion_ventasUpsertArgs} args - Arguments to update or create a Operacion_ventas.
     * @example
     * // Update or create a Operacion_ventas
     * const operacion_ventas = await prisma.operacion_ventas.upsert({
     *   create: {
     *     // ... data to create a Operacion_ventas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Operacion_ventas we want to update
     *   }
     * })
     */
    upsert<T extends operacion_ventasUpsertArgs>(args: SelectSubset<T, operacion_ventasUpsertArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Operacion_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasCountArgs} args - Arguments to filter Operacion_ventas to count.
     * @example
     * // Count the number of Operacion_ventas
     * const count = await prisma.operacion_ventas.count({
     *   where: {
     *     // ... the filter for the Operacion_ventas we want to count
     *   }
     * })
    **/
    count<T extends operacion_ventasCountArgs>(
      args?: Subset<T, operacion_ventasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Operacion_ventasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Operacion_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Operacion_ventasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Operacion_ventasAggregateArgs>(args: Subset<T, Operacion_ventasAggregateArgs>): Prisma.PrismaPromise<GetOperacion_ventasAggregateType<T>>

    /**
     * Group by Operacion_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {operacion_ventasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends operacion_ventasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: operacion_ventasGroupByArgs['orderBy'] }
        : { orderBy?: operacion_ventasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, operacion_ventasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperacion_ventasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the operacion_ventas model
   */
  readonly fields: operacion_ventasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for operacion_ventas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__operacion_ventasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_venta<T extends operacion_ventas$detalle_ventaArgs<ExtArgs> = {}>(args?: Subset<T, operacion_ventas$detalle_ventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientes<T extends clientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientesDefaultArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    operacion<T extends operacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacionDefaultArgs<ExtArgs>>): Prisma__operacionClient<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pagos_clientes<T extends operacion_ventas$pagos_clientesArgs<ExtArgs> = {}>(args?: Subset<T, operacion_ventas$pagos_clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the operacion_ventas model
   */
  interface operacion_ventasFieldRefs {
    readonly id_operacion_ventas: FieldRef<"operacion_ventas", 'Int'>
    readonly id_operacion: FieldRef<"operacion_ventas", 'Int'>
    readonly id_cliente: FieldRef<"operacion_ventas", 'Int'>
    readonly fecha: FieldRef<"operacion_ventas", 'DateTime'>
    readonly total: FieldRef<"operacion_ventas", 'Float'>
    readonly metodo_pago: FieldRef<"operacion_ventas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * operacion_ventas findUnique
   */
  export type operacion_ventasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_ventas to fetch.
     */
    where: operacion_ventasWhereUniqueInput
  }

  /**
   * operacion_ventas findUniqueOrThrow
   */
  export type operacion_ventasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_ventas to fetch.
     */
    where: operacion_ventasWhereUniqueInput
  }

  /**
   * operacion_ventas findFirst
   */
  export type operacion_ventasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_ventas to fetch.
     */
    where?: operacion_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_ventas to fetch.
     */
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_ventas.
     */
    cursor?: operacion_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_ventas.
     */
    distinct?: Operacion_ventasScalarFieldEnum | Operacion_ventasScalarFieldEnum[]
  }

  /**
   * operacion_ventas findFirstOrThrow
   */
  export type operacion_ventasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_ventas to fetch.
     */
    where?: operacion_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_ventas to fetch.
     */
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for operacion_ventas.
     */
    cursor?: operacion_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of operacion_ventas.
     */
    distinct?: Operacion_ventasScalarFieldEnum | Operacion_ventasScalarFieldEnum[]
  }

  /**
   * operacion_ventas findMany
   */
  export type operacion_ventasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter, which operacion_ventas to fetch.
     */
    where?: operacion_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of operacion_ventas to fetch.
     */
    orderBy?: operacion_ventasOrderByWithRelationInput | operacion_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing operacion_ventas.
     */
    cursor?: operacion_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` operacion_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` operacion_ventas.
     */
    skip?: number
    distinct?: Operacion_ventasScalarFieldEnum | Operacion_ventasScalarFieldEnum[]
  }

  /**
   * operacion_ventas create
   */
  export type operacion_ventasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * The data needed to create a operacion_ventas.
     */
    data: XOR<operacion_ventasCreateInput, operacion_ventasUncheckedCreateInput>
  }

  /**
   * operacion_ventas createMany
   */
  export type operacion_ventasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many operacion_ventas.
     */
    data: operacion_ventasCreateManyInput | operacion_ventasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * operacion_ventas createManyAndReturn
   */
  export type operacion_ventasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * The data used to create many operacion_ventas.
     */
    data: operacion_ventasCreateManyInput | operacion_ventasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_ventas update
   */
  export type operacion_ventasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * The data needed to update a operacion_ventas.
     */
    data: XOR<operacion_ventasUpdateInput, operacion_ventasUncheckedUpdateInput>
    /**
     * Choose, which operacion_ventas to update.
     */
    where: operacion_ventasWhereUniqueInput
  }

  /**
   * operacion_ventas updateMany
   */
  export type operacion_ventasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update operacion_ventas.
     */
    data: XOR<operacion_ventasUpdateManyMutationInput, operacion_ventasUncheckedUpdateManyInput>
    /**
     * Filter which operacion_ventas to update
     */
    where?: operacion_ventasWhereInput
    /**
     * Limit how many operacion_ventas to update.
     */
    limit?: number
  }

  /**
   * operacion_ventas updateManyAndReturn
   */
  export type operacion_ventasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * The data used to update operacion_ventas.
     */
    data: XOR<operacion_ventasUpdateManyMutationInput, operacion_ventasUncheckedUpdateManyInput>
    /**
     * Filter which operacion_ventas to update
     */
    where?: operacion_ventasWhereInput
    /**
     * Limit how many operacion_ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * operacion_ventas upsert
   */
  export type operacion_ventasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * The filter to search for the operacion_ventas to update in case it exists.
     */
    where: operacion_ventasWhereUniqueInput
    /**
     * In case the operacion_ventas found by the `where` argument doesn't exist, create a new operacion_ventas with this data.
     */
    create: XOR<operacion_ventasCreateInput, operacion_ventasUncheckedCreateInput>
    /**
     * In case the operacion_ventas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<operacion_ventasUpdateInput, operacion_ventasUncheckedUpdateInput>
  }

  /**
   * operacion_ventas delete
   */
  export type operacion_ventasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
    /**
     * Filter which operacion_ventas to delete.
     */
    where: operacion_ventasWhereUniqueInput
  }

  /**
   * operacion_ventas deleteMany
   */
  export type operacion_ventasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which operacion_ventas to delete
     */
    where?: operacion_ventasWhereInput
    /**
     * Limit how many operacion_ventas to delete.
     */
    limit?: number
  }

  /**
   * operacion_ventas.detalle_venta
   */
  export type operacion_ventas$detalle_ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    where?: detalle_ventaWhereInput
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    cursor?: detalle_ventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_ventaScalarFieldEnum | Detalle_ventaScalarFieldEnum[]
  }

  /**
   * operacion_ventas.pagos_clientes
   */
  export type operacion_ventas$pagos_clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    where?: pagos_clientesWhereInput
    orderBy?: pagos_clientesOrderByWithRelationInput | pagos_clientesOrderByWithRelationInput[]
    cursor?: pagos_clientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pagos_clientesScalarFieldEnum | Pagos_clientesScalarFieldEnum[]
  }

  /**
   * operacion_ventas without action
   */
  export type operacion_ventasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_ventas
     */
    select?: operacion_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_ventas
     */
    omit?: operacion_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_ventasInclude<ExtArgs> | null
  }


  /**
   * Model pagos_clientes
   */

  export type AggregatePagos_clientes = {
    _count: Pagos_clientesCountAggregateOutputType | null
    _avg: Pagos_clientesAvgAggregateOutputType | null
    _sum: Pagos_clientesSumAggregateOutputType | null
    _min: Pagos_clientesMinAggregateOutputType | null
    _max: Pagos_clientesMaxAggregateOutputType | null
  }

  export type Pagos_clientesAvgAggregateOutputType = {
    id_pagos_clientes: number | null
    id_operacion_venta: number | null
    monto_pago: number | null
  }

  export type Pagos_clientesSumAggregateOutputType = {
    id_pagos_clientes: number | null
    id_operacion_venta: number | null
    monto_pago: number | null
  }

  export type Pagos_clientesMinAggregateOutputType = {
    id_pagos_clientes: number | null
    id_operacion_venta: number | null
    monto_pago: number | null
    fecha_pago: Date | null
    metodo_pago: string | null
  }

  export type Pagos_clientesMaxAggregateOutputType = {
    id_pagos_clientes: number | null
    id_operacion_venta: number | null
    monto_pago: number | null
    fecha_pago: Date | null
    metodo_pago: string | null
  }

  export type Pagos_clientesCountAggregateOutputType = {
    id_pagos_clientes: number
    id_operacion_venta: number
    monto_pago: number
    fecha_pago: number
    metodo_pago: number
    _all: number
  }


  export type Pagos_clientesAvgAggregateInputType = {
    id_pagos_clientes?: true
    id_operacion_venta?: true
    monto_pago?: true
  }

  export type Pagos_clientesSumAggregateInputType = {
    id_pagos_clientes?: true
    id_operacion_venta?: true
    monto_pago?: true
  }

  export type Pagos_clientesMinAggregateInputType = {
    id_pagos_clientes?: true
    id_operacion_venta?: true
    monto_pago?: true
    fecha_pago?: true
    metodo_pago?: true
  }

  export type Pagos_clientesMaxAggregateInputType = {
    id_pagos_clientes?: true
    id_operacion_venta?: true
    monto_pago?: true
    fecha_pago?: true
    metodo_pago?: true
  }

  export type Pagos_clientesCountAggregateInputType = {
    id_pagos_clientes?: true
    id_operacion_venta?: true
    monto_pago?: true
    fecha_pago?: true
    metodo_pago?: true
    _all?: true
  }

  export type Pagos_clientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagos_clientes to aggregate.
     */
    where?: pagos_clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos_clientes to fetch.
     */
    orderBy?: pagos_clientesOrderByWithRelationInput | pagos_clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pagos_clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pagos_clientes
    **/
    _count?: true | Pagos_clientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pagos_clientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pagos_clientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pagos_clientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pagos_clientesMaxAggregateInputType
  }

  export type GetPagos_clientesAggregateType<T extends Pagos_clientesAggregateArgs> = {
        [P in keyof T & keyof AggregatePagos_clientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagos_clientes[P]>
      : GetScalarType<T[P], AggregatePagos_clientes[P]>
  }




  export type pagos_clientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pagos_clientesWhereInput
    orderBy?: pagos_clientesOrderByWithAggregationInput | pagos_clientesOrderByWithAggregationInput[]
    by: Pagos_clientesScalarFieldEnum[] | Pagos_clientesScalarFieldEnum
    having?: pagos_clientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pagos_clientesCountAggregateInputType | true
    _avg?: Pagos_clientesAvgAggregateInputType
    _sum?: Pagos_clientesSumAggregateInputType
    _min?: Pagos_clientesMinAggregateInputType
    _max?: Pagos_clientesMaxAggregateInputType
  }

  export type Pagos_clientesGroupByOutputType = {
    id_pagos_clientes: number
    id_operacion_venta: number
    monto_pago: number
    fecha_pago: Date
    metodo_pago: string
    _count: Pagos_clientesCountAggregateOutputType | null
    _avg: Pagos_clientesAvgAggregateOutputType | null
    _sum: Pagos_clientesSumAggregateOutputType | null
    _min: Pagos_clientesMinAggregateOutputType | null
    _max: Pagos_clientesMaxAggregateOutputType | null
  }

  type GetPagos_clientesGroupByPayload<T extends pagos_clientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pagos_clientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pagos_clientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pagos_clientesGroupByOutputType[P]>
            : GetScalarType<T[P], Pagos_clientesGroupByOutputType[P]>
        }
      >
    >


  export type pagos_clientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagos_clientes?: boolean
    id_operacion_venta?: boolean
    monto_pago?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos_clientes"]>

  export type pagos_clientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagos_clientes?: boolean
    id_operacion_venta?: boolean
    monto_pago?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos_clientes"]>

  export type pagos_clientesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pagos_clientes?: boolean
    id_operacion_venta?: boolean
    monto_pago?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos_clientes"]>

  export type pagos_clientesSelectScalar = {
    id_pagos_clientes?: boolean
    id_operacion_venta?: boolean
    monto_pago?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
  }

  export type pagos_clientesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pagos_clientes" | "id_operacion_venta" | "monto_pago" | "fecha_pago" | "metodo_pago", ExtArgs["result"]["pagos_clientes"]>
  export type pagos_clientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }
  export type pagos_clientesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }
  export type pagos_clientesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_ventas?: boolean | operacion_ventasDefaultArgs<ExtArgs>
  }

  export type $pagos_clientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pagos_clientes"
    objects: {
      operacion_ventas: Prisma.$operacion_ventasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pagos_clientes: number
      id_operacion_venta: number
      monto_pago: number
      fecha_pago: Date
      metodo_pago: string
    }, ExtArgs["result"]["pagos_clientes"]>
    composites: {}
  }

  type pagos_clientesGetPayload<S extends boolean | null | undefined | pagos_clientesDefaultArgs> = $Result.GetResult<Prisma.$pagos_clientesPayload, S>

  type pagos_clientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pagos_clientesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pagos_clientesCountAggregateInputType | true
    }

  export interface pagos_clientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pagos_clientes'], meta: { name: 'pagos_clientes' } }
    /**
     * Find zero or one Pagos_clientes that matches the filter.
     * @param {pagos_clientesFindUniqueArgs} args - Arguments to find a Pagos_clientes
     * @example
     * // Get one Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pagos_clientesFindUniqueArgs>(args: SelectSubset<T, pagos_clientesFindUniqueArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pagos_clientes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pagos_clientesFindUniqueOrThrowArgs} args - Arguments to find a Pagos_clientes
     * @example
     * // Get one Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pagos_clientesFindUniqueOrThrowArgs>(args: SelectSubset<T, pagos_clientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagos_clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesFindFirstArgs} args - Arguments to find a Pagos_clientes
     * @example
     * // Get one Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pagos_clientesFindFirstArgs>(args?: SelectSubset<T, pagos_clientesFindFirstArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagos_clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesFindFirstOrThrowArgs} args - Arguments to find a Pagos_clientes
     * @example
     * // Get one Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pagos_clientesFindFirstOrThrowArgs>(args?: SelectSubset<T, pagos_clientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagos_clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findMany()
     * 
     * // Get first 10 Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.findMany({ take: 10 })
     * 
     * // Only select the `id_pagos_clientes`
     * const pagos_clientesWithId_pagos_clientesOnly = await prisma.pagos_clientes.findMany({ select: { id_pagos_clientes: true } })
     * 
     */
    findMany<T extends pagos_clientesFindManyArgs>(args?: SelectSubset<T, pagos_clientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pagos_clientes.
     * @param {pagos_clientesCreateArgs} args - Arguments to create a Pagos_clientes.
     * @example
     * // Create one Pagos_clientes
     * const Pagos_clientes = await prisma.pagos_clientes.create({
     *   data: {
     *     // ... data to create a Pagos_clientes
     *   }
     * })
     * 
     */
    create<T extends pagos_clientesCreateArgs>(args: SelectSubset<T, pagos_clientesCreateArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagos_clientes.
     * @param {pagos_clientesCreateManyArgs} args - Arguments to create many Pagos_clientes.
     * @example
     * // Create many Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pagos_clientesCreateManyArgs>(args?: SelectSubset<T, pagos_clientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos_clientes and returns the data saved in the database.
     * @param {pagos_clientesCreateManyAndReturnArgs} args - Arguments to create many Pagos_clientes.
     * @example
     * // Create many Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos_clientes and only return the `id_pagos_clientes`
     * const pagos_clientesWithId_pagos_clientesOnly = await prisma.pagos_clientes.createManyAndReturn({
     *   select: { id_pagos_clientes: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pagos_clientesCreateManyAndReturnArgs>(args?: SelectSubset<T, pagos_clientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pagos_clientes.
     * @param {pagos_clientesDeleteArgs} args - Arguments to delete one Pagos_clientes.
     * @example
     * // Delete one Pagos_clientes
     * const Pagos_clientes = await prisma.pagos_clientes.delete({
     *   where: {
     *     // ... filter to delete one Pagos_clientes
     *   }
     * })
     * 
     */
    delete<T extends pagos_clientesDeleteArgs>(args: SelectSubset<T, pagos_clientesDeleteArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pagos_clientes.
     * @param {pagos_clientesUpdateArgs} args - Arguments to update one Pagos_clientes.
     * @example
     * // Update one Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pagos_clientesUpdateArgs>(args: SelectSubset<T, pagos_clientesUpdateArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagos_clientes.
     * @param {pagos_clientesDeleteManyArgs} args - Arguments to filter Pagos_clientes to delete.
     * @example
     * // Delete a few Pagos_clientes
     * const { count } = await prisma.pagos_clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pagos_clientesDeleteManyArgs>(args?: SelectSubset<T, pagos_clientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pagos_clientesUpdateManyArgs>(args: SelectSubset<T, pagos_clientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos_clientes and returns the data updated in the database.
     * @param {pagos_clientesUpdateManyAndReturnArgs} args - Arguments to update many Pagos_clientes.
     * @example
     * // Update many Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagos_clientes and only return the `id_pagos_clientes`
     * const pagos_clientesWithId_pagos_clientesOnly = await prisma.pagos_clientes.updateManyAndReturn({
     *   select: { id_pagos_clientes: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pagos_clientesUpdateManyAndReturnArgs>(args: SelectSubset<T, pagos_clientesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pagos_clientes.
     * @param {pagos_clientesUpsertArgs} args - Arguments to update or create a Pagos_clientes.
     * @example
     * // Update or create a Pagos_clientes
     * const pagos_clientes = await prisma.pagos_clientes.upsert({
     *   create: {
     *     // ... data to create a Pagos_clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagos_clientes we want to update
     *   }
     * })
     */
    upsert<T extends pagos_clientesUpsertArgs>(args: SelectSubset<T, pagos_clientesUpsertArgs<ExtArgs>>): Prisma__pagos_clientesClient<$Result.GetResult<Prisma.$pagos_clientesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagos_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesCountArgs} args - Arguments to filter Pagos_clientes to count.
     * @example
     * // Count the number of Pagos_clientes
     * const count = await prisma.pagos_clientes.count({
     *   where: {
     *     // ... the filter for the Pagos_clientes we want to count
     *   }
     * })
    **/
    count<T extends pagos_clientesCountArgs>(
      args?: Subset<T, pagos_clientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pagos_clientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagos_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pagos_clientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pagos_clientesAggregateArgs>(args: Subset<T, Pagos_clientesAggregateArgs>): Prisma.PrismaPromise<GetPagos_clientesAggregateType<T>>

    /**
     * Group by Pagos_clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pagos_clientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pagos_clientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pagos_clientesGroupByArgs['orderBy'] }
        : { orderBy?: pagos_clientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pagos_clientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagos_clientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pagos_clientes model
   */
  readonly fields: pagos_clientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pagos_clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pagos_clientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion_ventas<T extends operacion_ventasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, operacion_ventasDefaultArgs<ExtArgs>>): Prisma__operacion_ventasClient<$Result.GetResult<Prisma.$operacion_ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pagos_clientes model
   */
  interface pagos_clientesFieldRefs {
    readonly id_pagos_clientes: FieldRef<"pagos_clientes", 'Int'>
    readonly id_operacion_venta: FieldRef<"pagos_clientes", 'Int'>
    readonly monto_pago: FieldRef<"pagos_clientes", 'Float'>
    readonly fecha_pago: FieldRef<"pagos_clientes", 'DateTime'>
    readonly metodo_pago: FieldRef<"pagos_clientes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pagos_clientes findUnique
   */
  export type pagos_clientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter, which pagos_clientes to fetch.
     */
    where: pagos_clientesWhereUniqueInput
  }

  /**
   * pagos_clientes findUniqueOrThrow
   */
  export type pagos_clientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter, which pagos_clientes to fetch.
     */
    where: pagos_clientesWhereUniqueInput
  }

  /**
   * pagos_clientes findFirst
   */
  export type pagos_clientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter, which pagos_clientes to fetch.
     */
    where?: pagos_clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos_clientes to fetch.
     */
    orderBy?: pagos_clientesOrderByWithRelationInput | pagos_clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagos_clientes.
     */
    cursor?: pagos_clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagos_clientes.
     */
    distinct?: Pagos_clientesScalarFieldEnum | Pagos_clientesScalarFieldEnum[]
  }

  /**
   * pagos_clientes findFirstOrThrow
   */
  export type pagos_clientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter, which pagos_clientes to fetch.
     */
    where?: pagos_clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos_clientes to fetch.
     */
    orderBy?: pagos_clientesOrderByWithRelationInput | pagos_clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pagos_clientes.
     */
    cursor?: pagos_clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos_clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pagos_clientes.
     */
    distinct?: Pagos_clientesScalarFieldEnum | Pagos_clientesScalarFieldEnum[]
  }

  /**
   * pagos_clientes findMany
   */
  export type pagos_clientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter, which pagos_clientes to fetch.
     */
    where?: pagos_clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pagos_clientes to fetch.
     */
    orderBy?: pagos_clientesOrderByWithRelationInput | pagos_clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pagos_clientes.
     */
    cursor?: pagos_clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pagos_clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pagos_clientes.
     */
    skip?: number
    distinct?: Pagos_clientesScalarFieldEnum | Pagos_clientesScalarFieldEnum[]
  }

  /**
   * pagos_clientes create
   */
  export type pagos_clientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * The data needed to create a pagos_clientes.
     */
    data: XOR<pagos_clientesCreateInput, pagos_clientesUncheckedCreateInput>
  }

  /**
   * pagos_clientes createMany
   */
  export type pagos_clientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pagos_clientes.
     */
    data: pagos_clientesCreateManyInput | pagos_clientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pagos_clientes createManyAndReturn
   */
  export type pagos_clientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * The data used to create many pagos_clientes.
     */
    data: pagos_clientesCreateManyInput | pagos_clientesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pagos_clientes update
   */
  export type pagos_clientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * The data needed to update a pagos_clientes.
     */
    data: XOR<pagos_clientesUpdateInput, pagos_clientesUncheckedUpdateInput>
    /**
     * Choose, which pagos_clientes to update.
     */
    where: pagos_clientesWhereUniqueInput
  }

  /**
   * pagos_clientes updateMany
   */
  export type pagos_clientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pagos_clientes.
     */
    data: XOR<pagos_clientesUpdateManyMutationInput, pagos_clientesUncheckedUpdateManyInput>
    /**
     * Filter which pagos_clientes to update
     */
    where?: pagos_clientesWhereInput
    /**
     * Limit how many pagos_clientes to update.
     */
    limit?: number
  }

  /**
   * pagos_clientes updateManyAndReturn
   */
  export type pagos_clientesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * The data used to update pagos_clientes.
     */
    data: XOR<pagos_clientesUpdateManyMutationInput, pagos_clientesUncheckedUpdateManyInput>
    /**
     * Filter which pagos_clientes to update
     */
    where?: pagos_clientesWhereInput
    /**
     * Limit how many pagos_clientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pagos_clientes upsert
   */
  export type pagos_clientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * The filter to search for the pagos_clientes to update in case it exists.
     */
    where: pagos_clientesWhereUniqueInput
    /**
     * In case the pagos_clientes found by the `where` argument doesn't exist, create a new pagos_clientes with this data.
     */
    create: XOR<pagos_clientesCreateInput, pagos_clientesUncheckedCreateInput>
    /**
     * In case the pagos_clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pagos_clientesUpdateInput, pagos_clientesUncheckedUpdateInput>
  }

  /**
   * pagos_clientes delete
   */
  export type pagos_clientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
    /**
     * Filter which pagos_clientes to delete.
     */
    where: pagos_clientesWhereUniqueInput
  }

  /**
   * pagos_clientes deleteMany
   */
  export type pagos_clientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pagos_clientes to delete
     */
    where?: pagos_clientesWhereInput
    /**
     * Limit how many pagos_clientes to delete.
     */
    limit?: number
  }

  /**
   * pagos_clientes without action
   */
  export type pagos_clientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pagos_clientes
     */
    select?: pagos_clientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pagos_clientes
     */
    omit?: pagos_clientesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pagos_clientesInclude<ExtArgs> | null
  }


  /**
   * Model producto_variantes
   */

  export type AggregateProducto_variantes = {
    _count: Producto_variantesCountAggregateOutputType | null
    _avg: Producto_variantesAvgAggregateOutputType | null
    _sum: Producto_variantesSumAggregateOutputType | null
    _min: Producto_variantesMinAggregateOutputType | null
    _max: Producto_variantesMaxAggregateOutputType | null
  }

  export type Producto_variantesAvgAggregateOutputType = {
    id_variante: number | null
    id_producto: number | null
    stock_actual: number | null
  }

  export type Producto_variantesSumAggregateOutputType = {
    id_variante: number | null
    id_producto: number | null
    stock_actual: number | null
  }

  export type Producto_variantesMinAggregateOutputType = {
    id_variante: number | null
    id_producto: number | null
    talle: string | null
    stock_actual: number | null
    color: string | null
  }

  export type Producto_variantesMaxAggregateOutputType = {
    id_variante: number | null
    id_producto: number | null
    talle: string | null
    stock_actual: number | null
    color: string | null
  }

  export type Producto_variantesCountAggregateOutputType = {
    id_variante: number
    id_producto: number
    talle: number
    stock_actual: number
    color: number
    _all: number
  }


  export type Producto_variantesAvgAggregateInputType = {
    id_variante?: true
    id_producto?: true
    stock_actual?: true
  }

  export type Producto_variantesSumAggregateInputType = {
    id_variante?: true
    id_producto?: true
    stock_actual?: true
  }

  export type Producto_variantesMinAggregateInputType = {
    id_variante?: true
    id_producto?: true
    talle?: true
    stock_actual?: true
    color?: true
  }

  export type Producto_variantesMaxAggregateInputType = {
    id_variante?: true
    id_producto?: true
    talle?: true
    stock_actual?: true
    color?: true
  }

  export type Producto_variantesCountAggregateInputType = {
    id_variante?: true
    id_producto?: true
    talle?: true
    stock_actual?: true
    color?: true
    _all?: true
  }

  export type Producto_variantesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which producto_variantes to aggregate.
     */
    where?: producto_variantesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of producto_variantes to fetch.
     */
    orderBy?: producto_variantesOrderByWithRelationInput | producto_variantesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: producto_variantesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` producto_variantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` producto_variantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned producto_variantes
    **/
    _count?: true | Producto_variantesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Producto_variantesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Producto_variantesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Producto_variantesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Producto_variantesMaxAggregateInputType
  }

  export type GetProducto_variantesAggregateType<T extends Producto_variantesAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto_variantes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto_variantes[P]>
      : GetScalarType<T[P], AggregateProducto_variantes[P]>
  }




  export type producto_variantesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: producto_variantesWhereInput
    orderBy?: producto_variantesOrderByWithAggregationInput | producto_variantesOrderByWithAggregationInput[]
    by: Producto_variantesScalarFieldEnum[] | Producto_variantesScalarFieldEnum
    having?: producto_variantesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Producto_variantesCountAggregateInputType | true
    _avg?: Producto_variantesAvgAggregateInputType
    _sum?: Producto_variantesSumAggregateInputType
    _min?: Producto_variantesMinAggregateInputType
    _max?: Producto_variantesMaxAggregateInputType
  }

  export type Producto_variantesGroupByOutputType = {
    id_variante: number
    id_producto: number
    talle: string
    stock_actual: number
    color: string
    _count: Producto_variantesCountAggregateOutputType | null
    _avg: Producto_variantesAvgAggregateOutputType | null
    _sum: Producto_variantesSumAggregateOutputType | null
    _min: Producto_variantesMinAggregateOutputType | null
    _max: Producto_variantesMaxAggregateOutputType | null
  }

  type GetProducto_variantesGroupByPayload<T extends producto_variantesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Producto_variantesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Producto_variantesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Producto_variantesGroupByOutputType[P]>
            : GetScalarType<T[P], Producto_variantesGroupByOutputType[P]>
        }
      >
    >


  export type producto_variantesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_variante?: boolean
    id_producto?: boolean
    talle?: boolean
    stock_actual?: boolean
    color?: boolean
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_variantes"]>

  export type producto_variantesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_variante?: boolean
    id_producto?: boolean
    talle?: boolean
    stock_actual?: boolean
    color?: boolean
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_variantes"]>

  export type producto_variantesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_variante?: boolean
    id_producto?: boolean
    talle?: boolean
    stock_actual?: boolean
    color?: boolean
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_variantes"]>

  export type producto_variantesSelectScalar = {
    id_variante?: boolean
    id_producto?: boolean
    talle?: boolean
    stock_actual?: boolean
    color?: boolean
  }

  export type producto_variantesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_variante" | "id_producto" | "talle" | "stock_actual" | "color", ExtArgs["result"]["producto_variantes"]>
  export type producto_variantesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type producto_variantesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }
  export type producto_variantesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | productosDefaultArgs<ExtArgs>
  }

  export type $producto_variantesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "producto_variantes"
    objects: {
      productos: Prisma.$productosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_variante: number
      id_producto: number
      talle: string
      stock_actual: number
      color: string
    }, ExtArgs["result"]["producto_variantes"]>
    composites: {}
  }

  type producto_variantesGetPayload<S extends boolean | null | undefined | producto_variantesDefaultArgs> = $Result.GetResult<Prisma.$producto_variantesPayload, S>

  type producto_variantesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<producto_variantesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Producto_variantesCountAggregateInputType | true
    }

  export interface producto_variantesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['producto_variantes'], meta: { name: 'producto_variantes' } }
    /**
     * Find zero or one Producto_variantes that matches the filter.
     * @param {producto_variantesFindUniqueArgs} args - Arguments to find a Producto_variantes
     * @example
     * // Get one Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends producto_variantesFindUniqueArgs>(args: SelectSubset<T, producto_variantesFindUniqueArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto_variantes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {producto_variantesFindUniqueOrThrowArgs} args - Arguments to find a Producto_variantes
     * @example
     * // Get one Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends producto_variantesFindUniqueOrThrowArgs>(args: SelectSubset<T, producto_variantesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto_variantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesFindFirstArgs} args - Arguments to find a Producto_variantes
     * @example
     * // Get one Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends producto_variantesFindFirstArgs>(args?: SelectSubset<T, producto_variantesFindFirstArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto_variantes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesFindFirstOrThrowArgs} args - Arguments to find a Producto_variantes
     * @example
     * // Get one Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends producto_variantesFindFirstOrThrowArgs>(args?: SelectSubset<T, producto_variantesFindFirstOrThrowArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Producto_variantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findMany()
     * 
     * // Get first 10 Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.findMany({ take: 10 })
     * 
     * // Only select the `id_variante`
     * const producto_variantesWithId_varianteOnly = await prisma.producto_variantes.findMany({ select: { id_variante: true } })
     * 
     */
    findMany<T extends producto_variantesFindManyArgs>(args?: SelectSubset<T, producto_variantesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto_variantes.
     * @param {producto_variantesCreateArgs} args - Arguments to create a Producto_variantes.
     * @example
     * // Create one Producto_variantes
     * const Producto_variantes = await prisma.producto_variantes.create({
     *   data: {
     *     // ... data to create a Producto_variantes
     *   }
     * })
     * 
     */
    create<T extends producto_variantesCreateArgs>(args: SelectSubset<T, producto_variantesCreateArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Producto_variantes.
     * @param {producto_variantesCreateManyArgs} args - Arguments to create many Producto_variantes.
     * @example
     * // Create many Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends producto_variantesCreateManyArgs>(args?: SelectSubset<T, producto_variantesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Producto_variantes and returns the data saved in the database.
     * @param {producto_variantesCreateManyAndReturnArgs} args - Arguments to create many Producto_variantes.
     * @example
     * // Create many Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Producto_variantes and only return the `id_variante`
     * const producto_variantesWithId_varianteOnly = await prisma.producto_variantes.createManyAndReturn({
     *   select: { id_variante: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends producto_variantesCreateManyAndReturnArgs>(args?: SelectSubset<T, producto_variantesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto_variantes.
     * @param {producto_variantesDeleteArgs} args - Arguments to delete one Producto_variantes.
     * @example
     * // Delete one Producto_variantes
     * const Producto_variantes = await prisma.producto_variantes.delete({
     *   where: {
     *     // ... filter to delete one Producto_variantes
     *   }
     * })
     * 
     */
    delete<T extends producto_variantesDeleteArgs>(args: SelectSubset<T, producto_variantesDeleteArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto_variantes.
     * @param {producto_variantesUpdateArgs} args - Arguments to update one Producto_variantes.
     * @example
     * // Update one Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends producto_variantesUpdateArgs>(args: SelectSubset<T, producto_variantesUpdateArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Producto_variantes.
     * @param {producto_variantesDeleteManyArgs} args - Arguments to filter Producto_variantes to delete.
     * @example
     * // Delete a few Producto_variantes
     * const { count } = await prisma.producto_variantes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends producto_variantesDeleteManyArgs>(args?: SelectSubset<T, producto_variantesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Producto_variantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends producto_variantesUpdateManyArgs>(args: SelectSubset<T, producto_variantesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Producto_variantes and returns the data updated in the database.
     * @param {producto_variantesUpdateManyAndReturnArgs} args - Arguments to update many Producto_variantes.
     * @example
     * // Update many Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Producto_variantes and only return the `id_variante`
     * const producto_variantesWithId_varianteOnly = await prisma.producto_variantes.updateManyAndReturn({
     *   select: { id_variante: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends producto_variantesUpdateManyAndReturnArgs>(args: SelectSubset<T, producto_variantesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto_variantes.
     * @param {producto_variantesUpsertArgs} args - Arguments to update or create a Producto_variantes.
     * @example
     * // Update or create a Producto_variantes
     * const producto_variantes = await prisma.producto_variantes.upsert({
     *   create: {
     *     // ... data to create a Producto_variantes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto_variantes we want to update
     *   }
     * })
     */
    upsert<T extends producto_variantesUpsertArgs>(args: SelectSubset<T, producto_variantesUpsertArgs<ExtArgs>>): Prisma__producto_variantesClient<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Producto_variantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesCountArgs} args - Arguments to filter Producto_variantes to count.
     * @example
     * // Count the number of Producto_variantes
     * const count = await prisma.producto_variantes.count({
     *   where: {
     *     // ... the filter for the Producto_variantes we want to count
     *   }
     * })
    **/
    count<T extends producto_variantesCountArgs>(
      args?: Subset<T, producto_variantesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Producto_variantesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto_variantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_variantesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Producto_variantesAggregateArgs>(args: Subset<T, Producto_variantesAggregateArgs>): Prisma.PrismaPromise<GetProducto_variantesAggregateType<T>>

    /**
     * Group by Producto_variantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {producto_variantesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends producto_variantesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: producto_variantesGroupByArgs['orderBy'] }
        : { orderBy?: producto_variantesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, producto_variantesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProducto_variantesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the producto_variantes model
   */
  readonly fields: producto_variantesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for producto_variantes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__producto_variantesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends productosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productosDefaultArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the producto_variantes model
   */
  interface producto_variantesFieldRefs {
    readonly id_variante: FieldRef<"producto_variantes", 'Int'>
    readonly id_producto: FieldRef<"producto_variantes", 'Int'>
    readonly talle: FieldRef<"producto_variantes", 'String'>
    readonly stock_actual: FieldRef<"producto_variantes", 'Int'>
    readonly color: FieldRef<"producto_variantes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * producto_variantes findUnique
   */
  export type producto_variantesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter, which producto_variantes to fetch.
     */
    where: producto_variantesWhereUniqueInput
  }

  /**
   * producto_variantes findUniqueOrThrow
   */
  export type producto_variantesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter, which producto_variantes to fetch.
     */
    where: producto_variantesWhereUniqueInput
  }

  /**
   * producto_variantes findFirst
   */
  export type producto_variantesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter, which producto_variantes to fetch.
     */
    where?: producto_variantesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of producto_variantes to fetch.
     */
    orderBy?: producto_variantesOrderByWithRelationInput | producto_variantesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for producto_variantes.
     */
    cursor?: producto_variantesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` producto_variantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` producto_variantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of producto_variantes.
     */
    distinct?: Producto_variantesScalarFieldEnum | Producto_variantesScalarFieldEnum[]
  }

  /**
   * producto_variantes findFirstOrThrow
   */
  export type producto_variantesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter, which producto_variantes to fetch.
     */
    where?: producto_variantesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of producto_variantes to fetch.
     */
    orderBy?: producto_variantesOrderByWithRelationInput | producto_variantesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for producto_variantes.
     */
    cursor?: producto_variantesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` producto_variantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` producto_variantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of producto_variantes.
     */
    distinct?: Producto_variantesScalarFieldEnum | Producto_variantesScalarFieldEnum[]
  }

  /**
   * producto_variantes findMany
   */
  export type producto_variantesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter, which producto_variantes to fetch.
     */
    where?: producto_variantesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of producto_variantes to fetch.
     */
    orderBy?: producto_variantesOrderByWithRelationInput | producto_variantesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing producto_variantes.
     */
    cursor?: producto_variantesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` producto_variantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` producto_variantes.
     */
    skip?: number
    distinct?: Producto_variantesScalarFieldEnum | Producto_variantesScalarFieldEnum[]
  }

  /**
   * producto_variantes create
   */
  export type producto_variantesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * The data needed to create a producto_variantes.
     */
    data: XOR<producto_variantesCreateInput, producto_variantesUncheckedCreateInput>
  }

  /**
   * producto_variantes createMany
   */
  export type producto_variantesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many producto_variantes.
     */
    data: producto_variantesCreateManyInput | producto_variantesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * producto_variantes createManyAndReturn
   */
  export type producto_variantesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * The data used to create many producto_variantes.
     */
    data: producto_variantesCreateManyInput | producto_variantesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * producto_variantes update
   */
  export type producto_variantesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * The data needed to update a producto_variantes.
     */
    data: XOR<producto_variantesUpdateInput, producto_variantesUncheckedUpdateInput>
    /**
     * Choose, which producto_variantes to update.
     */
    where: producto_variantesWhereUniqueInput
  }

  /**
   * producto_variantes updateMany
   */
  export type producto_variantesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update producto_variantes.
     */
    data: XOR<producto_variantesUpdateManyMutationInput, producto_variantesUncheckedUpdateManyInput>
    /**
     * Filter which producto_variantes to update
     */
    where?: producto_variantesWhereInput
    /**
     * Limit how many producto_variantes to update.
     */
    limit?: number
  }

  /**
   * producto_variantes updateManyAndReturn
   */
  export type producto_variantesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * The data used to update producto_variantes.
     */
    data: XOR<producto_variantesUpdateManyMutationInput, producto_variantesUncheckedUpdateManyInput>
    /**
     * Filter which producto_variantes to update
     */
    where?: producto_variantesWhereInput
    /**
     * Limit how many producto_variantes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * producto_variantes upsert
   */
  export type producto_variantesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * The filter to search for the producto_variantes to update in case it exists.
     */
    where: producto_variantesWhereUniqueInput
    /**
     * In case the producto_variantes found by the `where` argument doesn't exist, create a new producto_variantes with this data.
     */
    create: XOR<producto_variantesCreateInput, producto_variantesUncheckedCreateInput>
    /**
     * In case the producto_variantes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<producto_variantesUpdateInput, producto_variantesUncheckedUpdateInput>
  }

  /**
   * producto_variantes delete
   */
  export type producto_variantesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    /**
     * Filter which producto_variantes to delete.
     */
    where: producto_variantesWhereUniqueInput
  }

  /**
   * producto_variantes deleteMany
   */
  export type producto_variantesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which producto_variantes to delete
     */
    where?: producto_variantesWhereInput
    /**
     * Limit how many producto_variantes to delete.
     */
    limit?: number
  }

  /**
   * producto_variantes without action
   */
  export type producto_variantesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
  }


  /**
   * Model productos
   */

  export type AggregateProductos = {
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  export type ProductosAvgAggregateOutputType = {
    id_producto: number | null
    costo: number | null
    precio_unitario: number | null
  }

  export type ProductosSumAggregateOutputType = {
    id_producto: number | null
    costo: number | null
    precio_unitario: number | null
  }

  export type ProductosMinAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    categoria: string | null
    costo: number | null
    precio_unitario: number | null
  }

  export type ProductosMaxAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    categoria: string | null
    costo: number | null
    precio_unitario: number | null
  }

  export type ProductosCountAggregateOutputType = {
    id_producto: number
    nombre: number
    categoria: number
    costo: number
    precio_unitario: number
    _all: number
  }


  export type ProductosAvgAggregateInputType = {
    id_producto?: true
    costo?: true
    precio_unitario?: true
  }

  export type ProductosSumAggregateInputType = {
    id_producto?: true
    costo?: true
    precio_unitario?: true
  }

  export type ProductosMinAggregateInputType = {
    id_producto?: true
    nombre?: true
    categoria?: true
    costo?: true
    precio_unitario?: true
  }

  export type ProductosMaxAggregateInputType = {
    id_producto?: true
    nombre?: true
    categoria?: true
    costo?: true
    precio_unitario?: true
  }

  export type ProductosCountAggregateInputType = {
    id_producto?: true
    nombre?: true
    categoria?: true
    costo?: true
    precio_unitario?: true
    _all?: true
  }

  export type ProductosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productos to aggregate.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productos
    **/
    _count?: true | ProductosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductosMaxAggregateInputType
  }

  export type GetProductosAggregateType<T extends ProductosAggregateArgs> = {
        [P in keyof T & keyof AggregateProductos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductos[P]>
      : GetScalarType<T[P], AggregateProductos[P]>
  }




  export type productosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productosWhereInput
    orderBy?: productosOrderByWithAggregationInput | productosOrderByWithAggregationInput[]
    by: ProductosScalarFieldEnum[] | ProductosScalarFieldEnum
    having?: productosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductosCountAggregateInputType | true
    _avg?: ProductosAvgAggregateInputType
    _sum?: ProductosSumAggregateInputType
    _min?: ProductosMinAggregateInputType
    _max?: ProductosMaxAggregateInputType
  }

  export type ProductosGroupByOutputType = {
    id_producto: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  type GetProductosGroupByPayload<T extends productosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductosGroupByOutputType[P]>
            : GetScalarType<T[P], ProductosGroupByOutputType[P]>
        }
      >
    >


  export type productosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    categoria?: boolean
    costo?: boolean
    precio_unitario?: boolean
    detalle_compra?: boolean | productos$detalle_compraArgs<ExtArgs>
    detalle_venta?: boolean | productos$detalle_ventaArgs<ExtArgs>
    inventario_movimientos?: boolean | productos$inventario_movimientosArgs<ExtArgs>
    producto_variantes?: boolean | productos$producto_variantesArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type productosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    categoria?: boolean
    costo?: boolean
    precio_unitario?: boolean
  }, ExtArgs["result"]["productos"]>

  export type productosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    categoria?: boolean
    costo?: boolean
    precio_unitario?: boolean
  }, ExtArgs["result"]["productos"]>

  export type productosSelectScalar = {
    id_producto?: boolean
    nombre?: boolean
    categoria?: boolean
    costo?: boolean
    precio_unitario?: boolean
  }

  export type productosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto" | "nombre" | "categoria" | "costo" | "precio_unitario", ExtArgs["result"]["productos"]>
  export type productosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compra?: boolean | productos$detalle_compraArgs<ExtArgs>
    detalle_venta?: boolean | productos$detalle_ventaArgs<ExtArgs>
    inventario_movimientos?: boolean | productos$inventario_movimientosArgs<ExtArgs>
    producto_variantes?: boolean | productos$producto_variantesArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type productosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $productosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productos"
    objects: {
      detalle_compra: Prisma.$detalle_compraPayload<ExtArgs>[]
      detalle_venta: Prisma.$detalle_ventaPayload<ExtArgs>[]
      inventario_movimientos: Prisma.$inventario_movimientosPayload<ExtArgs>[]
      producto_variantes: Prisma.$producto_variantesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_producto: number
      nombre: string
      categoria: string
      costo: number
      precio_unitario: number
    }, ExtArgs["result"]["productos"]>
    composites: {}
  }

  type productosGetPayload<S extends boolean | null | undefined | productosDefaultArgs> = $Result.GetResult<Prisma.$productosPayload, S>

  type productosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductosCountAggregateInputType | true
    }

  export interface productosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productos'], meta: { name: 'productos' } }
    /**
     * Find zero or one Productos that matches the filter.
     * @param {productosFindUniqueArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productosFindUniqueArgs>(args: SelectSubset<T, productosFindUniqueArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productosFindUniqueOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productosFindUniqueOrThrowArgs>(args: SelectSubset<T, productosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindFirstArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productosFindFirstArgs>(args?: SelectSubset<T, productosFindFirstArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindFirstOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productosFindFirstOrThrowArgs>(args?: SelectSubset<T, productosFindFirstOrThrowArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.productos.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.productos.findMany({ take: 10 })
     * 
     * // Only select the `id_producto`
     * const productosWithId_productoOnly = await prisma.productos.findMany({ select: { id_producto: true } })
     * 
     */
    findMany<T extends productosFindManyArgs>(args?: SelectSubset<T, productosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productos.
     * @param {productosCreateArgs} args - Arguments to create a Productos.
     * @example
     * // Create one Productos
     * const Productos = await prisma.productos.create({
     *   data: {
     *     // ... data to create a Productos
     *   }
     * })
     * 
     */
    create<T extends productosCreateArgs>(args: SelectSubset<T, productosCreateArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {productosCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productosCreateManyArgs>(args?: SelectSubset<T, productosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {productosCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id_producto`
     * const productosWithId_productoOnly = await prisma.productos.createManyAndReturn({
     *   select: { id_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productosCreateManyAndReturnArgs>(args?: SelectSubset<T, productosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productos.
     * @param {productosDeleteArgs} args - Arguments to delete one Productos.
     * @example
     * // Delete one Productos
     * const Productos = await prisma.productos.delete({
     *   where: {
     *     // ... filter to delete one Productos
     *   }
     * })
     * 
     */
    delete<T extends productosDeleteArgs>(args: SelectSubset<T, productosDeleteArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productos.
     * @param {productosUpdateArgs} args - Arguments to update one Productos.
     * @example
     * // Update one Productos
     * const productos = await prisma.productos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productosUpdateArgs>(args: SelectSubset<T, productosUpdateArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {productosDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.productos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productosDeleteManyArgs>(args?: SelectSubset<T, productosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productosUpdateManyArgs>(args: SelectSubset<T, productosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {productosUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id_producto`
     * const productosWithId_productoOnly = await prisma.productos.updateManyAndReturn({
     *   select: { id_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productosUpdateManyAndReturnArgs>(args: SelectSubset<T, productosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productos.
     * @param {productosUpsertArgs} args - Arguments to update or create a Productos.
     * @example
     * // Update or create a Productos
     * const productos = await prisma.productos.upsert({
     *   create: {
     *     // ... data to create a Productos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productos we want to update
     *   }
     * })
     */
    upsert<T extends productosUpsertArgs>(args: SelectSubset<T, productosUpsertArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.productos.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends productosCountArgs>(
      args?: Subset<T, productosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductosAggregateArgs>(args: Subset<T, ProductosAggregateArgs>): Prisma.PrismaPromise<GetProductosAggregateType<T>>

    /**
     * Group by Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productosGroupByArgs['orderBy'] }
        : { orderBy?: productosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productos model
   */
  readonly fields: productosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_compra<T extends productos$detalle_compraArgs<ExtArgs> = {}>(args?: Subset<T, productos$detalle_compraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    detalle_venta<T extends productos$detalle_ventaArgs<ExtArgs> = {}>(args?: Subset<T, productos$detalle_ventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inventario_movimientos<T extends productos$inventario_movimientosArgs<ExtArgs> = {}>(args?: Subset<T, productos$inventario_movimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inventario_movimientosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producto_variantes<T extends productos$producto_variantesArgs<ExtArgs> = {}>(args?: Subset<T, productos$producto_variantesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$producto_variantesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productos model
   */
  interface productosFieldRefs {
    readonly id_producto: FieldRef<"productos", 'Int'>
    readonly nombre: FieldRef<"productos", 'String'>
    readonly categoria: FieldRef<"productos", 'String'>
    readonly costo: FieldRef<"productos", 'Float'>
    readonly precio_unitario: FieldRef<"productos", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * productos findUnique
   */
  export type productosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos findUniqueOrThrow
   */
  export type productosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos findFirst
   */
  export type productosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos findFirstOrThrow
   */
  export type productosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos findMany
   */
  export type productosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos create
   */
  export type productosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The data needed to create a productos.
     */
    data: XOR<productosCreateInput, productosUncheckedCreateInput>
  }

  /**
   * productos createMany
   */
  export type productosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productos.
     */
    data: productosCreateManyInput | productosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productos createManyAndReturn
   */
  export type productosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * The data used to create many productos.
     */
    data: productosCreateManyInput | productosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productos update
   */
  export type productosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The data needed to update a productos.
     */
    data: XOR<productosUpdateInput, productosUncheckedUpdateInput>
    /**
     * Choose, which productos to update.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos updateMany
   */
  export type productosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productos.
     */
    data: XOR<productosUpdateManyMutationInput, productosUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * productos updateManyAndReturn
   */
  export type productosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * The data used to update productos.
     */
    data: XOR<productosUpdateManyMutationInput, productosUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * productos upsert
   */
  export type productosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The filter to search for the productos to update in case it exists.
     */
    where: productosWhereUniqueInput
    /**
     * In case the productos found by the `where` argument doesn't exist, create a new productos with this data.
     */
    create: XOR<productosCreateInput, productosUncheckedCreateInput>
    /**
     * In case the productos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productosUpdateInput, productosUncheckedUpdateInput>
  }

  /**
   * productos delete
   */
  export type productosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter which productos to delete.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos deleteMany
   */
  export type productosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productos to delete
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to delete.
     */
    limit?: number
  }

  /**
   * productos.detalle_compra
   */
  export type productos$detalle_compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compra
     */
    select?: detalle_compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compra
     */
    omit?: detalle_compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_compraInclude<ExtArgs> | null
    where?: detalle_compraWhereInput
    orderBy?: detalle_compraOrderByWithRelationInput | detalle_compraOrderByWithRelationInput[]
    cursor?: detalle_compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_compraScalarFieldEnum | Detalle_compraScalarFieldEnum[]
  }

  /**
   * productos.detalle_venta
   */
  export type productos$detalle_ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_venta
     */
    select?: detalle_ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_venta
     */
    omit?: detalle_ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventaInclude<ExtArgs> | null
    where?: detalle_ventaWhereInput
    orderBy?: detalle_ventaOrderByWithRelationInput | detalle_ventaOrderByWithRelationInput[]
    cursor?: detalle_ventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_ventaScalarFieldEnum | Detalle_ventaScalarFieldEnum[]
  }

  /**
   * productos.inventario_movimientos
   */
  export type productos$inventario_movimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inventario_movimientos
     */
    select?: inventario_movimientosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the inventario_movimientos
     */
    omit?: inventario_movimientosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inventario_movimientosInclude<ExtArgs> | null
    where?: inventario_movimientosWhereInput
    orderBy?: inventario_movimientosOrderByWithRelationInput | inventario_movimientosOrderByWithRelationInput[]
    cursor?: inventario_movimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Inventario_movimientosScalarFieldEnum | Inventario_movimientosScalarFieldEnum[]
  }

  /**
   * productos.producto_variantes
   */
  export type productos$producto_variantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto_variantes
     */
    select?: producto_variantesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto_variantes
     */
    omit?: producto_variantesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: producto_variantesInclude<ExtArgs> | null
    where?: producto_variantesWhereInput
    orderBy?: producto_variantesOrderByWithRelationInput | producto_variantesOrderByWithRelationInput[]
    cursor?: producto_variantesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Producto_variantesScalarFieldEnum | Producto_variantesScalarFieldEnum[]
  }

  /**
   * productos without action
   */
  export type productosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
  }


  /**
   * Model proveedores
   */

  export type AggregateProveedores = {
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  export type ProveedoresAvgAggregateOutputType = {
    id_proveedor: number | null
  }

  export type ProveedoresSumAggregateOutputType = {
    id_proveedor: number | null
  }

  export type ProveedoresMinAggregateOutputType = {
    id_proveedor: number | null
    nombre: string | null
    celular: string | null
    contacto: string | null
  }

  export type ProveedoresMaxAggregateOutputType = {
    id_proveedor: number | null
    nombre: string | null
    celular: string | null
    contacto: string | null
  }

  export type ProveedoresCountAggregateOutputType = {
    id_proveedor: number
    nombre: number
    celular: number
    contacto: number
    _all: number
  }


  export type ProveedoresAvgAggregateInputType = {
    id_proveedor?: true
  }

  export type ProveedoresSumAggregateInputType = {
    id_proveedor?: true
  }

  export type ProveedoresMinAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    celular?: true
    contacto?: true
  }

  export type ProveedoresMaxAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    celular?: true
    contacto?: true
  }

  export type ProveedoresCountAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    celular?: true
    contacto?: true
    _all?: true
  }

  export type ProveedoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to aggregate.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proveedores
    **/
    _count?: true | ProveedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedoresMaxAggregateInputType
  }

  export type GetProveedoresAggregateType<T extends ProveedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedores[P]>
      : GetScalarType<T[P], AggregateProveedores[P]>
  }




  export type proveedoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedoresWhereInput
    orderBy?: proveedoresOrderByWithAggregationInput | proveedoresOrderByWithAggregationInput[]
    by: ProveedoresScalarFieldEnum[] | ProveedoresScalarFieldEnum
    having?: proveedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedoresCountAggregateInputType | true
    _avg?: ProveedoresAvgAggregateInputType
    _sum?: ProveedoresSumAggregateInputType
    _min?: ProveedoresMinAggregateInputType
    _max?: ProveedoresMaxAggregateInputType
  }

  export type ProveedoresGroupByOutputType = {
    id_proveedor: number
    nombre: string
    celular: string | null
    contacto: string | null
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  type GetProveedoresGroupByPayload<T extends proveedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
        }
      >
    >


  export type proveedoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    celular?: boolean
    contacto?: boolean
    operacion_compras?: boolean | proveedores$operacion_comprasArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    celular?: boolean
    contacto?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    celular?: boolean
    contacto?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectScalar = {
    id_proveedor?: boolean
    nombre?: boolean
    celular?: boolean
    contacto?: boolean
  }

  export type proveedoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_proveedor" | "nombre" | "celular" | "contacto", ExtArgs["result"]["proveedores"]>
  export type proveedoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion_compras?: boolean | proveedores$operacion_comprasArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type proveedoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type proveedoresIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $proveedoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proveedores"
    objects: {
      operacion_compras: Prisma.$operacion_comprasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_proveedor: number
      nombre: string
      celular: string | null
      contacto: string | null
    }, ExtArgs["result"]["proveedores"]>
    composites: {}
  }

  type proveedoresGetPayload<S extends boolean | null | undefined | proveedoresDefaultArgs> = $Result.GetResult<Prisma.$proveedoresPayload, S>

  type proveedoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proveedoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProveedoresCountAggregateInputType | true
    }

  export interface proveedoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proveedores'], meta: { name: 'proveedores' } }
    /**
     * Find zero or one Proveedores that matches the filter.
     * @param {proveedoresFindUniqueArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proveedoresFindUniqueArgs>(args: SelectSubset<T, proveedoresFindUniqueArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proveedores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proveedoresFindUniqueOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proveedoresFindUniqueOrThrowArgs>(args: SelectSubset<T, proveedoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proveedoresFindFirstArgs>(args?: SelectSubset<T, proveedoresFindFirstArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proveedoresFindFirstOrThrowArgs>(args?: SelectSubset<T, proveedoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedores
     * const proveedores = await prisma.proveedores.findMany()
     * 
     * // Get first 10 Proveedores
     * const proveedores = await prisma.proveedores.findMany({ take: 10 })
     * 
     * // Only select the `id_proveedor`
     * const proveedoresWithId_proveedorOnly = await prisma.proveedores.findMany({ select: { id_proveedor: true } })
     * 
     */
    findMany<T extends proveedoresFindManyArgs>(args?: SelectSubset<T, proveedoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proveedores.
     * @param {proveedoresCreateArgs} args - Arguments to create a Proveedores.
     * @example
     * // Create one Proveedores
     * const Proveedores = await prisma.proveedores.create({
     *   data: {
     *     // ... data to create a Proveedores
     *   }
     * })
     * 
     */
    create<T extends proveedoresCreateArgs>(args: SelectSubset<T, proveedoresCreateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proveedores.
     * @param {proveedoresCreateManyArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proveedoresCreateManyArgs>(args?: SelectSubset<T, proveedoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedores and returns the data saved in the database.
     * @param {proveedoresCreateManyAndReturnArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedores and only return the `id_proveedor`
     * const proveedoresWithId_proveedorOnly = await prisma.proveedores.createManyAndReturn({
     *   select: { id_proveedor: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proveedoresCreateManyAndReturnArgs>(args?: SelectSubset<T, proveedoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proveedores.
     * @param {proveedoresDeleteArgs} args - Arguments to delete one Proveedores.
     * @example
     * // Delete one Proveedores
     * const Proveedores = await prisma.proveedores.delete({
     *   where: {
     *     // ... filter to delete one Proveedores
     *   }
     * })
     * 
     */
    delete<T extends proveedoresDeleteArgs>(args: SelectSubset<T, proveedoresDeleteArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proveedores.
     * @param {proveedoresUpdateArgs} args - Arguments to update one Proveedores.
     * @example
     * // Update one Proveedores
     * const proveedores = await prisma.proveedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proveedoresUpdateArgs>(args: SelectSubset<T, proveedoresUpdateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proveedores.
     * @param {proveedoresDeleteManyArgs} args - Arguments to filter Proveedores to delete.
     * @example
     * // Delete a few Proveedores
     * const { count } = await prisma.proveedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proveedoresDeleteManyArgs>(args?: SelectSubset<T, proveedoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proveedoresUpdateManyArgs>(args: SelectSubset<T, proveedoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores and returns the data updated in the database.
     * @param {proveedoresUpdateManyAndReturnArgs} args - Arguments to update many Proveedores.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proveedores and only return the `id_proveedor`
     * const proveedoresWithId_proveedorOnly = await prisma.proveedores.updateManyAndReturn({
     *   select: { id_proveedor: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proveedoresUpdateManyAndReturnArgs>(args: SelectSubset<T, proveedoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proveedores.
     * @param {proveedoresUpsertArgs} args - Arguments to update or create a Proveedores.
     * @example
     * // Update or create a Proveedores
     * const proveedores = await prisma.proveedores.upsert({
     *   create: {
     *     // ... data to create a Proveedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedores we want to update
     *   }
     * })
     */
    upsert<T extends proveedoresUpsertArgs>(args: SelectSubset<T, proveedoresUpsertArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresCountArgs} args - Arguments to filter Proveedores to count.
     * @example
     * // Count the number of Proveedores
     * const count = await prisma.proveedores.count({
     *   where: {
     *     // ... the filter for the Proveedores we want to count
     *   }
     * })
    **/
    count<T extends proveedoresCountArgs>(
      args?: Subset<T, proveedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedoresAggregateArgs>(args: Subset<T, ProveedoresAggregateArgs>): Prisma.PrismaPromise<GetProveedoresAggregateType<T>>

    /**
     * Group by Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proveedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proveedoresGroupByArgs['orderBy'] }
        : { orderBy?: proveedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proveedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proveedores model
   */
  readonly fields: proveedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proveedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proveedoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion_compras<T extends proveedores$operacion_comprasArgs<ExtArgs> = {}>(args?: Subset<T, proveedores$operacion_comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacion_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proveedores model
   */
  interface proveedoresFieldRefs {
    readonly id_proveedor: FieldRef<"proveedores", 'Int'>
    readonly nombre: FieldRef<"proveedores", 'String'>
    readonly celular: FieldRef<"proveedores", 'String'>
    readonly contacto: FieldRef<"proveedores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * proveedores findUnique
   */
  export type proveedoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findUniqueOrThrow
   */
  export type proveedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findFirst
   */
  export type proveedoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findFirstOrThrow
   */
  export type proveedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findMany
   */
  export type proveedoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores create
   */
  export type proveedoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a proveedores.
     */
    data: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
  }

  /**
   * proveedores createMany
   */
  export type proveedoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores createManyAndReturn
   */
  export type proveedoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores update
   */
  export type proveedoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a proveedores.
     */
    data: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
    /**
     * Choose, which proveedores to update.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores updateMany
   */
  export type proveedoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores updateManyAndReturn
   */
  export type proveedoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores upsert
   */
  export type proveedoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the proveedores to update in case it exists.
     */
    where: proveedoresWhereUniqueInput
    /**
     * In case the proveedores found by the `where` argument doesn't exist, create a new proveedores with this data.
     */
    create: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
    /**
     * In case the proveedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
  }

  /**
   * proveedores delete
   */
  export type proveedoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter which proveedores to delete.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores deleteMany
   */
  export type proveedoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to delete
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to delete.
     */
    limit?: number
  }

  /**
   * proveedores.operacion_compras
   */
  export type proveedores$operacion_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion_compras
     */
    select?: operacion_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion_compras
     */
    omit?: operacion_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacion_comprasInclude<ExtArgs> | null
    where?: operacion_comprasWhereInput
    orderBy?: operacion_comprasOrderByWithRelationInput | operacion_comprasOrderByWithRelationInput[]
    cursor?: operacion_comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Operacion_comprasScalarFieldEnum | Operacion_comprasScalarFieldEnum[]
  }

  /**
   * proveedores without action
   */
  export type proveedoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
  }


  /**
   * Model tipo_operacion
   */

  export type AggregateTipo_operacion = {
    _count: Tipo_operacionCountAggregateOutputType | null
    _avg: Tipo_operacionAvgAggregateOutputType | null
    _sum: Tipo_operacionSumAggregateOutputType | null
    _min: Tipo_operacionMinAggregateOutputType | null
    _max: Tipo_operacionMaxAggregateOutputType | null
  }

  export type Tipo_operacionAvgAggregateOutputType = {
    id_tipo_operacion: number | null
  }

  export type Tipo_operacionSumAggregateOutputType = {
    id_tipo_operacion: number | null
  }

  export type Tipo_operacionMinAggregateOutputType = {
    id_tipo_operacion: number | null
    tipo: string | null
  }

  export type Tipo_operacionMaxAggregateOutputType = {
    id_tipo_operacion: number | null
    tipo: string | null
  }

  export type Tipo_operacionCountAggregateOutputType = {
    id_tipo_operacion: number
    tipo: number
    _all: number
  }


  export type Tipo_operacionAvgAggregateInputType = {
    id_tipo_operacion?: true
  }

  export type Tipo_operacionSumAggregateInputType = {
    id_tipo_operacion?: true
  }

  export type Tipo_operacionMinAggregateInputType = {
    id_tipo_operacion?: true
    tipo?: true
  }

  export type Tipo_operacionMaxAggregateInputType = {
    id_tipo_operacion?: true
    tipo?: true
  }

  export type Tipo_operacionCountAggregateInputType = {
    id_tipo_operacion?: true
    tipo?: true
    _all?: true
  }

  export type Tipo_operacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_operacion to aggregate.
     */
    where?: tipo_operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_operacions to fetch.
     */
    orderBy?: tipo_operacionOrderByWithRelationInput | tipo_operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_operacions
    **/
    _count?: true | Tipo_operacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_operacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_operacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_operacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_operacionMaxAggregateInputType
  }

  export type GetTipo_operacionAggregateType<T extends Tipo_operacionAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_operacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_operacion[P]>
      : GetScalarType<T[P], AggregateTipo_operacion[P]>
  }




  export type tipo_operacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_operacionWhereInput
    orderBy?: tipo_operacionOrderByWithAggregationInput | tipo_operacionOrderByWithAggregationInput[]
    by: Tipo_operacionScalarFieldEnum[] | Tipo_operacionScalarFieldEnum
    having?: tipo_operacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_operacionCountAggregateInputType | true
    _avg?: Tipo_operacionAvgAggregateInputType
    _sum?: Tipo_operacionSumAggregateInputType
    _min?: Tipo_operacionMinAggregateInputType
    _max?: Tipo_operacionMaxAggregateInputType
  }

  export type Tipo_operacionGroupByOutputType = {
    id_tipo_operacion: number
    tipo: string
    _count: Tipo_operacionCountAggregateOutputType | null
    _avg: Tipo_operacionAvgAggregateOutputType | null
    _sum: Tipo_operacionSumAggregateOutputType | null
    _min: Tipo_operacionMinAggregateOutputType | null
    _max: Tipo_operacionMaxAggregateOutputType | null
  }

  type GetTipo_operacionGroupByPayload<T extends tipo_operacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_operacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_operacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_operacionGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_operacionGroupByOutputType[P]>
        }
      >
    >


  export type tipo_operacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_operacion?: boolean
    tipo?: boolean
    operacion?: boolean | tipo_operacion$operacionArgs<ExtArgs>
    _count?: boolean | Tipo_operacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_operacion"]>

  export type tipo_operacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_operacion?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["tipo_operacion"]>

  export type tipo_operacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_operacion?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["tipo_operacion"]>

  export type tipo_operacionSelectScalar = {
    id_tipo_operacion?: boolean
    tipo?: boolean
  }

  export type tipo_operacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_tipo_operacion" | "tipo", ExtArgs["result"]["tipo_operacion"]>
  export type tipo_operacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operacion?: boolean | tipo_operacion$operacionArgs<ExtArgs>
    _count?: boolean | Tipo_operacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipo_operacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipo_operacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipo_operacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_operacion"
    objects: {
      operacion: Prisma.$operacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_tipo_operacion: number
      tipo: string
    }, ExtArgs["result"]["tipo_operacion"]>
    composites: {}
  }

  type tipo_operacionGetPayload<S extends boolean | null | undefined | tipo_operacionDefaultArgs> = $Result.GetResult<Prisma.$tipo_operacionPayload, S>

  type tipo_operacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipo_operacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipo_operacionCountAggregateInputType | true
    }

  export interface tipo_operacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_operacion'], meta: { name: 'tipo_operacion' } }
    /**
     * Find zero or one Tipo_operacion that matches the filter.
     * @param {tipo_operacionFindUniqueArgs} args - Arguments to find a Tipo_operacion
     * @example
     * // Get one Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipo_operacionFindUniqueArgs>(args: SelectSubset<T, tipo_operacionFindUniqueArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipo_operacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipo_operacionFindUniqueOrThrowArgs} args - Arguments to find a Tipo_operacion
     * @example
     * // Get one Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipo_operacionFindUniqueOrThrowArgs>(args: SelectSubset<T, tipo_operacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_operacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionFindFirstArgs} args - Arguments to find a Tipo_operacion
     * @example
     * // Get one Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipo_operacionFindFirstArgs>(args?: SelectSubset<T, tipo_operacionFindFirstArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_operacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionFindFirstOrThrowArgs} args - Arguments to find a Tipo_operacion
     * @example
     * // Get one Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipo_operacionFindFirstOrThrowArgs>(args?: SelectSubset<T, tipo_operacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipo_operacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_operacions
     * const tipo_operacions = await prisma.tipo_operacion.findMany()
     * 
     * // Get first 10 Tipo_operacions
     * const tipo_operacions = await prisma.tipo_operacion.findMany({ take: 10 })
     * 
     * // Only select the `id_tipo_operacion`
     * const tipo_operacionWithId_tipo_operacionOnly = await prisma.tipo_operacion.findMany({ select: { id_tipo_operacion: true } })
     * 
     */
    findMany<T extends tipo_operacionFindManyArgs>(args?: SelectSubset<T, tipo_operacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipo_operacion.
     * @param {tipo_operacionCreateArgs} args - Arguments to create a Tipo_operacion.
     * @example
     * // Create one Tipo_operacion
     * const Tipo_operacion = await prisma.tipo_operacion.create({
     *   data: {
     *     // ... data to create a Tipo_operacion
     *   }
     * })
     * 
     */
    create<T extends tipo_operacionCreateArgs>(args: SelectSubset<T, tipo_operacionCreateArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipo_operacions.
     * @param {tipo_operacionCreateManyArgs} args - Arguments to create many Tipo_operacions.
     * @example
     * // Create many Tipo_operacions
     * const tipo_operacion = await prisma.tipo_operacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipo_operacionCreateManyArgs>(args?: SelectSubset<T, tipo_operacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipo_operacions and returns the data saved in the database.
     * @param {tipo_operacionCreateManyAndReturnArgs} args - Arguments to create many Tipo_operacions.
     * @example
     * // Create many Tipo_operacions
     * const tipo_operacion = await prisma.tipo_operacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipo_operacions and only return the `id_tipo_operacion`
     * const tipo_operacionWithId_tipo_operacionOnly = await prisma.tipo_operacion.createManyAndReturn({
     *   select: { id_tipo_operacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipo_operacionCreateManyAndReturnArgs>(args?: SelectSubset<T, tipo_operacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipo_operacion.
     * @param {tipo_operacionDeleteArgs} args - Arguments to delete one Tipo_operacion.
     * @example
     * // Delete one Tipo_operacion
     * const Tipo_operacion = await prisma.tipo_operacion.delete({
     *   where: {
     *     // ... filter to delete one Tipo_operacion
     *   }
     * })
     * 
     */
    delete<T extends tipo_operacionDeleteArgs>(args: SelectSubset<T, tipo_operacionDeleteArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipo_operacion.
     * @param {tipo_operacionUpdateArgs} args - Arguments to update one Tipo_operacion.
     * @example
     * // Update one Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipo_operacionUpdateArgs>(args: SelectSubset<T, tipo_operacionUpdateArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipo_operacions.
     * @param {tipo_operacionDeleteManyArgs} args - Arguments to filter Tipo_operacions to delete.
     * @example
     * // Delete a few Tipo_operacions
     * const { count } = await prisma.tipo_operacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipo_operacionDeleteManyArgs>(args?: SelectSubset<T, tipo_operacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_operacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_operacions
     * const tipo_operacion = await prisma.tipo_operacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipo_operacionUpdateManyArgs>(args: SelectSubset<T, tipo_operacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_operacions and returns the data updated in the database.
     * @param {tipo_operacionUpdateManyAndReturnArgs} args - Arguments to update many Tipo_operacions.
     * @example
     * // Update many Tipo_operacions
     * const tipo_operacion = await prisma.tipo_operacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipo_operacions and only return the `id_tipo_operacion`
     * const tipo_operacionWithId_tipo_operacionOnly = await prisma.tipo_operacion.updateManyAndReturn({
     *   select: { id_tipo_operacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipo_operacionUpdateManyAndReturnArgs>(args: SelectSubset<T, tipo_operacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipo_operacion.
     * @param {tipo_operacionUpsertArgs} args - Arguments to update or create a Tipo_operacion.
     * @example
     * // Update or create a Tipo_operacion
     * const tipo_operacion = await prisma.tipo_operacion.upsert({
     *   create: {
     *     // ... data to create a Tipo_operacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_operacion we want to update
     *   }
     * })
     */
    upsert<T extends tipo_operacionUpsertArgs>(args: SelectSubset<T, tipo_operacionUpsertArgs<ExtArgs>>): Prisma__tipo_operacionClient<$Result.GetResult<Prisma.$tipo_operacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipo_operacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionCountArgs} args - Arguments to filter Tipo_operacions to count.
     * @example
     * // Count the number of Tipo_operacions
     * const count = await prisma.tipo_operacion.count({
     *   where: {
     *     // ... the filter for the Tipo_operacions we want to count
     *   }
     * })
    **/
    count<T extends tipo_operacionCountArgs>(
      args?: Subset<T, tipo_operacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_operacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_operacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_operacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_operacionAggregateArgs>(args: Subset<T, Tipo_operacionAggregateArgs>): Prisma.PrismaPromise<GetTipo_operacionAggregateType<T>>

    /**
     * Group by Tipo_operacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_operacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_operacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_operacionGroupByArgs['orderBy'] }
        : { orderBy?: tipo_operacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_operacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_operacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_operacion model
   */
  readonly fields: tipo_operacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_operacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_operacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operacion<T extends tipo_operacion$operacionArgs<ExtArgs> = {}>(args?: Subset<T, tipo_operacion$operacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$operacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipo_operacion model
   */
  interface tipo_operacionFieldRefs {
    readonly id_tipo_operacion: FieldRef<"tipo_operacion", 'Int'>
    readonly tipo: FieldRef<"tipo_operacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipo_operacion findUnique
   */
  export type tipo_operacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter, which tipo_operacion to fetch.
     */
    where: tipo_operacionWhereUniqueInput
  }

  /**
   * tipo_operacion findUniqueOrThrow
   */
  export type tipo_operacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter, which tipo_operacion to fetch.
     */
    where: tipo_operacionWhereUniqueInput
  }

  /**
   * tipo_operacion findFirst
   */
  export type tipo_operacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter, which tipo_operacion to fetch.
     */
    where?: tipo_operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_operacions to fetch.
     */
    orderBy?: tipo_operacionOrderByWithRelationInput | tipo_operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_operacions.
     */
    cursor?: tipo_operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_operacions.
     */
    distinct?: Tipo_operacionScalarFieldEnum | Tipo_operacionScalarFieldEnum[]
  }

  /**
   * tipo_operacion findFirstOrThrow
   */
  export type tipo_operacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter, which tipo_operacion to fetch.
     */
    where?: tipo_operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_operacions to fetch.
     */
    orderBy?: tipo_operacionOrderByWithRelationInput | tipo_operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_operacions.
     */
    cursor?: tipo_operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_operacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_operacions.
     */
    distinct?: Tipo_operacionScalarFieldEnum | Tipo_operacionScalarFieldEnum[]
  }

  /**
   * tipo_operacion findMany
   */
  export type tipo_operacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter, which tipo_operacions to fetch.
     */
    where?: tipo_operacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_operacions to fetch.
     */
    orderBy?: tipo_operacionOrderByWithRelationInput | tipo_operacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_operacions.
     */
    cursor?: tipo_operacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_operacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_operacions.
     */
    skip?: number
    distinct?: Tipo_operacionScalarFieldEnum | Tipo_operacionScalarFieldEnum[]
  }

  /**
   * tipo_operacion create
   */
  export type tipo_operacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * The data needed to create a tipo_operacion.
     */
    data: XOR<tipo_operacionCreateInput, tipo_operacionUncheckedCreateInput>
  }

  /**
   * tipo_operacion createMany
   */
  export type tipo_operacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_operacions.
     */
    data: tipo_operacionCreateManyInput | tipo_operacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_operacion createManyAndReturn
   */
  export type tipo_operacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * The data used to create many tipo_operacions.
     */
    data: tipo_operacionCreateManyInput | tipo_operacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_operacion update
   */
  export type tipo_operacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * The data needed to update a tipo_operacion.
     */
    data: XOR<tipo_operacionUpdateInput, tipo_operacionUncheckedUpdateInput>
    /**
     * Choose, which tipo_operacion to update.
     */
    where: tipo_operacionWhereUniqueInput
  }

  /**
   * tipo_operacion updateMany
   */
  export type tipo_operacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_operacions.
     */
    data: XOR<tipo_operacionUpdateManyMutationInput, tipo_operacionUncheckedUpdateManyInput>
    /**
     * Filter which tipo_operacions to update
     */
    where?: tipo_operacionWhereInput
    /**
     * Limit how many tipo_operacions to update.
     */
    limit?: number
  }

  /**
   * tipo_operacion updateManyAndReturn
   */
  export type tipo_operacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * The data used to update tipo_operacions.
     */
    data: XOR<tipo_operacionUpdateManyMutationInput, tipo_operacionUncheckedUpdateManyInput>
    /**
     * Filter which tipo_operacions to update
     */
    where?: tipo_operacionWhereInput
    /**
     * Limit how many tipo_operacions to update.
     */
    limit?: number
  }

  /**
   * tipo_operacion upsert
   */
  export type tipo_operacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * The filter to search for the tipo_operacion to update in case it exists.
     */
    where: tipo_operacionWhereUniqueInput
    /**
     * In case the tipo_operacion found by the `where` argument doesn't exist, create a new tipo_operacion with this data.
     */
    create: XOR<tipo_operacionCreateInput, tipo_operacionUncheckedCreateInput>
    /**
     * In case the tipo_operacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_operacionUpdateInput, tipo_operacionUncheckedUpdateInput>
  }

  /**
   * tipo_operacion delete
   */
  export type tipo_operacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
    /**
     * Filter which tipo_operacion to delete.
     */
    where: tipo_operacionWhereUniqueInput
  }

  /**
   * tipo_operacion deleteMany
   */
  export type tipo_operacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_operacions to delete
     */
    where?: tipo_operacionWhereInput
    /**
     * Limit how many tipo_operacions to delete.
     */
    limit?: number
  }

  /**
   * tipo_operacion.operacion
   */
  export type tipo_operacion$operacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the operacion
     */
    select?: operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the operacion
     */
    omit?: operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: operacionInclude<ExtArgs> | null
    where?: operacionWhereInput
    orderBy?: operacionOrderByWithRelationInput | operacionOrderByWithRelationInput[]
    cursor?: operacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OperacionScalarFieldEnum | OperacionScalarFieldEnum[]
  }

  /**
   * tipo_operacion without action
   */
  export type tipo_operacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_operacion
     */
    select?: tipo_operacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_operacion
     */
    omit?: tipo_operacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_operacionInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Asiento_detallesScalarFieldEnum: {
    id_detalle: 'id_detalle',
    id_asiento: 'id_asiento',
    cuenta: 'cuenta',
    debe: 'debe',
    haber: 'haber'
  };

  export type Asiento_detallesScalarFieldEnum = (typeof Asiento_detallesScalarFieldEnum)[keyof typeof Asiento_detallesScalarFieldEnum]


  export const Asientos_contablesScalarFieldEnum: {
    id_asiento: 'id_asiento',
    id_operacion: 'id_operacion',
    fecha: 'fecha',
    descripcion: 'descripcion'
  };

  export type Asientos_contablesScalarFieldEnum = (typeof Asientos_contablesScalarFieldEnum)[keyof typeof Asientos_contablesScalarFieldEnum]


  export const ClientesScalarFieldEnum: {
    id_cliente: 'id_cliente',
    nombre: 'nombre',
    apellido: 'apellido',
    celular: 'celular'
  };

  export type ClientesScalarFieldEnum = (typeof ClientesScalarFieldEnum)[keyof typeof ClientesScalarFieldEnum]


  export const Detalle_compraScalarFieldEnum: {
    id_detalle_compra: 'id_detalle_compra',
    id_operacion_compra: 'id_operacion_compra',
    id_producto: 'id_producto',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario'
  };

  export type Detalle_compraScalarFieldEnum = (typeof Detalle_compraScalarFieldEnum)[keyof typeof Detalle_compraScalarFieldEnum]


  export const Detalle_ventaScalarFieldEnum: {
    id_detalle_venta: 'id_detalle_venta',
    id_operacion_venta: 'id_operacion_venta',
    id_producto: 'id_producto',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario'
  };

  export type Detalle_ventaScalarFieldEnum = (typeof Detalle_ventaScalarFieldEnum)[keyof typeof Detalle_ventaScalarFieldEnum]


  export const Inventario_movimientosScalarFieldEnum: {
    id_movimiento: 'id_movimiento',
    id_operacion: 'id_operacion',
    id_producto: 'id_producto',
    cantidad: 'cantidad',
    fecha: 'fecha',
    motivo: 'motivo'
  };

  export type Inventario_movimientosScalarFieldEnum = (typeof Inventario_movimientosScalarFieldEnum)[keyof typeof Inventario_movimientosScalarFieldEnum]


  export const OperacionScalarFieldEnum: {
    id_operacion: 'id_operacion',
    id_tipo_operacion: 'id_tipo_operacion',
    estado: 'estado'
  };

  export type OperacionScalarFieldEnum = (typeof OperacionScalarFieldEnum)[keyof typeof OperacionScalarFieldEnum]


  export const Operacion_comprasScalarFieldEnum: {
    id_operacion_compras: 'id_operacion_compras',
    id_operacion: 'id_operacion',
    id_proveedor: 'id_proveedor',
    fecha: 'fecha',
    total: 'total',
    metodo_pago: 'metodo_pago'
  };

  export type Operacion_comprasScalarFieldEnum = (typeof Operacion_comprasScalarFieldEnum)[keyof typeof Operacion_comprasScalarFieldEnum]


  export const Operacion_gastosScalarFieldEnum: {
    id_operacion_gastos: 'id_operacion_gastos',
    id_operacion: 'id_operacion',
    nombre: 'nombre',
    detalle: 'detalle',
    total: 'total'
  };

  export type Operacion_gastosScalarFieldEnum = (typeof Operacion_gastosScalarFieldEnum)[keyof typeof Operacion_gastosScalarFieldEnum]


  export const Operacion_ventasScalarFieldEnum: {
    id_operacion_ventas: 'id_operacion_ventas',
    id_operacion: 'id_operacion',
    id_cliente: 'id_cliente',
    fecha: 'fecha',
    total: 'total',
    metodo_pago: 'metodo_pago'
  };

  export type Operacion_ventasScalarFieldEnum = (typeof Operacion_ventasScalarFieldEnum)[keyof typeof Operacion_ventasScalarFieldEnum]


  export const Pagos_clientesScalarFieldEnum: {
    id_pagos_clientes: 'id_pagos_clientes',
    id_operacion_venta: 'id_operacion_venta',
    monto_pago: 'monto_pago',
    fecha_pago: 'fecha_pago',
    metodo_pago: 'metodo_pago'
  };

  export type Pagos_clientesScalarFieldEnum = (typeof Pagos_clientesScalarFieldEnum)[keyof typeof Pagos_clientesScalarFieldEnum]


  export const Producto_variantesScalarFieldEnum: {
    id_variante: 'id_variante',
    id_producto: 'id_producto',
    talle: 'talle',
    stock_actual: 'stock_actual',
    color: 'color'
  };

  export type Producto_variantesScalarFieldEnum = (typeof Producto_variantesScalarFieldEnum)[keyof typeof Producto_variantesScalarFieldEnum]


  export const ProductosScalarFieldEnum: {
    id_producto: 'id_producto',
    nombre: 'nombre',
    categoria: 'categoria',
    costo: 'costo',
    precio_unitario: 'precio_unitario'
  };

  export type ProductosScalarFieldEnum = (typeof ProductosScalarFieldEnum)[keyof typeof ProductosScalarFieldEnum]


  export const ProveedoresScalarFieldEnum: {
    id_proveedor: 'id_proveedor',
    nombre: 'nombre',
    celular: 'celular',
    contacto: 'contacto'
  };

  export type ProveedoresScalarFieldEnum = (typeof ProveedoresScalarFieldEnum)[keyof typeof ProveedoresScalarFieldEnum]


  export const Tipo_operacionScalarFieldEnum: {
    id_tipo_operacion: 'id_tipo_operacion',
    tipo: 'tipo'
  };

  export type Tipo_operacionScalarFieldEnum = (typeof Tipo_operacionScalarFieldEnum)[keyof typeof Tipo_operacionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    
  /**
   * Deep Input Types
   */


  export type asiento_detallesWhereInput = {
    AND?: asiento_detallesWhereInput | asiento_detallesWhereInput[]
    OR?: asiento_detallesWhereInput[]
    NOT?: asiento_detallesWhereInput | asiento_detallesWhereInput[]
    id_detalle?: IntFilter<"asiento_detalles"> | number
    id_asiento?: IntFilter<"asiento_detalles"> | number
    cuenta?: StringFilter<"asiento_detalles"> | string
    debe?: FloatNullableFilter<"asiento_detalles"> | number | null
    haber?: FloatNullableFilter<"asiento_detalles"> | number | null
    asientos_contables?: XOR<Asientos_contablesScalarRelationFilter, asientos_contablesWhereInput>
  }

  export type asiento_detallesOrderByWithRelationInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    cuenta?: SortOrder
    debe?: SortOrderInput | SortOrder
    haber?: SortOrderInput | SortOrder
    asientos_contables?: asientos_contablesOrderByWithRelationInput
  }

  export type asiento_detallesWhereUniqueInput = Prisma.AtLeast<{
    id_detalle?: number
    AND?: asiento_detallesWhereInput | asiento_detallesWhereInput[]
    OR?: asiento_detallesWhereInput[]
    NOT?: asiento_detallesWhereInput | asiento_detallesWhereInput[]
    id_asiento?: IntFilter<"asiento_detalles"> | number
    cuenta?: StringFilter<"asiento_detalles"> | string
    debe?: FloatNullableFilter<"asiento_detalles"> | number | null
    haber?: FloatNullableFilter<"asiento_detalles"> | number | null
    asientos_contables?: XOR<Asientos_contablesScalarRelationFilter, asientos_contablesWhereInput>
  }, "id_detalle">

  export type asiento_detallesOrderByWithAggregationInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    cuenta?: SortOrder
    debe?: SortOrderInput | SortOrder
    haber?: SortOrderInput | SortOrder
    _count?: asiento_detallesCountOrderByAggregateInput
    _avg?: asiento_detallesAvgOrderByAggregateInput
    _max?: asiento_detallesMaxOrderByAggregateInput
    _min?: asiento_detallesMinOrderByAggregateInput
    _sum?: asiento_detallesSumOrderByAggregateInput
  }

  export type asiento_detallesScalarWhereWithAggregatesInput = {
    AND?: asiento_detallesScalarWhereWithAggregatesInput | asiento_detallesScalarWhereWithAggregatesInput[]
    OR?: asiento_detallesScalarWhereWithAggregatesInput[]
    NOT?: asiento_detallesScalarWhereWithAggregatesInput | asiento_detallesScalarWhereWithAggregatesInput[]
    id_detalle?: IntWithAggregatesFilter<"asiento_detalles"> | number
    id_asiento?: IntWithAggregatesFilter<"asiento_detalles"> | number
    cuenta?: StringWithAggregatesFilter<"asiento_detalles"> | string
    debe?: FloatNullableWithAggregatesFilter<"asiento_detalles"> | number | null
    haber?: FloatNullableWithAggregatesFilter<"asiento_detalles"> | number | null
  }

  export type asientos_contablesWhereInput = {
    AND?: asientos_contablesWhereInput | asientos_contablesWhereInput[]
    OR?: asientos_contablesWhereInput[]
    NOT?: asientos_contablesWhereInput | asientos_contablesWhereInput[]
    id_asiento?: IntFilter<"asientos_contables"> | number
    id_operacion?: IntFilter<"asientos_contables"> | number
    fecha?: DateTimeFilter<"asientos_contables"> | Date | string
    descripcion?: StringNullableFilter<"asientos_contables"> | string | null
    asiento_detalles?: Asiento_detallesListRelationFilter
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
  }

  export type asientos_contablesOrderByWithRelationInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    asiento_detalles?: asiento_detallesOrderByRelationAggregateInput
    operacion?: operacionOrderByWithRelationInput
  }

  export type asientos_contablesWhereUniqueInput = Prisma.AtLeast<{
    id_asiento?: number
    AND?: asientos_contablesWhereInput | asientos_contablesWhereInput[]
    OR?: asientos_contablesWhereInput[]
    NOT?: asientos_contablesWhereInput | asientos_contablesWhereInput[]
    id_operacion?: IntFilter<"asientos_contables"> | number
    fecha?: DateTimeFilter<"asientos_contables"> | Date | string
    descripcion?: StringNullableFilter<"asientos_contables"> | string | null
    asiento_detalles?: Asiento_detallesListRelationFilter
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
  }, "id_asiento">

  export type asientos_contablesOrderByWithAggregationInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: asientos_contablesCountOrderByAggregateInput
    _avg?: asientos_contablesAvgOrderByAggregateInput
    _max?: asientos_contablesMaxOrderByAggregateInput
    _min?: asientos_contablesMinOrderByAggregateInput
    _sum?: asientos_contablesSumOrderByAggregateInput
  }

  export type asientos_contablesScalarWhereWithAggregatesInput = {
    AND?: asientos_contablesScalarWhereWithAggregatesInput | asientos_contablesScalarWhereWithAggregatesInput[]
    OR?: asientos_contablesScalarWhereWithAggregatesInput[]
    NOT?: asientos_contablesScalarWhereWithAggregatesInput | asientos_contablesScalarWhereWithAggregatesInput[]
    id_asiento?: IntWithAggregatesFilter<"asientos_contables"> | number
    id_operacion?: IntWithAggregatesFilter<"asientos_contables"> | number
    fecha?: DateTimeWithAggregatesFilter<"asientos_contables"> | Date | string
    descripcion?: StringNullableWithAggregatesFilter<"asientos_contables"> | string | null
  }

  export type clientesWhereInput = {
    AND?: clientesWhereInput | clientesWhereInput[]
    OR?: clientesWhereInput[]
    NOT?: clientesWhereInput | clientesWhereInput[]
    id_cliente?: IntFilter<"clientes"> | number
    nombre?: StringFilter<"clientes"> | string
    apellido?: StringFilter<"clientes"> | string
    celular?: StringNullableFilter<"clientes"> | string | null
    operacion_ventas?: Operacion_ventasListRelationFilter
  }

  export type clientesOrderByWithRelationInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    celular?: SortOrderInput | SortOrder
    operacion_ventas?: operacion_ventasOrderByRelationAggregateInput
  }

  export type clientesWhereUniqueInput = Prisma.AtLeast<{
    id_cliente?: number
    AND?: clientesWhereInput | clientesWhereInput[]
    OR?: clientesWhereInput[]
    NOT?: clientesWhereInput | clientesWhereInput[]
    nombre?: StringFilter<"clientes"> | string
    apellido?: StringFilter<"clientes"> | string
    celular?: StringNullableFilter<"clientes"> | string | null
    operacion_ventas?: Operacion_ventasListRelationFilter
  }, "id_cliente">

  export type clientesOrderByWithAggregationInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    celular?: SortOrderInput | SortOrder
    _count?: clientesCountOrderByAggregateInput
    _avg?: clientesAvgOrderByAggregateInput
    _max?: clientesMaxOrderByAggregateInput
    _min?: clientesMinOrderByAggregateInput
    _sum?: clientesSumOrderByAggregateInput
  }

  export type clientesScalarWhereWithAggregatesInput = {
    AND?: clientesScalarWhereWithAggregatesInput | clientesScalarWhereWithAggregatesInput[]
    OR?: clientesScalarWhereWithAggregatesInput[]
    NOT?: clientesScalarWhereWithAggregatesInput | clientesScalarWhereWithAggregatesInput[]
    id_cliente?: IntWithAggregatesFilter<"clientes"> | number
    nombre?: StringWithAggregatesFilter<"clientes"> | string
    apellido?: StringWithAggregatesFilter<"clientes"> | string
    celular?: StringNullableWithAggregatesFilter<"clientes"> | string | null
  }

  export type detalle_compraWhereInput = {
    AND?: detalle_compraWhereInput | detalle_compraWhereInput[]
    OR?: detalle_compraWhereInput[]
    NOT?: detalle_compraWhereInput | detalle_compraWhereInput[]
    id_detalle_compra?: IntFilter<"detalle_compra"> | number
    id_operacion_compra?: IntFilter<"detalle_compra"> | number
    id_producto?: IntFilter<"detalle_compra"> | number
    cantidad?: IntFilter<"detalle_compra"> | number
    precio_unitario?: FloatFilter<"detalle_compra"> | number
    operacion_compras?: XOR<Operacion_comprasScalarRelationFilter, operacion_comprasWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }

  export type detalle_compraOrderByWithRelationInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    operacion_compras?: operacion_comprasOrderByWithRelationInput
    productos?: productosOrderByWithRelationInput
  }

  export type detalle_compraWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_compra?: number
    AND?: detalle_compraWhereInput | detalle_compraWhereInput[]
    OR?: detalle_compraWhereInput[]
    NOT?: detalle_compraWhereInput | detalle_compraWhereInput[]
    id_operacion_compra?: IntFilter<"detalle_compra"> | number
    id_producto?: IntFilter<"detalle_compra"> | number
    cantidad?: IntFilter<"detalle_compra"> | number
    precio_unitario?: FloatFilter<"detalle_compra"> | number
    operacion_compras?: XOR<Operacion_comprasScalarRelationFilter, operacion_comprasWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }, "id_detalle_compra">

  export type detalle_compraOrderByWithAggregationInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    _count?: detalle_compraCountOrderByAggregateInput
    _avg?: detalle_compraAvgOrderByAggregateInput
    _max?: detalle_compraMaxOrderByAggregateInput
    _min?: detalle_compraMinOrderByAggregateInput
    _sum?: detalle_compraSumOrderByAggregateInput
  }

  export type detalle_compraScalarWhereWithAggregatesInput = {
    AND?: detalle_compraScalarWhereWithAggregatesInput | detalle_compraScalarWhereWithAggregatesInput[]
    OR?: detalle_compraScalarWhereWithAggregatesInput[]
    NOT?: detalle_compraScalarWhereWithAggregatesInput | detalle_compraScalarWhereWithAggregatesInput[]
    id_detalle_compra?: IntWithAggregatesFilter<"detalle_compra"> | number
    id_operacion_compra?: IntWithAggregatesFilter<"detalle_compra"> | number
    id_producto?: IntWithAggregatesFilter<"detalle_compra"> | number
    cantidad?: IntWithAggregatesFilter<"detalle_compra"> | number
    precio_unitario?: FloatWithAggregatesFilter<"detalle_compra"> | number
  }

  export type detalle_ventaWhereInput = {
    AND?: detalle_ventaWhereInput | detalle_ventaWhereInput[]
    OR?: detalle_ventaWhereInput[]
    NOT?: detalle_ventaWhereInput | detalle_ventaWhereInput[]
    id_detalle_venta?: IntFilter<"detalle_venta"> | number
    id_operacion_venta?: IntFilter<"detalle_venta"> | number
    id_producto?: IntFilter<"detalle_venta"> | number
    cantidad?: IntFilter<"detalle_venta"> | number
    precio_unitario?: FloatFilter<"detalle_venta"> | number
    operacion_ventas?: XOR<Operacion_ventasScalarRelationFilter, operacion_ventasWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }

  export type detalle_ventaOrderByWithRelationInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    operacion_ventas?: operacion_ventasOrderByWithRelationInput
    productos?: productosOrderByWithRelationInput
  }

  export type detalle_ventaWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_venta?: number
    AND?: detalle_ventaWhereInput | detalle_ventaWhereInput[]
    OR?: detalle_ventaWhereInput[]
    NOT?: detalle_ventaWhereInput | detalle_ventaWhereInput[]
    id_operacion_venta?: IntFilter<"detalle_venta"> | number
    id_producto?: IntFilter<"detalle_venta"> | number
    cantidad?: IntFilter<"detalle_venta"> | number
    precio_unitario?: FloatFilter<"detalle_venta"> | number
    operacion_ventas?: XOR<Operacion_ventasScalarRelationFilter, operacion_ventasWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }, "id_detalle_venta">

  export type detalle_ventaOrderByWithAggregationInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    _count?: detalle_ventaCountOrderByAggregateInput
    _avg?: detalle_ventaAvgOrderByAggregateInput
    _max?: detalle_ventaMaxOrderByAggregateInput
    _min?: detalle_ventaMinOrderByAggregateInput
    _sum?: detalle_ventaSumOrderByAggregateInput
  }

  export type detalle_ventaScalarWhereWithAggregatesInput = {
    AND?: detalle_ventaScalarWhereWithAggregatesInput | detalle_ventaScalarWhereWithAggregatesInput[]
    OR?: detalle_ventaScalarWhereWithAggregatesInput[]
    NOT?: detalle_ventaScalarWhereWithAggregatesInput | detalle_ventaScalarWhereWithAggregatesInput[]
    id_detalle_venta?: IntWithAggregatesFilter<"detalle_venta"> | number
    id_operacion_venta?: IntWithAggregatesFilter<"detalle_venta"> | number
    id_producto?: IntWithAggregatesFilter<"detalle_venta"> | number
    cantidad?: IntWithAggregatesFilter<"detalle_venta"> | number
    precio_unitario?: FloatWithAggregatesFilter<"detalle_venta"> | number
  }

  export type inventario_movimientosWhereInput = {
    AND?: inventario_movimientosWhereInput | inventario_movimientosWhereInput[]
    OR?: inventario_movimientosWhereInput[]
    NOT?: inventario_movimientosWhereInput | inventario_movimientosWhereInput[]
    id_movimiento?: IntFilter<"inventario_movimientos"> | number
    id_operacion?: IntFilter<"inventario_movimientos"> | number
    id_producto?: IntFilter<"inventario_movimientos"> | number
    cantidad?: IntFilter<"inventario_movimientos"> | number
    fecha?: DateTimeFilter<"inventario_movimientos"> | Date | string
    motivo?: StringFilter<"inventario_movimientos"> | string
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }

  export type inventario_movimientosOrderByWithRelationInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    motivo?: SortOrder
    operacion?: operacionOrderByWithRelationInput
    productos?: productosOrderByWithRelationInput
  }

  export type inventario_movimientosWhereUniqueInput = Prisma.AtLeast<{
    id_movimiento?: number
    AND?: inventario_movimientosWhereInput | inventario_movimientosWhereInput[]
    OR?: inventario_movimientosWhereInput[]
    NOT?: inventario_movimientosWhereInput | inventario_movimientosWhereInput[]
    id_operacion?: IntFilter<"inventario_movimientos"> | number
    id_producto?: IntFilter<"inventario_movimientos"> | number
    cantidad?: IntFilter<"inventario_movimientos"> | number
    fecha?: DateTimeFilter<"inventario_movimientos"> | Date | string
    motivo?: StringFilter<"inventario_movimientos"> | string
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }, "id_movimiento">

  export type inventario_movimientosOrderByWithAggregationInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    motivo?: SortOrder
    _count?: inventario_movimientosCountOrderByAggregateInput
    _avg?: inventario_movimientosAvgOrderByAggregateInput
    _max?: inventario_movimientosMaxOrderByAggregateInput
    _min?: inventario_movimientosMinOrderByAggregateInput
    _sum?: inventario_movimientosSumOrderByAggregateInput
  }

  export type inventario_movimientosScalarWhereWithAggregatesInput = {
    AND?: inventario_movimientosScalarWhereWithAggregatesInput | inventario_movimientosScalarWhereWithAggregatesInput[]
    OR?: inventario_movimientosScalarWhereWithAggregatesInput[]
    NOT?: inventario_movimientosScalarWhereWithAggregatesInput | inventario_movimientosScalarWhereWithAggregatesInput[]
    id_movimiento?: IntWithAggregatesFilter<"inventario_movimientos"> | number
    id_operacion?: IntWithAggregatesFilter<"inventario_movimientos"> | number
    id_producto?: IntWithAggregatesFilter<"inventario_movimientos"> | number
    cantidad?: IntWithAggregatesFilter<"inventario_movimientos"> | number
    fecha?: DateTimeWithAggregatesFilter<"inventario_movimientos"> | Date | string
    motivo?: StringWithAggregatesFilter<"inventario_movimientos"> | string
  }

  export type operacionWhereInput = {
    AND?: operacionWhereInput | operacionWhereInput[]
    OR?: operacionWhereInput[]
    NOT?: operacionWhereInput | operacionWhereInput[]
    id_operacion?: IntFilter<"operacion"> | number
    id_tipo_operacion?: IntFilter<"operacion"> | number
    estado?: StringFilter<"operacion"> | string
    asientos_contables?: Asientos_contablesListRelationFilter
    inventario_movimientos?: Inventario_movimientosListRelationFilter
    tipo_operacion?: XOR<Tipo_operacionScalarRelationFilter, tipo_operacionWhereInput>
    operacion_compras?: Operacion_comprasListRelationFilter
    operacion_gastos?: Operacion_gastosListRelationFilter
    operacion_ventas?: Operacion_ventasListRelationFilter
  }

  export type operacionOrderByWithRelationInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
    estado?: SortOrder
    asientos_contables?: asientos_contablesOrderByRelationAggregateInput
    inventario_movimientos?: inventario_movimientosOrderByRelationAggregateInput
    tipo_operacion?: tipo_operacionOrderByWithRelationInput
    operacion_compras?: operacion_comprasOrderByRelationAggregateInput
    operacion_gastos?: operacion_gastosOrderByRelationAggregateInput
    operacion_ventas?: operacion_ventasOrderByRelationAggregateInput
  }

  export type operacionWhereUniqueInput = Prisma.AtLeast<{
    id_operacion?: number
    AND?: operacionWhereInput | operacionWhereInput[]
    OR?: operacionWhereInput[]
    NOT?: operacionWhereInput | operacionWhereInput[]
    id_tipo_operacion?: IntFilter<"operacion"> | number
    estado?: StringFilter<"operacion"> | string
    asientos_contables?: Asientos_contablesListRelationFilter
    inventario_movimientos?: Inventario_movimientosListRelationFilter
    tipo_operacion?: XOR<Tipo_operacionScalarRelationFilter, tipo_operacionWhereInput>
    operacion_compras?: Operacion_comprasListRelationFilter
    operacion_gastos?: Operacion_gastosListRelationFilter
    operacion_ventas?: Operacion_ventasListRelationFilter
  }, "id_operacion">

  export type operacionOrderByWithAggregationInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
    estado?: SortOrder
    _count?: operacionCountOrderByAggregateInput
    _avg?: operacionAvgOrderByAggregateInput
    _max?: operacionMaxOrderByAggregateInput
    _min?: operacionMinOrderByAggregateInput
    _sum?: operacionSumOrderByAggregateInput
  }

  export type operacionScalarWhereWithAggregatesInput = {
    AND?: operacionScalarWhereWithAggregatesInput | operacionScalarWhereWithAggregatesInput[]
    OR?: operacionScalarWhereWithAggregatesInput[]
    NOT?: operacionScalarWhereWithAggregatesInput | operacionScalarWhereWithAggregatesInput[]
    id_operacion?: IntWithAggregatesFilter<"operacion"> | number
    id_tipo_operacion?: IntWithAggregatesFilter<"operacion"> | number
    estado?: StringWithAggregatesFilter<"operacion"> | string
  }

  export type operacion_comprasWhereInput = {
    AND?: operacion_comprasWhereInput | operacion_comprasWhereInput[]
    OR?: operacion_comprasWhereInput[]
    NOT?: operacion_comprasWhereInput | operacion_comprasWhereInput[]
    id_operacion_compras?: IntFilter<"operacion_compras"> | number
    id_operacion?: IntFilter<"operacion_compras"> | number
    id_proveedor?: IntFilter<"operacion_compras"> | number
    fecha?: DateTimeFilter<"operacion_compras"> | Date | string
    total?: FloatFilter<"operacion_compras"> | number
    metodo_pago?: StringFilter<"operacion_compras"> | string
    detalle_compra?: Detalle_compraListRelationFilter
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    proveedores?: XOR<ProveedoresScalarRelationFilter, proveedoresWhereInput>
  }

  export type operacion_comprasOrderByWithRelationInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
    detalle_compra?: detalle_compraOrderByRelationAggregateInput
    operacion?: operacionOrderByWithRelationInput
    proveedores?: proveedoresOrderByWithRelationInput
  }

  export type operacion_comprasWhereUniqueInput = Prisma.AtLeast<{
    id_operacion_compras?: number
    AND?: operacion_comprasWhereInput | operacion_comprasWhereInput[]
    OR?: operacion_comprasWhereInput[]
    NOT?: operacion_comprasWhereInput | operacion_comprasWhereInput[]
    id_operacion?: IntFilter<"operacion_compras"> | number
    id_proveedor?: IntFilter<"operacion_compras"> | number
    fecha?: DateTimeFilter<"operacion_compras"> | Date | string
    total?: FloatFilter<"operacion_compras"> | number
    metodo_pago?: StringFilter<"operacion_compras"> | string
    detalle_compra?: Detalle_compraListRelationFilter
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    proveedores?: XOR<ProveedoresScalarRelationFilter, proveedoresWhereInput>
  }, "id_operacion_compras">

  export type operacion_comprasOrderByWithAggregationInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
    _count?: operacion_comprasCountOrderByAggregateInput
    _avg?: operacion_comprasAvgOrderByAggregateInput
    _max?: operacion_comprasMaxOrderByAggregateInput
    _min?: operacion_comprasMinOrderByAggregateInput
    _sum?: operacion_comprasSumOrderByAggregateInput
  }

  export type operacion_comprasScalarWhereWithAggregatesInput = {
    AND?: operacion_comprasScalarWhereWithAggregatesInput | operacion_comprasScalarWhereWithAggregatesInput[]
    OR?: operacion_comprasScalarWhereWithAggregatesInput[]
    NOT?: operacion_comprasScalarWhereWithAggregatesInput | operacion_comprasScalarWhereWithAggregatesInput[]
    id_operacion_compras?: IntWithAggregatesFilter<"operacion_compras"> | number
    id_operacion?: IntWithAggregatesFilter<"operacion_compras"> | number
    id_proveedor?: IntWithAggregatesFilter<"operacion_compras"> | number
    fecha?: DateTimeWithAggregatesFilter<"operacion_compras"> | Date | string
    total?: FloatWithAggregatesFilter<"operacion_compras"> | number
    metodo_pago?: StringWithAggregatesFilter<"operacion_compras"> | string
  }

  export type operacion_gastosWhereInput = {
    AND?: operacion_gastosWhereInput | operacion_gastosWhereInput[]
    OR?: operacion_gastosWhereInput[]
    NOT?: operacion_gastosWhereInput | operacion_gastosWhereInput[]
    id_operacion_gastos?: IntFilter<"operacion_gastos"> | number
    id_operacion?: IntFilter<"operacion_gastos"> | number
    nombre?: StringFilter<"operacion_gastos"> | string
    detalle?: StringFilter<"operacion_gastos"> | string
    total?: FloatFilter<"operacion_gastos"> | number
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
  }

  export type operacion_gastosOrderByWithRelationInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    nombre?: SortOrder
    detalle?: SortOrder
    total?: SortOrder
    operacion?: operacionOrderByWithRelationInput
  }

  export type operacion_gastosWhereUniqueInput = Prisma.AtLeast<{
    id_operacion_gastos?: number
    AND?: operacion_gastosWhereInput | operacion_gastosWhereInput[]
    OR?: operacion_gastosWhereInput[]
    NOT?: operacion_gastosWhereInput | operacion_gastosWhereInput[]
    id_operacion?: IntFilter<"operacion_gastos"> | number
    nombre?: StringFilter<"operacion_gastos"> | string
    detalle?: StringFilter<"operacion_gastos"> | string
    total?: FloatFilter<"operacion_gastos"> | number
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
  }, "id_operacion_gastos">

  export type operacion_gastosOrderByWithAggregationInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    nombre?: SortOrder
    detalle?: SortOrder
    total?: SortOrder
    _count?: operacion_gastosCountOrderByAggregateInput
    _avg?: operacion_gastosAvgOrderByAggregateInput
    _max?: operacion_gastosMaxOrderByAggregateInput
    _min?: operacion_gastosMinOrderByAggregateInput
    _sum?: operacion_gastosSumOrderByAggregateInput
  }

  export type operacion_gastosScalarWhereWithAggregatesInput = {
    AND?: operacion_gastosScalarWhereWithAggregatesInput | operacion_gastosScalarWhereWithAggregatesInput[]
    OR?: operacion_gastosScalarWhereWithAggregatesInput[]
    NOT?: operacion_gastosScalarWhereWithAggregatesInput | operacion_gastosScalarWhereWithAggregatesInput[]
    id_operacion_gastos?: IntWithAggregatesFilter<"operacion_gastos"> | number
    id_operacion?: IntWithAggregatesFilter<"operacion_gastos"> | number
    nombre?: StringWithAggregatesFilter<"operacion_gastos"> | string
    detalle?: StringWithAggregatesFilter<"operacion_gastos"> | string
    total?: FloatWithAggregatesFilter<"operacion_gastos"> | number
  }

  export type operacion_ventasWhereInput = {
    AND?: operacion_ventasWhereInput | operacion_ventasWhereInput[]
    OR?: operacion_ventasWhereInput[]
    NOT?: operacion_ventasWhereInput | operacion_ventasWhereInput[]
    id_operacion_ventas?: IntFilter<"operacion_ventas"> | number
    id_operacion?: IntFilter<"operacion_ventas"> | number
    id_cliente?: IntFilter<"operacion_ventas"> | number
    fecha?: DateTimeFilter<"operacion_ventas"> | Date | string
    total?: FloatFilter<"operacion_ventas"> | number
    metodo_pago?: StringFilter<"operacion_ventas"> | string
    detalle_venta?: Detalle_ventaListRelationFilter
    clientes?: XOR<ClientesScalarRelationFilter, clientesWhereInput>
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    pagos_clientes?: Pagos_clientesListRelationFilter
  }

  export type operacion_ventasOrderByWithRelationInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
    detalle_venta?: detalle_ventaOrderByRelationAggregateInput
    clientes?: clientesOrderByWithRelationInput
    operacion?: operacionOrderByWithRelationInput
    pagos_clientes?: pagos_clientesOrderByRelationAggregateInput
  }

  export type operacion_ventasWhereUniqueInput = Prisma.AtLeast<{
    id_operacion_ventas?: number
    AND?: operacion_ventasWhereInput | operacion_ventasWhereInput[]
    OR?: operacion_ventasWhereInput[]
    NOT?: operacion_ventasWhereInput | operacion_ventasWhereInput[]
    id_operacion?: IntFilter<"operacion_ventas"> | number
    id_cliente?: IntFilter<"operacion_ventas"> | number
    fecha?: DateTimeFilter<"operacion_ventas"> | Date | string
    total?: FloatFilter<"operacion_ventas"> | number
    metodo_pago?: StringFilter<"operacion_ventas"> | string
    detalle_venta?: Detalle_ventaListRelationFilter
    clientes?: XOR<ClientesScalarRelationFilter, clientesWhereInput>
    operacion?: XOR<OperacionScalarRelationFilter, operacionWhereInput>
    pagos_clientes?: Pagos_clientesListRelationFilter
  }, "id_operacion_ventas">

  export type operacion_ventasOrderByWithAggregationInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
    _count?: operacion_ventasCountOrderByAggregateInput
    _avg?: operacion_ventasAvgOrderByAggregateInput
    _max?: operacion_ventasMaxOrderByAggregateInput
    _min?: operacion_ventasMinOrderByAggregateInput
    _sum?: operacion_ventasSumOrderByAggregateInput
  }

  export type operacion_ventasScalarWhereWithAggregatesInput = {
    AND?: operacion_ventasScalarWhereWithAggregatesInput | operacion_ventasScalarWhereWithAggregatesInput[]
    OR?: operacion_ventasScalarWhereWithAggregatesInput[]
    NOT?: operacion_ventasScalarWhereWithAggregatesInput | operacion_ventasScalarWhereWithAggregatesInput[]
    id_operacion_ventas?: IntWithAggregatesFilter<"operacion_ventas"> | number
    id_operacion?: IntWithAggregatesFilter<"operacion_ventas"> | number
    id_cliente?: IntWithAggregatesFilter<"operacion_ventas"> | number
    fecha?: DateTimeWithAggregatesFilter<"operacion_ventas"> | Date | string
    total?: FloatWithAggregatesFilter<"operacion_ventas"> | number
    metodo_pago?: StringWithAggregatesFilter<"operacion_ventas"> | string
  }

  export type pagos_clientesWhereInput = {
    AND?: pagos_clientesWhereInput | pagos_clientesWhereInput[]
    OR?: pagos_clientesWhereInput[]
    NOT?: pagos_clientesWhereInput | pagos_clientesWhereInput[]
    id_pagos_clientes?: IntFilter<"pagos_clientes"> | number
    id_operacion_venta?: IntFilter<"pagos_clientes"> | number
    monto_pago?: FloatFilter<"pagos_clientes"> | number
    fecha_pago?: DateTimeFilter<"pagos_clientes"> | Date | string
    metodo_pago?: StringFilter<"pagos_clientes"> | string
    operacion_ventas?: XOR<Operacion_ventasScalarRelationFilter, operacion_ventasWhereInput>
  }

  export type pagos_clientesOrderByWithRelationInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    operacion_ventas?: operacion_ventasOrderByWithRelationInput
  }

  export type pagos_clientesWhereUniqueInput = Prisma.AtLeast<{
    id_pagos_clientes?: number
    AND?: pagos_clientesWhereInput | pagos_clientesWhereInput[]
    OR?: pagos_clientesWhereInput[]
    NOT?: pagos_clientesWhereInput | pagos_clientesWhereInput[]
    id_operacion_venta?: IntFilter<"pagos_clientes"> | number
    monto_pago?: FloatFilter<"pagos_clientes"> | number
    fecha_pago?: DateTimeFilter<"pagos_clientes"> | Date | string
    metodo_pago?: StringFilter<"pagos_clientes"> | string
    operacion_ventas?: XOR<Operacion_ventasScalarRelationFilter, operacion_ventasWhereInput>
  }, "id_pagos_clientes">

  export type pagos_clientesOrderByWithAggregationInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    _count?: pagos_clientesCountOrderByAggregateInput
    _avg?: pagos_clientesAvgOrderByAggregateInput
    _max?: pagos_clientesMaxOrderByAggregateInput
    _min?: pagos_clientesMinOrderByAggregateInput
    _sum?: pagos_clientesSumOrderByAggregateInput
  }

  export type pagos_clientesScalarWhereWithAggregatesInput = {
    AND?: pagos_clientesScalarWhereWithAggregatesInput | pagos_clientesScalarWhereWithAggregatesInput[]
    OR?: pagos_clientesScalarWhereWithAggregatesInput[]
    NOT?: pagos_clientesScalarWhereWithAggregatesInput | pagos_clientesScalarWhereWithAggregatesInput[]
    id_pagos_clientes?: IntWithAggregatesFilter<"pagos_clientes"> | number
    id_operacion_venta?: IntWithAggregatesFilter<"pagos_clientes"> | number
    monto_pago?: FloatWithAggregatesFilter<"pagos_clientes"> | number
    fecha_pago?: DateTimeWithAggregatesFilter<"pagos_clientes"> | Date | string
    metodo_pago?: StringWithAggregatesFilter<"pagos_clientes"> | string
  }

  export type producto_variantesWhereInput = {
    AND?: producto_variantesWhereInput | producto_variantesWhereInput[]
    OR?: producto_variantesWhereInput[]
    NOT?: producto_variantesWhereInput | producto_variantesWhereInput[]
    id_variante?: IntFilter<"producto_variantes"> | number
    id_producto?: IntFilter<"producto_variantes"> | number
    talle?: StringFilter<"producto_variantes"> | string
    stock_actual?: IntFilter<"producto_variantes"> | number
    color?: StringFilter<"producto_variantes"> | string
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }

  export type producto_variantesOrderByWithRelationInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    talle?: SortOrder
    stock_actual?: SortOrder
    color?: SortOrder
    productos?: productosOrderByWithRelationInput
  }

  export type producto_variantesWhereUniqueInput = Prisma.AtLeast<{
    id_variante?: number
    AND?: producto_variantesWhereInput | producto_variantesWhereInput[]
    OR?: producto_variantesWhereInput[]
    NOT?: producto_variantesWhereInput | producto_variantesWhereInput[]
    id_producto?: IntFilter<"producto_variantes"> | number
    talle?: StringFilter<"producto_variantes"> | string
    stock_actual?: IntFilter<"producto_variantes"> | number
    color?: StringFilter<"producto_variantes"> | string
    productos?: XOR<ProductosScalarRelationFilter, productosWhereInput>
  }, "id_variante">

  export type producto_variantesOrderByWithAggregationInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    talle?: SortOrder
    stock_actual?: SortOrder
    color?: SortOrder
    _count?: producto_variantesCountOrderByAggregateInput
    _avg?: producto_variantesAvgOrderByAggregateInput
    _max?: producto_variantesMaxOrderByAggregateInput
    _min?: producto_variantesMinOrderByAggregateInput
    _sum?: producto_variantesSumOrderByAggregateInput
  }

  export type producto_variantesScalarWhereWithAggregatesInput = {
    AND?: producto_variantesScalarWhereWithAggregatesInput | producto_variantesScalarWhereWithAggregatesInput[]
    OR?: producto_variantesScalarWhereWithAggregatesInput[]
    NOT?: producto_variantesScalarWhereWithAggregatesInput | producto_variantesScalarWhereWithAggregatesInput[]
    id_variante?: IntWithAggregatesFilter<"producto_variantes"> | number
    id_producto?: IntWithAggregatesFilter<"producto_variantes"> | number
    talle?: StringWithAggregatesFilter<"producto_variantes"> | string
    stock_actual?: IntWithAggregatesFilter<"producto_variantes"> | number
    color?: StringWithAggregatesFilter<"producto_variantes"> | string
  }

  export type productosWhereInput = {
    AND?: productosWhereInput | productosWhereInput[]
    OR?: productosWhereInput[]
    NOT?: productosWhereInput | productosWhereInput[]
    id_producto?: IntFilter<"productos"> | number
    nombre?: StringFilter<"productos"> | string
    categoria?: StringFilter<"productos"> | string
    costo?: FloatFilter<"productos"> | number
    precio_unitario?: FloatFilter<"productos"> | number
    detalle_compra?: Detalle_compraListRelationFilter
    detalle_venta?: Detalle_ventaListRelationFilter
    inventario_movimientos?: Inventario_movimientosListRelationFilter
    producto_variantes?: Producto_variantesListRelationFilter
  }

  export type productosOrderByWithRelationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    categoria?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
    detalle_compra?: detalle_compraOrderByRelationAggregateInput
    detalle_venta?: detalle_ventaOrderByRelationAggregateInput
    inventario_movimientos?: inventario_movimientosOrderByRelationAggregateInput
    producto_variantes?: producto_variantesOrderByRelationAggregateInput
  }

  export type productosWhereUniqueInput = Prisma.AtLeast<{
    id_producto?: number
    AND?: productosWhereInput | productosWhereInput[]
    OR?: productosWhereInput[]
    NOT?: productosWhereInput | productosWhereInput[]
    nombre?: StringFilter<"productos"> | string
    categoria?: StringFilter<"productos"> | string
    costo?: FloatFilter<"productos"> | number
    precio_unitario?: FloatFilter<"productos"> | number
    detalle_compra?: Detalle_compraListRelationFilter
    detalle_venta?: Detalle_ventaListRelationFilter
    inventario_movimientos?: Inventario_movimientosListRelationFilter
    producto_variantes?: Producto_variantesListRelationFilter
  }, "id_producto">

  export type productosOrderByWithAggregationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    categoria?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
    _count?: productosCountOrderByAggregateInput
    _avg?: productosAvgOrderByAggregateInput
    _max?: productosMaxOrderByAggregateInput
    _min?: productosMinOrderByAggregateInput
    _sum?: productosSumOrderByAggregateInput
  }

  export type productosScalarWhereWithAggregatesInput = {
    AND?: productosScalarWhereWithAggregatesInput | productosScalarWhereWithAggregatesInput[]
    OR?: productosScalarWhereWithAggregatesInput[]
    NOT?: productosScalarWhereWithAggregatesInput | productosScalarWhereWithAggregatesInput[]
    id_producto?: IntWithAggregatesFilter<"productos"> | number
    nombre?: StringWithAggregatesFilter<"productos"> | string
    categoria?: StringWithAggregatesFilter<"productos"> | string
    costo?: FloatWithAggregatesFilter<"productos"> | number
    precio_unitario?: FloatWithAggregatesFilter<"productos"> | number
  }

  export type proveedoresWhereInput = {
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    id_proveedor?: IntFilter<"proveedores"> | number
    nombre?: StringFilter<"proveedores"> | string
    celular?: StringNullableFilter<"proveedores"> | string | null
    contacto?: StringNullableFilter<"proveedores"> | string | null
    operacion_compras?: Operacion_comprasListRelationFilter
  }

  export type proveedoresOrderByWithRelationInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    celular?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    operacion_compras?: operacion_comprasOrderByRelationAggregateInput
  }

  export type proveedoresWhereUniqueInput = Prisma.AtLeast<{
    id_proveedor?: number
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    nombre?: StringFilter<"proveedores"> | string
    celular?: StringNullableFilter<"proveedores"> | string | null
    contacto?: StringNullableFilter<"proveedores"> | string | null
    operacion_compras?: Operacion_comprasListRelationFilter
  }, "id_proveedor">

  export type proveedoresOrderByWithAggregationInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    celular?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    _count?: proveedoresCountOrderByAggregateInput
    _avg?: proveedoresAvgOrderByAggregateInput
    _max?: proveedoresMaxOrderByAggregateInput
    _min?: proveedoresMinOrderByAggregateInput
    _sum?: proveedoresSumOrderByAggregateInput
  }

  export type proveedoresScalarWhereWithAggregatesInput = {
    AND?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    OR?: proveedoresScalarWhereWithAggregatesInput[]
    NOT?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    id_proveedor?: IntWithAggregatesFilter<"proveedores"> | number
    nombre?: StringWithAggregatesFilter<"proveedores"> | string
    celular?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    contacto?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
  }

  export type tipo_operacionWhereInput = {
    AND?: tipo_operacionWhereInput | tipo_operacionWhereInput[]
    OR?: tipo_operacionWhereInput[]
    NOT?: tipo_operacionWhereInput | tipo_operacionWhereInput[]
    id_tipo_operacion?: IntFilter<"tipo_operacion"> | number
    tipo?: StringFilter<"tipo_operacion"> | string
    operacion?: OperacionListRelationFilter
  }

  export type tipo_operacionOrderByWithRelationInput = {
    id_tipo_operacion?: SortOrder
    tipo?: SortOrder
    operacion?: operacionOrderByRelationAggregateInput
  }

  export type tipo_operacionWhereUniqueInput = Prisma.AtLeast<{
    id_tipo_operacion?: number
    AND?: tipo_operacionWhereInput | tipo_operacionWhereInput[]
    OR?: tipo_operacionWhereInput[]
    NOT?: tipo_operacionWhereInput | tipo_operacionWhereInput[]
    tipo?: StringFilter<"tipo_operacion"> | string
    operacion?: OperacionListRelationFilter
  }, "id_tipo_operacion">

  export type tipo_operacionOrderByWithAggregationInput = {
    id_tipo_operacion?: SortOrder
    tipo?: SortOrder
    _count?: tipo_operacionCountOrderByAggregateInput
    _avg?: tipo_operacionAvgOrderByAggregateInput
    _max?: tipo_operacionMaxOrderByAggregateInput
    _min?: tipo_operacionMinOrderByAggregateInput
    _sum?: tipo_operacionSumOrderByAggregateInput
  }

  export type tipo_operacionScalarWhereWithAggregatesInput = {
    AND?: tipo_operacionScalarWhereWithAggregatesInput | tipo_operacionScalarWhereWithAggregatesInput[]
    OR?: tipo_operacionScalarWhereWithAggregatesInput[]
    NOT?: tipo_operacionScalarWhereWithAggregatesInput | tipo_operacionScalarWhereWithAggregatesInput[]
    id_tipo_operacion?: IntWithAggregatesFilter<"tipo_operacion"> | number
    tipo?: StringWithAggregatesFilter<"tipo_operacion"> | string
  }

  export type asiento_detallesCreateInput = {
    id_detalle: number
    cuenta: string
    debe?: number | null
    haber?: number | null
    asientos_contables: asientos_contablesCreateNestedOneWithoutAsiento_detallesInput
  }

  export type asiento_detallesUncheckedCreateInput = {
    id_detalle: number
    id_asiento: number
    cuenta: string
    debe?: number | null
    haber?: number | null
  }

  export type asiento_detallesUpdateInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
    asientos_contables?: asientos_contablesUpdateOneRequiredWithoutAsiento_detallesNestedInput
  }

  export type asiento_detallesUncheckedUpdateInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    id_asiento?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type asiento_detallesCreateManyInput = {
    id_detalle: number
    id_asiento: number
    cuenta: string
    debe?: number | null
    haber?: number | null
  }

  export type asiento_detallesUpdateManyMutationInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type asiento_detallesUncheckedUpdateManyInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    id_asiento?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type asientos_contablesCreateInput = {
    id_asiento: number
    fecha: Date | string
    descripcion?: string | null
    asiento_detalles?: asiento_detallesCreateNestedManyWithoutAsientos_contablesInput
    operacion: operacionCreateNestedOneWithoutAsientos_contablesInput
  }

  export type asientos_contablesUncheckedCreateInput = {
    id_asiento: number
    id_operacion: number
    fecha: Date | string
    descripcion?: string | null
    asiento_detalles?: asiento_detallesUncheckedCreateNestedManyWithoutAsientos_contablesInput
  }

  export type asientos_contablesUpdateInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    asiento_detalles?: asiento_detallesUpdateManyWithoutAsientos_contablesNestedInput
    operacion?: operacionUpdateOneRequiredWithoutAsientos_contablesNestedInput
  }

  export type asientos_contablesUncheckedUpdateInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    asiento_detalles?: asiento_detallesUncheckedUpdateManyWithoutAsientos_contablesNestedInput
  }

  export type asientos_contablesCreateManyInput = {
    id_asiento: number
    id_operacion: number
    fecha: Date | string
    descripcion?: string | null
  }

  export type asientos_contablesUpdateManyMutationInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type asientos_contablesUncheckedUpdateManyInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesCreateInput = {
    nombre: string
    apellido: string
    celular?: string | null
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateInput = {
    id_cliente?: number
    nombre: string
    apellido: string
    celular?: string | null
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    operacion_ventas?: operacion_ventasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type clientesCreateManyInput = {
    id_cliente?: number
    nombre: string
    apellido: string
    celular?: string | null
  }

  export type clientesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesUncheckedUpdateManyInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalle_compraCreateInput = {
    id_detalle_compra: number
    cantidad: number
    precio_unitario: number
    operacion_compras: operacion_comprasCreateNestedOneWithoutDetalle_compraInput
    productos: productosCreateNestedOneWithoutDetalle_compraInput
  }

  export type detalle_compraUncheckedCreateInput = {
    id_detalle_compra: number
    id_operacion_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_compraUpdateInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    operacion_compras?: operacion_comprasUpdateOneRequiredWithoutDetalle_compraNestedInput
    productos?: productosUpdateOneRequiredWithoutDetalle_compraNestedInput
  }

  export type detalle_compraUncheckedUpdateInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_operacion_compra?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_compraCreateManyInput = {
    id_detalle_compra: number
    id_operacion_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_compraUpdateManyMutationInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_compraUncheckedUpdateManyInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_operacion_compra?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaCreateInput = {
    id_detalle_venta: number
    cantidad: number
    precio_unitario: number
    operacion_ventas: operacion_ventasCreateNestedOneWithoutDetalle_ventaInput
    productos: productosCreateNestedOneWithoutDetalle_ventaInput
  }

  export type detalle_ventaUncheckedCreateInput = {
    id_detalle_venta: number
    id_operacion_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_ventaUpdateInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    operacion_ventas?: operacion_ventasUpdateOneRequiredWithoutDetalle_ventaNestedInput
    productos?: productosUpdateOneRequiredWithoutDetalle_ventaNestedInput
  }

  export type detalle_ventaUncheckedUpdateInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaCreateManyInput = {
    id_detalle_venta: number
    id_operacion_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_ventaUpdateManyMutationInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaUncheckedUpdateManyInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type inventario_movimientosCreateInput = {
    id_movimiento: number
    cantidad: number
    fecha: Date | string
    motivo: string
    operacion: operacionCreateNestedOneWithoutInventario_movimientosInput
    productos: productosCreateNestedOneWithoutInventario_movimientosInput
  }

  export type inventario_movimientosUncheckedCreateInput = {
    id_movimiento: number
    id_operacion: number
    id_producto: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type inventario_movimientosUpdateInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    operacion?: operacionUpdateOneRequiredWithoutInventario_movimientosNestedInput
    productos?: productosUpdateOneRequiredWithoutInventario_movimientosNestedInput
  }

  export type inventario_movimientosUncheckedUpdateInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type inventario_movimientosCreateManyInput = {
    id_movimiento: number
    id_operacion: number
    id_producto: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type inventario_movimientosUpdateManyMutationInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type inventario_movimientosUncheckedUpdateManyInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type operacionCreateInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionUpdateInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type operacionCreateManyInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
  }

  export type operacionUpdateManyMutationInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type operacionUncheckedUpdateManyInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_comprasCreateInput = {
    id_operacion_compras: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraCreateNestedManyWithoutOperacion_comprasInput
    operacion: operacionCreateNestedOneWithoutOperacion_comprasInput
    proveedores: proveedoresCreateNestedOneWithoutOperacion_comprasInput
  }

  export type operacion_comprasUncheckedCreateInput = {
    id_operacion_compras: number
    id_operacion: number
    id_proveedor: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutOperacion_comprasInput
  }

  export type operacion_comprasUpdateInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUpdateManyWithoutOperacion_comprasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_comprasNestedInput
    proveedores?: proveedoresUpdateOneRequiredWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasCreateManyInput = {
    id_operacion_compras: number
    id_operacion: number
    id_proveedor: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_comprasUpdateManyMutationInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_comprasUncheckedUpdateManyInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_gastosCreateInput = {
    id_operacion_gastos: number
    nombre: string
    detalle: string
    total: number
    operacion: operacionCreateNestedOneWithoutOperacion_gastosInput
  }

  export type operacion_gastosUncheckedCreateInput = {
    id_operacion_gastos: number
    id_operacion: number
    nombre: string
    detalle: string
    total: number
  }

  export type operacion_gastosUpdateInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    operacion?: operacionUpdateOneRequiredWithoutOperacion_gastosNestedInput
  }

  export type operacion_gastosUncheckedUpdateInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_gastosCreateManyInput = {
    id_operacion_gastos: number
    id_operacion: number
    nombre: string
    detalle: string
    total: number
  }

  export type operacion_gastosUpdateManyMutationInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_gastosUncheckedUpdateManyInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_ventasCreateInput = {
    id_operacion_ventas: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaCreateNestedManyWithoutOperacion_ventasInput
    clientes: clientesCreateNestedOneWithoutOperacion_ventasInput
    operacion: operacionCreateNestedOneWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasUncheckedCreateInput = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesUncheckedCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasUpdateInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUpdateManyWithoutOperacion_ventasNestedInput
    clientes?: clientesUpdateOneRequiredWithoutOperacion_ventasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasCreateManyInput = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_ventasUpdateManyMutationInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_ventasUncheckedUpdateManyInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type pagos_clientesCreateInput = {
    id_pagos_clientes: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
    operacion_ventas: operacion_ventasCreateNestedOneWithoutPagos_clientesInput
  }

  export type pagos_clientesUncheckedCreateInput = {
    id_pagos_clientes: number
    id_operacion_venta: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
  }

  export type pagos_clientesUpdateInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
    operacion_ventas?: operacion_ventasUpdateOneRequiredWithoutPagos_clientesNestedInput
  }

  export type pagos_clientesUncheckedUpdateInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type pagos_clientesCreateManyInput = {
    id_pagos_clientes: number
    id_operacion_venta: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
  }

  export type pagos_clientesUpdateManyMutationInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type pagos_clientesUncheckedUpdateManyInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesCreateInput = {
    talle: string
    stock_actual?: number
    color: string
    productos: productosCreateNestedOneWithoutProducto_variantesInput
  }

  export type producto_variantesUncheckedCreateInput = {
    id_variante?: number
    id_producto: number
    talle: string
    stock_actual?: number
    color: string
  }

  export type producto_variantesUpdateInput = {
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
    productos?: productosUpdateOneRequiredWithoutProducto_variantesNestedInput
  }

  export type producto_variantesUncheckedUpdateInput = {
    id_variante?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesCreateManyInput = {
    id_variante?: number
    id_producto: number
    talle: string
    stock_actual?: number
    color: string
  }

  export type producto_variantesUpdateManyMutationInput = {
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesUncheckedUpdateManyInput = {
    id_variante?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type productosCreateInput = {
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type productosCreateManyInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
  }

  export type productosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type productosUncheckedUpdateManyInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type proveedoresCreateInput = {
    id_proveedor: number
    nombre: string
    celular?: string | null
    contacto?: string | null
    operacion_compras?: operacion_comprasCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresUncheckedCreateInput = {
    id_proveedor: number
    nombre: string
    celular?: string | null
    contacto?: string | null
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresUpdateInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    operacion_compras?: operacion_comprasUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresUncheckedUpdateInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresCreateManyInput = {
    id_proveedor: number
    nombre: string
    celular?: string | null
    contacto?: string | null
  }

  export type proveedoresUpdateManyMutationInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedoresUncheckedUpdateManyInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipo_operacionCreateInput = {
    id_tipo_operacion: number
    tipo: string
    operacion?: operacionCreateNestedManyWithoutTipo_operacionInput
  }

  export type tipo_operacionUncheckedCreateInput = {
    id_tipo_operacion: number
    tipo: string
    operacion?: operacionUncheckedCreateNestedManyWithoutTipo_operacionInput
  }

  export type tipo_operacionUpdateInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    operacion?: operacionUpdateManyWithoutTipo_operacionNestedInput
  }

  export type tipo_operacionUncheckedUpdateInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    operacion?: operacionUncheckedUpdateManyWithoutTipo_operacionNestedInput
  }

  export type tipo_operacionCreateManyInput = {
    id_tipo_operacion: number
    tipo: string
  }

  export type tipo_operacionUpdateManyMutationInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_operacionUncheckedUpdateManyInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Asientos_contablesScalarRelationFilter = {
    is?: asientos_contablesWhereInput
    isNot?: asientos_contablesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type asiento_detallesCountOrderByAggregateInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    cuenta?: SortOrder
    debe?: SortOrder
    haber?: SortOrder
  }

  export type asiento_detallesAvgOrderByAggregateInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    debe?: SortOrder
    haber?: SortOrder
  }

  export type asiento_detallesMaxOrderByAggregateInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    cuenta?: SortOrder
    debe?: SortOrder
    haber?: SortOrder
  }

  export type asiento_detallesMinOrderByAggregateInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    cuenta?: SortOrder
    debe?: SortOrder
    haber?: SortOrder
  }

  export type asiento_detallesSumOrderByAggregateInput = {
    id_detalle?: SortOrder
    id_asiento?: SortOrder
    debe?: SortOrder
    haber?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Asiento_detallesListRelationFilter = {
    every?: asiento_detallesWhereInput
    some?: asiento_detallesWhereInput
    none?: asiento_detallesWhereInput
  }

  export type OperacionScalarRelationFilter = {
    is?: operacionWhereInput
    isNot?: operacionWhereInput
  }

  export type asiento_detallesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type asientos_contablesCountOrderByAggregateInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
  }

  export type asientos_contablesAvgOrderByAggregateInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
  }

  export type asientos_contablesMaxOrderByAggregateInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
  }

  export type asientos_contablesMinOrderByAggregateInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
  }

  export type asientos_contablesSumOrderByAggregateInput = {
    id_asiento?: SortOrder
    id_operacion?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Operacion_ventasListRelationFilter = {
    every?: operacion_ventasWhereInput
    some?: operacion_ventasWhereInput
    none?: operacion_ventasWhereInput
  }

  export type operacion_ventasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientesCountOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    celular?: SortOrder
  }

  export type clientesAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type clientesMaxOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    celular?: SortOrder
  }

  export type clientesMinOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    celular?: SortOrder
  }

  export type clientesSumOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type Operacion_comprasScalarRelationFilter = {
    is?: operacion_comprasWhereInput
    isNot?: operacion_comprasWhereInput
  }

  export type ProductosScalarRelationFilter = {
    is?: productosWhereInput
    isNot?: productosWhereInput
  }

  export type detalle_compraCountOrderByAggregateInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_compraAvgOrderByAggregateInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_compraMaxOrderByAggregateInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_compraMinOrderByAggregateInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_compraSumOrderByAggregateInput = {
    id_detalle_compra?: SortOrder
    id_operacion_compra?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type Operacion_ventasScalarRelationFilter = {
    is?: operacion_ventasWhereInput
    isNot?: operacion_ventasWhereInput
  }

  export type detalle_ventaCountOrderByAggregateInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventaAvgOrderByAggregateInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventaMaxOrderByAggregateInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventaMinOrderByAggregateInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventaSumOrderByAggregateInput = {
    id_detalle_venta?: SortOrder
    id_operacion_venta?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type inventario_movimientosCountOrderByAggregateInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    motivo?: SortOrder
  }

  export type inventario_movimientosAvgOrderByAggregateInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
  }

  export type inventario_movimientosMaxOrderByAggregateInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    motivo?: SortOrder
  }

  export type inventario_movimientosMinOrderByAggregateInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    motivo?: SortOrder
  }

  export type inventario_movimientosSumOrderByAggregateInput = {
    id_movimiento?: SortOrder
    id_operacion?: SortOrder
    id_producto?: SortOrder
    cantidad?: SortOrder
  }

  export type Asientos_contablesListRelationFilter = {
    every?: asientos_contablesWhereInput
    some?: asientos_contablesWhereInput
    none?: asientos_contablesWhereInput
  }

  export type Inventario_movimientosListRelationFilter = {
    every?: inventario_movimientosWhereInput
    some?: inventario_movimientosWhereInput
    none?: inventario_movimientosWhereInput
  }

  export type Tipo_operacionScalarRelationFilter = {
    is?: tipo_operacionWhereInput
    isNot?: tipo_operacionWhereInput
  }

  export type Operacion_comprasListRelationFilter = {
    every?: operacion_comprasWhereInput
    some?: operacion_comprasWhereInput
    none?: operacion_comprasWhereInput
  }

  export type Operacion_gastosListRelationFilter = {
    every?: operacion_gastosWhereInput
    some?: operacion_gastosWhereInput
    none?: operacion_gastosWhereInput
  }

  export type asientos_contablesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inventario_movimientosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type operacion_comprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type operacion_gastosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type operacionCountOrderByAggregateInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
    estado?: SortOrder
  }

  export type operacionAvgOrderByAggregateInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
  }

  export type operacionMaxOrderByAggregateInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
    estado?: SortOrder
  }

  export type operacionMinOrderByAggregateInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
    estado?: SortOrder
  }

  export type operacionSumOrderByAggregateInput = {
    id_operacion?: SortOrder
    id_tipo_operacion?: SortOrder
  }

  export type Detalle_compraListRelationFilter = {
    every?: detalle_compraWhereInput
    some?: detalle_compraWhereInput
    none?: detalle_compraWhereInput
  }

  export type ProveedoresScalarRelationFilter = {
    is?: proveedoresWhereInput
    isNot?: proveedoresWhereInput
  }

  export type detalle_compraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type operacion_comprasCountOrderByAggregateInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_comprasAvgOrderByAggregateInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    total?: SortOrder
  }

  export type operacion_comprasMaxOrderByAggregateInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_comprasMinOrderByAggregateInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_comprasSumOrderByAggregateInput = {
    id_operacion_compras?: SortOrder
    id_operacion?: SortOrder
    id_proveedor?: SortOrder
    total?: SortOrder
  }

  export type operacion_gastosCountOrderByAggregateInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    nombre?: SortOrder
    detalle?: SortOrder
    total?: SortOrder
  }

  export type operacion_gastosAvgOrderByAggregateInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    total?: SortOrder
  }

  export type operacion_gastosMaxOrderByAggregateInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    nombre?: SortOrder
    detalle?: SortOrder
    total?: SortOrder
  }

  export type operacion_gastosMinOrderByAggregateInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    nombre?: SortOrder
    detalle?: SortOrder
    total?: SortOrder
  }

  export type operacion_gastosSumOrderByAggregateInput = {
    id_operacion_gastos?: SortOrder
    id_operacion?: SortOrder
    total?: SortOrder
  }

  export type Detalle_ventaListRelationFilter = {
    every?: detalle_ventaWhereInput
    some?: detalle_ventaWhereInput
    none?: detalle_ventaWhereInput
  }

  export type ClientesScalarRelationFilter = {
    is?: clientesWhereInput
    isNot?: clientesWhereInput
  }

  export type Pagos_clientesListRelationFilter = {
    every?: pagos_clientesWhereInput
    some?: pagos_clientesWhereInput
    none?: pagos_clientesWhereInput
  }

  export type detalle_ventaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pagos_clientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type operacion_ventasCountOrderByAggregateInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_ventasAvgOrderByAggregateInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    total?: SortOrder
  }

  export type operacion_ventasMaxOrderByAggregateInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_ventasMinOrderByAggregateInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type operacion_ventasSumOrderByAggregateInput = {
    id_operacion_ventas?: SortOrder
    id_operacion?: SortOrder
    id_cliente?: SortOrder
    total?: SortOrder
  }

  export type pagos_clientesCountOrderByAggregateInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
  }

  export type pagos_clientesAvgOrderByAggregateInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
  }

  export type pagos_clientesMaxOrderByAggregateInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
  }

  export type pagos_clientesMinOrderByAggregateInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
  }

  export type pagos_clientesSumOrderByAggregateInput = {
    id_pagos_clientes?: SortOrder
    id_operacion_venta?: SortOrder
    monto_pago?: SortOrder
  }

  export type producto_variantesCountOrderByAggregateInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    talle?: SortOrder
    stock_actual?: SortOrder
    color?: SortOrder
  }

  export type producto_variantesAvgOrderByAggregateInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    stock_actual?: SortOrder
  }

  export type producto_variantesMaxOrderByAggregateInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    talle?: SortOrder
    stock_actual?: SortOrder
    color?: SortOrder
  }

  export type producto_variantesMinOrderByAggregateInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    talle?: SortOrder
    stock_actual?: SortOrder
    color?: SortOrder
  }

  export type producto_variantesSumOrderByAggregateInput = {
    id_variante?: SortOrder
    id_producto?: SortOrder
    stock_actual?: SortOrder
  }

  export type Producto_variantesListRelationFilter = {
    every?: producto_variantesWhereInput
    some?: producto_variantesWhereInput
    none?: producto_variantesWhereInput
  }

  export type producto_variantesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productosCountOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    categoria?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
  }

  export type productosAvgOrderByAggregateInput = {
    id_producto?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
  }

  export type productosMaxOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    categoria?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
  }

  export type productosMinOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    categoria?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
  }

  export type productosSumOrderByAggregateInput = {
    id_producto?: SortOrder
    costo?: SortOrder
    precio_unitario?: SortOrder
  }

  export type proveedoresCountOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    celular?: SortOrder
    contacto?: SortOrder
  }

  export type proveedoresAvgOrderByAggregateInput = {
    id_proveedor?: SortOrder
  }

  export type proveedoresMaxOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    celular?: SortOrder
    contacto?: SortOrder
  }

  export type proveedoresMinOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    celular?: SortOrder
    contacto?: SortOrder
  }

  export type proveedoresSumOrderByAggregateInput = {
    id_proveedor?: SortOrder
  }

  export type OperacionListRelationFilter = {
    every?: operacionWhereInput
    some?: operacionWhereInput
    none?: operacionWhereInput
  }

  export type operacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipo_operacionCountOrderByAggregateInput = {
    id_tipo_operacion?: SortOrder
    tipo?: SortOrder
  }

  export type tipo_operacionAvgOrderByAggregateInput = {
    id_tipo_operacion?: SortOrder
  }

  export type tipo_operacionMaxOrderByAggregateInput = {
    id_tipo_operacion?: SortOrder
    tipo?: SortOrder
  }

  export type tipo_operacionMinOrderByAggregateInput = {
    id_tipo_operacion?: SortOrder
    tipo?: SortOrder
  }

  export type tipo_operacionSumOrderByAggregateInput = {
    id_tipo_operacion?: SortOrder
  }

  export type asientos_contablesCreateNestedOneWithoutAsiento_detallesInput = {
    create?: XOR<asientos_contablesCreateWithoutAsiento_detallesInput, asientos_contablesUncheckedCreateWithoutAsiento_detallesInput>
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutAsiento_detallesInput
    connect?: asientos_contablesWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type asientos_contablesUpdateOneRequiredWithoutAsiento_detallesNestedInput = {
    create?: XOR<asientos_contablesCreateWithoutAsiento_detallesInput, asientos_contablesUncheckedCreateWithoutAsiento_detallesInput>
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutAsiento_detallesInput
    upsert?: asientos_contablesUpsertWithoutAsiento_detallesInput
    connect?: asientos_contablesWhereUniqueInput
    update?: XOR<XOR<asientos_contablesUpdateToOneWithWhereWithoutAsiento_detallesInput, asientos_contablesUpdateWithoutAsiento_detallesInput>, asientos_contablesUncheckedUpdateWithoutAsiento_detallesInput>
  }

  export type asiento_detallesCreateNestedManyWithoutAsientos_contablesInput = {
    create?: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput> | asiento_detallesCreateWithoutAsientos_contablesInput[] | asiento_detallesUncheckedCreateWithoutAsientos_contablesInput[]
    connectOrCreate?: asiento_detallesCreateOrConnectWithoutAsientos_contablesInput | asiento_detallesCreateOrConnectWithoutAsientos_contablesInput[]
    createMany?: asiento_detallesCreateManyAsientos_contablesInputEnvelope
    connect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
  }

  export type operacionCreateNestedOneWithoutAsientos_contablesInput = {
    create?: XOR<operacionCreateWithoutAsientos_contablesInput, operacionUncheckedCreateWithoutAsientos_contablesInput>
    connectOrCreate?: operacionCreateOrConnectWithoutAsientos_contablesInput
    connect?: operacionWhereUniqueInput
  }

  export type asiento_detallesUncheckedCreateNestedManyWithoutAsientos_contablesInput = {
    create?: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput> | asiento_detallesCreateWithoutAsientos_contablesInput[] | asiento_detallesUncheckedCreateWithoutAsientos_contablesInput[]
    connectOrCreate?: asiento_detallesCreateOrConnectWithoutAsientos_contablesInput | asiento_detallesCreateOrConnectWithoutAsientos_contablesInput[]
    createMany?: asiento_detallesCreateManyAsientos_contablesInputEnvelope
    connect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type asiento_detallesUpdateManyWithoutAsientos_contablesNestedInput = {
    create?: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput> | asiento_detallesCreateWithoutAsientos_contablesInput[] | asiento_detallesUncheckedCreateWithoutAsientos_contablesInput[]
    connectOrCreate?: asiento_detallesCreateOrConnectWithoutAsientos_contablesInput | asiento_detallesCreateOrConnectWithoutAsientos_contablesInput[]
    upsert?: asiento_detallesUpsertWithWhereUniqueWithoutAsientos_contablesInput | asiento_detallesUpsertWithWhereUniqueWithoutAsientos_contablesInput[]
    createMany?: asiento_detallesCreateManyAsientos_contablesInputEnvelope
    set?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    disconnect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    delete?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    connect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    update?: asiento_detallesUpdateWithWhereUniqueWithoutAsientos_contablesInput | asiento_detallesUpdateWithWhereUniqueWithoutAsientos_contablesInput[]
    updateMany?: asiento_detallesUpdateManyWithWhereWithoutAsientos_contablesInput | asiento_detallesUpdateManyWithWhereWithoutAsientos_contablesInput[]
    deleteMany?: asiento_detallesScalarWhereInput | asiento_detallesScalarWhereInput[]
  }

  export type operacionUpdateOneRequiredWithoutAsientos_contablesNestedInput = {
    create?: XOR<operacionCreateWithoutAsientos_contablesInput, operacionUncheckedCreateWithoutAsientos_contablesInput>
    connectOrCreate?: operacionCreateOrConnectWithoutAsientos_contablesInput
    upsert?: operacionUpsertWithoutAsientos_contablesInput
    connect?: operacionWhereUniqueInput
    update?: XOR<XOR<operacionUpdateToOneWithWhereWithoutAsientos_contablesInput, operacionUpdateWithoutAsientos_contablesInput>, operacionUncheckedUpdateWithoutAsientos_contablesInput>
  }

  export type asiento_detallesUncheckedUpdateManyWithoutAsientos_contablesNestedInput = {
    create?: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput> | asiento_detallesCreateWithoutAsientos_contablesInput[] | asiento_detallesUncheckedCreateWithoutAsientos_contablesInput[]
    connectOrCreate?: asiento_detallesCreateOrConnectWithoutAsientos_contablesInput | asiento_detallesCreateOrConnectWithoutAsientos_contablesInput[]
    upsert?: asiento_detallesUpsertWithWhereUniqueWithoutAsientos_contablesInput | asiento_detallesUpsertWithWhereUniqueWithoutAsientos_contablesInput[]
    createMany?: asiento_detallesCreateManyAsientos_contablesInputEnvelope
    set?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    disconnect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    delete?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    connect?: asiento_detallesWhereUniqueInput | asiento_detallesWhereUniqueInput[]
    update?: asiento_detallesUpdateWithWhereUniqueWithoutAsientos_contablesInput | asiento_detallesUpdateWithWhereUniqueWithoutAsientos_contablesInput[]
    updateMany?: asiento_detallesUpdateManyWithWhereWithoutAsientos_contablesInput | asiento_detallesUpdateManyWithWhereWithoutAsientos_contablesInput[]
    deleteMany?: asiento_detallesScalarWhereInput | asiento_detallesScalarWhereInput[]
  }

  export type operacion_ventasCreateNestedManyWithoutClientesInput = {
    create?: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput> | operacion_ventasCreateWithoutClientesInput[] | operacion_ventasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutClientesInput | operacion_ventasCreateOrConnectWithoutClientesInput[]
    createMany?: operacion_ventasCreateManyClientesInputEnvelope
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
  }

  export type operacion_ventasUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput> | operacion_ventasCreateWithoutClientesInput[] | operacion_ventasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutClientesInput | operacion_ventasCreateOrConnectWithoutClientesInput[]
    createMany?: operacion_ventasCreateManyClientesInputEnvelope
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
  }

  export type operacion_ventasUpdateManyWithoutClientesNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput> | operacion_ventasCreateWithoutClientesInput[] | operacion_ventasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutClientesInput | operacion_ventasCreateOrConnectWithoutClientesInput[]
    upsert?: operacion_ventasUpsertWithWhereUniqueWithoutClientesInput | operacion_ventasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: operacion_ventasCreateManyClientesInputEnvelope
    set?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    disconnect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    delete?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    update?: operacion_ventasUpdateWithWhereUniqueWithoutClientesInput | operacion_ventasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: operacion_ventasUpdateManyWithWhereWithoutClientesInput | operacion_ventasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
  }

  export type operacion_ventasUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput> | operacion_ventasCreateWithoutClientesInput[] | operacion_ventasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutClientesInput | operacion_ventasCreateOrConnectWithoutClientesInput[]
    upsert?: operacion_ventasUpsertWithWhereUniqueWithoutClientesInput | operacion_ventasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: operacion_ventasCreateManyClientesInputEnvelope
    set?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    disconnect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    delete?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    update?: operacion_ventasUpdateWithWhereUniqueWithoutClientesInput | operacion_ventasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: operacion_ventasUpdateManyWithWhereWithoutClientesInput | operacion_ventasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
  }

  export type operacion_comprasCreateNestedOneWithoutDetalle_compraInput = {
    create?: XOR<operacion_comprasCreateWithoutDetalle_compraInput, operacion_comprasUncheckedCreateWithoutDetalle_compraInput>
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutDetalle_compraInput
    connect?: operacion_comprasWhereUniqueInput
  }

  export type productosCreateNestedOneWithoutDetalle_compraInput = {
    create?: XOR<productosCreateWithoutDetalle_compraInput, productosUncheckedCreateWithoutDetalle_compraInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_compraInput
    connect?: productosWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type operacion_comprasUpdateOneRequiredWithoutDetalle_compraNestedInput = {
    create?: XOR<operacion_comprasCreateWithoutDetalle_compraInput, operacion_comprasUncheckedCreateWithoutDetalle_compraInput>
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutDetalle_compraInput
    upsert?: operacion_comprasUpsertWithoutDetalle_compraInput
    connect?: operacion_comprasWhereUniqueInput
    update?: XOR<XOR<operacion_comprasUpdateToOneWithWhereWithoutDetalle_compraInput, operacion_comprasUpdateWithoutDetalle_compraInput>, operacion_comprasUncheckedUpdateWithoutDetalle_compraInput>
  }

  export type productosUpdateOneRequiredWithoutDetalle_compraNestedInput = {
    create?: XOR<productosCreateWithoutDetalle_compraInput, productosUncheckedCreateWithoutDetalle_compraInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_compraInput
    upsert?: productosUpsertWithoutDetalle_compraInput
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutDetalle_compraInput, productosUpdateWithoutDetalle_compraInput>, productosUncheckedUpdateWithoutDetalle_compraInput>
  }

  export type operacion_ventasCreateNestedOneWithoutDetalle_ventaInput = {
    create?: XOR<operacion_ventasCreateWithoutDetalle_ventaInput, operacion_ventasUncheckedCreateWithoutDetalle_ventaInput>
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutDetalle_ventaInput
    connect?: operacion_ventasWhereUniqueInput
  }

  export type productosCreateNestedOneWithoutDetalle_ventaInput = {
    create?: XOR<productosCreateWithoutDetalle_ventaInput, productosUncheckedCreateWithoutDetalle_ventaInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_ventaInput
    connect?: productosWhereUniqueInput
  }

  export type operacion_ventasUpdateOneRequiredWithoutDetalle_ventaNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutDetalle_ventaInput, operacion_ventasUncheckedCreateWithoutDetalle_ventaInput>
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutDetalle_ventaInput
    upsert?: operacion_ventasUpsertWithoutDetalle_ventaInput
    connect?: operacion_ventasWhereUniqueInput
    update?: XOR<XOR<operacion_ventasUpdateToOneWithWhereWithoutDetalle_ventaInput, operacion_ventasUpdateWithoutDetalle_ventaInput>, operacion_ventasUncheckedUpdateWithoutDetalle_ventaInput>
  }

  export type productosUpdateOneRequiredWithoutDetalle_ventaNestedInput = {
    create?: XOR<productosCreateWithoutDetalle_ventaInput, productosUncheckedCreateWithoutDetalle_ventaInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_ventaInput
    upsert?: productosUpsertWithoutDetalle_ventaInput
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutDetalle_ventaInput, productosUpdateWithoutDetalle_ventaInput>, productosUncheckedUpdateWithoutDetalle_ventaInput>
  }

  export type operacionCreateNestedOneWithoutInventario_movimientosInput = {
    create?: XOR<operacionCreateWithoutInventario_movimientosInput, operacionUncheckedCreateWithoutInventario_movimientosInput>
    connectOrCreate?: operacionCreateOrConnectWithoutInventario_movimientosInput
    connect?: operacionWhereUniqueInput
  }

  export type productosCreateNestedOneWithoutInventario_movimientosInput = {
    create?: XOR<productosCreateWithoutInventario_movimientosInput, productosUncheckedCreateWithoutInventario_movimientosInput>
    connectOrCreate?: productosCreateOrConnectWithoutInventario_movimientosInput
    connect?: productosWhereUniqueInput
  }

  export type operacionUpdateOneRequiredWithoutInventario_movimientosNestedInput = {
    create?: XOR<operacionCreateWithoutInventario_movimientosInput, operacionUncheckedCreateWithoutInventario_movimientosInput>
    connectOrCreate?: operacionCreateOrConnectWithoutInventario_movimientosInput
    upsert?: operacionUpsertWithoutInventario_movimientosInput
    connect?: operacionWhereUniqueInput
    update?: XOR<XOR<operacionUpdateToOneWithWhereWithoutInventario_movimientosInput, operacionUpdateWithoutInventario_movimientosInput>, operacionUncheckedUpdateWithoutInventario_movimientosInput>
  }

  export type productosUpdateOneRequiredWithoutInventario_movimientosNestedInput = {
    create?: XOR<productosCreateWithoutInventario_movimientosInput, productosUncheckedCreateWithoutInventario_movimientosInput>
    connectOrCreate?: productosCreateOrConnectWithoutInventario_movimientosInput
    upsert?: productosUpsertWithoutInventario_movimientosInput
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutInventario_movimientosInput, productosUpdateWithoutInventario_movimientosInput>, productosUncheckedUpdateWithoutInventario_movimientosInput>
  }

  export type asientos_contablesCreateNestedManyWithoutOperacionInput = {
    create?: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput> | asientos_contablesCreateWithoutOperacionInput[] | asientos_contablesUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutOperacionInput | asientos_contablesCreateOrConnectWithoutOperacionInput[]
    createMany?: asientos_contablesCreateManyOperacionInputEnvelope
    connect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
  }

  export type inventario_movimientosCreateNestedManyWithoutOperacionInput = {
    create?: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput> | inventario_movimientosCreateWithoutOperacionInput[] | inventario_movimientosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutOperacionInput | inventario_movimientosCreateOrConnectWithoutOperacionInput[]
    createMany?: inventario_movimientosCreateManyOperacionInputEnvelope
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
  }

  export type tipo_operacionCreateNestedOneWithoutOperacionInput = {
    create?: XOR<tipo_operacionCreateWithoutOperacionInput, tipo_operacionUncheckedCreateWithoutOperacionInput>
    connectOrCreate?: tipo_operacionCreateOrConnectWithoutOperacionInput
    connect?: tipo_operacionWhereUniqueInput
  }

  export type operacion_comprasCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput> | operacion_comprasCreateWithoutOperacionInput[] | operacion_comprasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutOperacionInput | operacion_comprasCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_comprasCreateManyOperacionInputEnvelope
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
  }

  export type operacion_gastosCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput> | operacion_gastosCreateWithoutOperacionInput[] | operacion_gastosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_gastosCreateOrConnectWithoutOperacionInput | operacion_gastosCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_gastosCreateManyOperacionInputEnvelope
    connect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
  }

  export type operacion_ventasCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput> | operacion_ventasCreateWithoutOperacionInput[] | operacion_ventasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutOperacionInput | operacion_ventasCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_ventasCreateManyOperacionInputEnvelope
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
  }

  export type asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput = {
    create?: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput> | asientos_contablesCreateWithoutOperacionInput[] | asientos_contablesUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutOperacionInput | asientos_contablesCreateOrConnectWithoutOperacionInput[]
    createMany?: asientos_contablesCreateManyOperacionInputEnvelope
    connect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
  }

  export type inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput = {
    create?: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput> | inventario_movimientosCreateWithoutOperacionInput[] | inventario_movimientosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutOperacionInput | inventario_movimientosCreateOrConnectWithoutOperacionInput[]
    createMany?: inventario_movimientosCreateManyOperacionInputEnvelope
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
  }

  export type operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput> | operacion_comprasCreateWithoutOperacionInput[] | operacion_comprasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutOperacionInput | operacion_comprasCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_comprasCreateManyOperacionInputEnvelope
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
  }

  export type operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput> | operacion_gastosCreateWithoutOperacionInput[] | operacion_gastosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_gastosCreateOrConnectWithoutOperacionInput | operacion_gastosCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_gastosCreateManyOperacionInputEnvelope
    connect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
  }

  export type operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput = {
    create?: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput> | operacion_ventasCreateWithoutOperacionInput[] | operacion_ventasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutOperacionInput | operacion_ventasCreateOrConnectWithoutOperacionInput[]
    createMany?: operacion_ventasCreateManyOperacionInputEnvelope
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
  }

  export type asientos_contablesUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput> | asientos_contablesCreateWithoutOperacionInput[] | asientos_contablesUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutOperacionInput | asientos_contablesCreateOrConnectWithoutOperacionInput[]
    upsert?: asientos_contablesUpsertWithWhereUniqueWithoutOperacionInput | asientos_contablesUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: asientos_contablesCreateManyOperacionInputEnvelope
    set?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    disconnect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    delete?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    connect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    update?: asientos_contablesUpdateWithWhereUniqueWithoutOperacionInput | asientos_contablesUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: asientos_contablesUpdateManyWithWhereWithoutOperacionInput | asientos_contablesUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: asientos_contablesScalarWhereInput | asientos_contablesScalarWhereInput[]
  }

  export type inventario_movimientosUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput> | inventario_movimientosCreateWithoutOperacionInput[] | inventario_movimientosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutOperacionInput | inventario_movimientosCreateOrConnectWithoutOperacionInput[]
    upsert?: inventario_movimientosUpsertWithWhereUniqueWithoutOperacionInput | inventario_movimientosUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: inventario_movimientosCreateManyOperacionInputEnvelope
    set?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    disconnect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    delete?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    update?: inventario_movimientosUpdateWithWhereUniqueWithoutOperacionInput | inventario_movimientosUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: inventario_movimientosUpdateManyWithWhereWithoutOperacionInput | inventario_movimientosUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
  }

  export type tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput = {
    create?: XOR<tipo_operacionCreateWithoutOperacionInput, tipo_operacionUncheckedCreateWithoutOperacionInput>
    connectOrCreate?: tipo_operacionCreateOrConnectWithoutOperacionInput
    upsert?: tipo_operacionUpsertWithoutOperacionInput
    connect?: tipo_operacionWhereUniqueInput
    update?: XOR<XOR<tipo_operacionUpdateToOneWithWhereWithoutOperacionInput, tipo_operacionUpdateWithoutOperacionInput>, tipo_operacionUncheckedUpdateWithoutOperacionInput>
  }

  export type operacion_comprasUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput> | operacion_comprasCreateWithoutOperacionInput[] | operacion_comprasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutOperacionInput | operacion_comprasCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_comprasUpsertWithWhereUniqueWithoutOperacionInput | operacion_comprasUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_comprasCreateManyOperacionInputEnvelope
    set?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    disconnect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    delete?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    update?: operacion_comprasUpdateWithWhereUniqueWithoutOperacionInput | operacion_comprasUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_comprasUpdateManyWithWhereWithoutOperacionInput | operacion_comprasUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
  }

  export type operacion_gastosUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput> | operacion_gastosCreateWithoutOperacionInput[] | operacion_gastosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_gastosCreateOrConnectWithoutOperacionInput | operacion_gastosCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_gastosUpsertWithWhereUniqueWithoutOperacionInput | operacion_gastosUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_gastosCreateManyOperacionInputEnvelope
    set?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    disconnect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    delete?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    connect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    update?: operacion_gastosUpdateWithWhereUniqueWithoutOperacionInput | operacion_gastosUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_gastosUpdateManyWithWhereWithoutOperacionInput | operacion_gastosUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_gastosScalarWhereInput | operacion_gastosScalarWhereInput[]
  }

  export type operacion_ventasUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput> | operacion_ventasCreateWithoutOperacionInput[] | operacion_ventasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutOperacionInput | operacion_ventasCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_ventasUpsertWithWhereUniqueWithoutOperacionInput | operacion_ventasUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_ventasCreateManyOperacionInputEnvelope
    set?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    disconnect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    delete?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    update?: operacion_ventasUpdateWithWhereUniqueWithoutOperacionInput | operacion_ventasUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_ventasUpdateManyWithWhereWithoutOperacionInput | operacion_ventasUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
  }

  export type asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput> | asientos_contablesCreateWithoutOperacionInput[] | asientos_contablesUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: asientos_contablesCreateOrConnectWithoutOperacionInput | asientos_contablesCreateOrConnectWithoutOperacionInput[]
    upsert?: asientos_contablesUpsertWithWhereUniqueWithoutOperacionInput | asientos_contablesUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: asientos_contablesCreateManyOperacionInputEnvelope
    set?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    disconnect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    delete?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    connect?: asientos_contablesWhereUniqueInput | asientos_contablesWhereUniqueInput[]
    update?: asientos_contablesUpdateWithWhereUniqueWithoutOperacionInput | asientos_contablesUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: asientos_contablesUpdateManyWithWhereWithoutOperacionInput | asientos_contablesUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: asientos_contablesScalarWhereInput | asientos_contablesScalarWhereInput[]
  }

  export type inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput> | inventario_movimientosCreateWithoutOperacionInput[] | inventario_movimientosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutOperacionInput | inventario_movimientosCreateOrConnectWithoutOperacionInput[]
    upsert?: inventario_movimientosUpsertWithWhereUniqueWithoutOperacionInput | inventario_movimientosUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: inventario_movimientosCreateManyOperacionInputEnvelope
    set?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    disconnect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    delete?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    update?: inventario_movimientosUpdateWithWhereUniqueWithoutOperacionInput | inventario_movimientosUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: inventario_movimientosUpdateManyWithWhereWithoutOperacionInput | inventario_movimientosUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
  }

  export type operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput> | operacion_comprasCreateWithoutOperacionInput[] | operacion_comprasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutOperacionInput | operacion_comprasCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_comprasUpsertWithWhereUniqueWithoutOperacionInput | operacion_comprasUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_comprasCreateManyOperacionInputEnvelope
    set?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    disconnect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    delete?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    update?: operacion_comprasUpdateWithWhereUniqueWithoutOperacionInput | operacion_comprasUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_comprasUpdateManyWithWhereWithoutOperacionInput | operacion_comprasUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
  }

  export type operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput> | operacion_gastosCreateWithoutOperacionInput[] | operacion_gastosUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_gastosCreateOrConnectWithoutOperacionInput | operacion_gastosCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_gastosUpsertWithWhereUniqueWithoutOperacionInput | operacion_gastosUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_gastosCreateManyOperacionInputEnvelope
    set?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    disconnect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    delete?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    connect?: operacion_gastosWhereUniqueInput | operacion_gastosWhereUniqueInput[]
    update?: operacion_gastosUpdateWithWhereUniqueWithoutOperacionInput | operacion_gastosUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_gastosUpdateManyWithWhereWithoutOperacionInput | operacion_gastosUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_gastosScalarWhereInput | operacion_gastosScalarWhereInput[]
  }

  export type operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput> | operacion_ventasCreateWithoutOperacionInput[] | operacion_ventasUncheckedCreateWithoutOperacionInput[]
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutOperacionInput | operacion_ventasCreateOrConnectWithoutOperacionInput[]
    upsert?: operacion_ventasUpsertWithWhereUniqueWithoutOperacionInput | operacion_ventasUpsertWithWhereUniqueWithoutOperacionInput[]
    createMany?: operacion_ventasCreateManyOperacionInputEnvelope
    set?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    disconnect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    delete?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    connect?: operacion_ventasWhereUniqueInput | operacion_ventasWhereUniqueInput[]
    update?: operacion_ventasUpdateWithWhereUniqueWithoutOperacionInput | operacion_ventasUpdateWithWhereUniqueWithoutOperacionInput[]
    updateMany?: operacion_ventasUpdateManyWithWhereWithoutOperacionInput | operacion_ventasUpdateManyWithWhereWithoutOperacionInput[]
    deleteMany?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
  }

  export type detalle_compraCreateNestedManyWithoutOperacion_comprasInput = {
    create?: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput> | detalle_compraCreateWithoutOperacion_comprasInput[] | detalle_compraUncheckedCreateWithoutOperacion_comprasInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutOperacion_comprasInput | detalle_compraCreateOrConnectWithoutOperacion_comprasInput[]
    createMany?: detalle_compraCreateManyOperacion_comprasInputEnvelope
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
  }

  export type operacionCreateNestedOneWithoutOperacion_comprasInput = {
    create?: XOR<operacionCreateWithoutOperacion_comprasInput, operacionUncheckedCreateWithoutOperacion_comprasInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_comprasInput
    connect?: operacionWhereUniqueInput
  }

  export type proveedoresCreateNestedOneWithoutOperacion_comprasInput = {
    create?: XOR<proveedoresCreateWithoutOperacion_comprasInput, proveedoresUncheckedCreateWithoutOperacion_comprasInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutOperacion_comprasInput
    connect?: proveedoresWhereUniqueInput
  }

  export type detalle_compraUncheckedCreateNestedManyWithoutOperacion_comprasInput = {
    create?: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput> | detalle_compraCreateWithoutOperacion_comprasInput[] | detalle_compraUncheckedCreateWithoutOperacion_comprasInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutOperacion_comprasInput | detalle_compraCreateOrConnectWithoutOperacion_comprasInput[]
    createMany?: detalle_compraCreateManyOperacion_comprasInputEnvelope
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
  }

  export type detalle_compraUpdateManyWithoutOperacion_comprasNestedInput = {
    create?: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput> | detalle_compraCreateWithoutOperacion_comprasInput[] | detalle_compraUncheckedCreateWithoutOperacion_comprasInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutOperacion_comprasInput | detalle_compraCreateOrConnectWithoutOperacion_comprasInput[]
    upsert?: detalle_compraUpsertWithWhereUniqueWithoutOperacion_comprasInput | detalle_compraUpsertWithWhereUniqueWithoutOperacion_comprasInput[]
    createMany?: detalle_compraCreateManyOperacion_comprasInputEnvelope
    set?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    disconnect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    delete?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    update?: detalle_compraUpdateWithWhereUniqueWithoutOperacion_comprasInput | detalle_compraUpdateWithWhereUniqueWithoutOperacion_comprasInput[]
    updateMany?: detalle_compraUpdateManyWithWhereWithoutOperacion_comprasInput | detalle_compraUpdateManyWithWhereWithoutOperacion_comprasInput[]
    deleteMany?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
  }

  export type operacionUpdateOneRequiredWithoutOperacion_comprasNestedInput = {
    create?: XOR<operacionCreateWithoutOperacion_comprasInput, operacionUncheckedCreateWithoutOperacion_comprasInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_comprasInput
    upsert?: operacionUpsertWithoutOperacion_comprasInput
    connect?: operacionWhereUniqueInput
    update?: XOR<XOR<operacionUpdateToOneWithWhereWithoutOperacion_comprasInput, operacionUpdateWithoutOperacion_comprasInput>, operacionUncheckedUpdateWithoutOperacion_comprasInput>
  }

  export type proveedoresUpdateOneRequiredWithoutOperacion_comprasNestedInput = {
    create?: XOR<proveedoresCreateWithoutOperacion_comprasInput, proveedoresUncheckedCreateWithoutOperacion_comprasInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutOperacion_comprasInput
    upsert?: proveedoresUpsertWithoutOperacion_comprasInput
    connect?: proveedoresWhereUniqueInput
    update?: XOR<XOR<proveedoresUpdateToOneWithWhereWithoutOperacion_comprasInput, proveedoresUpdateWithoutOperacion_comprasInput>, proveedoresUncheckedUpdateWithoutOperacion_comprasInput>
  }

  export type detalle_compraUncheckedUpdateManyWithoutOperacion_comprasNestedInput = {
    create?: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput> | detalle_compraCreateWithoutOperacion_comprasInput[] | detalle_compraUncheckedCreateWithoutOperacion_comprasInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutOperacion_comprasInput | detalle_compraCreateOrConnectWithoutOperacion_comprasInput[]
    upsert?: detalle_compraUpsertWithWhereUniqueWithoutOperacion_comprasInput | detalle_compraUpsertWithWhereUniqueWithoutOperacion_comprasInput[]
    createMany?: detalle_compraCreateManyOperacion_comprasInputEnvelope
    set?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    disconnect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    delete?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    update?: detalle_compraUpdateWithWhereUniqueWithoutOperacion_comprasInput | detalle_compraUpdateWithWhereUniqueWithoutOperacion_comprasInput[]
    updateMany?: detalle_compraUpdateManyWithWhereWithoutOperacion_comprasInput | detalle_compraUpdateManyWithWhereWithoutOperacion_comprasInput[]
    deleteMany?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
  }

  export type operacionCreateNestedOneWithoutOperacion_gastosInput = {
    create?: XOR<operacionCreateWithoutOperacion_gastosInput, operacionUncheckedCreateWithoutOperacion_gastosInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_gastosInput
    connect?: operacionWhereUniqueInput
  }

  export type operacionUpdateOneRequiredWithoutOperacion_gastosNestedInput = {
    create?: XOR<operacionCreateWithoutOperacion_gastosInput, operacionUncheckedCreateWithoutOperacion_gastosInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_gastosInput
    upsert?: operacionUpsertWithoutOperacion_gastosInput
    connect?: operacionWhereUniqueInput
    update?: XOR<XOR<operacionUpdateToOneWithWhereWithoutOperacion_gastosInput, operacionUpdateWithoutOperacion_gastosInput>, operacionUncheckedUpdateWithoutOperacion_gastosInput>
  }

  export type detalle_ventaCreateNestedManyWithoutOperacion_ventasInput = {
    create?: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput> | detalle_ventaCreateWithoutOperacion_ventasInput[] | detalle_ventaUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutOperacion_ventasInput | detalle_ventaCreateOrConnectWithoutOperacion_ventasInput[]
    createMany?: detalle_ventaCreateManyOperacion_ventasInputEnvelope
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
  }

  export type clientesCreateNestedOneWithoutOperacion_ventasInput = {
    create?: XOR<clientesCreateWithoutOperacion_ventasInput, clientesUncheckedCreateWithoutOperacion_ventasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutOperacion_ventasInput
    connect?: clientesWhereUniqueInput
  }

  export type operacionCreateNestedOneWithoutOperacion_ventasInput = {
    create?: XOR<operacionCreateWithoutOperacion_ventasInput, operacionUncheckedCreateWithoutOperacion_ventasInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_ventasInput
    connect?: operacionWhereUniqueInput
  }

  export type pagos_clientesCreateNestedManyWithoutOperacion_ventasInput = {
    create?: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput> | pagos_clientesCreateWithoutOperacion_ventasInput[] | pagos_clientesUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: pagos_clientesCreateOrConnectWithoutOperacion_ventasInput | pagos_clientesCreateOrConnectWithoutOperacion_ventasInput[]
    createMany?: pagos_clientesCreateManyOperacion_ventasInputEnvelope
    connect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
  }

  export type detalle_ventaUncheckedCreateNestedManyWithoutOperacion_ventasInput = {
    create?: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput> | detalle_ventaCreateWithoutOperacion_ventasInput[] | detalle_ventaUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutOperacion_ventasInput | detalle_ventaCreateOrConnectWithoutOperacion_ventasInput[]
    createMany?: detalle_ventaCreateManyOperacion_ventasInputEnvelope
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
  }

  export type pagos_clientesUncheckedCreateNestedManyWithoutOperacion_ventasInput = {
    create?: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput> | pagos_clientesCreateWithoutOperacion_ventasInput[] | pagos_clientesUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: pagos_clientesCreateOrConnectWithoutOperacion_ventasInput | pagos_clientesCreateOrConnectWithoutOperacion_ventasInput[]
    createMany?: pagos_clientesCreateManyOperacion_ventasInputEnvelope
    connect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
  }

  export type detalle_ventaUpdateManyWithoutOperacion_ventasNestedInput = {
    create?: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput> | detalle_ventaCreateWithoutOperacion_ventasInput[] | detalle_ventaUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutOperacion_ventasInput | detalle_ventaCreateOrConnectWithoutOperacion_ventasInput[]
    upsert?: detalle_ventaUpsertWithWhereUniqueWithoutOperacion_ventasInput | detalle_ventaUpsertWithWhereUniqueWithoutOperacion_ventasInput[]
    createMany?: detalle_ventaCreateManyOperacion_ventasInputEnvelope
    set?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    disconnect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    delete?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    update?: detalle_ventaUpdateWithWhereUniqueWithoutOperacion_ventasInput | detalle_ventaUpdateWithWhereUniqueWithoutOperacion_ventasInput[]
    updateMany?: detalle_ventaUpdateManyWithWhereWithoutOperacion_ventasInput | detalle_ventaUpdateManyWithWhereWithoutOperacion_ventasInput[]
    deleteMany?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
  }

  export type clientesUpdateOneRequiredWithoutOperacion_ventasNestedInput = {
    create?: XOR<clientesCreateWithoutOperacion_ventasInput, clientesUncheckedCreateWithoutOperacion_ventasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutOperacion_ventasInput
    upsert?: clientesUpsertWithoutOperacion_ventasInput
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutOperacion_ventasInput, clientesUpdateWithoutOperacion_ventasInput>, clientesUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type operacionUpdateOneRequiredWithoutOperacion_ventasNestedInput = {
    create?: XOR<operacionCreateWithoutOperacion_ventasInput, operacionUncheckedCreateWithoutOperacion_ventasInput>
    connectOrCreate?: operacionCreateOrConnectWithoutOperacion_ventasInput
    upsert?: operacionUpsertWithoutOperacion_ventasInput
    connect?: operacionWhereUniqueInput
    update?: XOR<XOR<operacionUpdateToOneWithWhereWithoutOperacion_ventasInput, operacionUpdateWithoutOperacion_ventasInput>, operacionUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type pagos_clientesUpdateManyWithoutOperacion_ventasNestedInput = {
    create?: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput> | pagos_clientesCreateWithoutOperacion_ventasInput[] | pagos_clientesUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: pagos_clientesCreateOrConnectWithoutOperacion_ventasInput | pagos_clientesCreateOrConnectWithoutOperacion_ventasInput[]
    upsert?: pagos_clientesUpsertWithWhereUniqueWithoutOperacion_ventasInput | pagos_clientesUpsertWithWhereUniqueWithoutOperacion_ventasInput[]
    createMany?: pagos_clientesCreateManyOperacion_ventasInputEnvelope
    set?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    disconnect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    delete?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    connect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    update?: pagos_clientesUpdateWithWhereUniqueWithoutOperacion_ventasInput | pagos_clientesUpdateWithWhereUniqueWithoutOperacion_ventasInput[]
    updateMany?: pagos_clientesUpdateManyWithWhereWithoutOperacion_ventasInput | pagos_clientesUpdateManyWithWhereWithoutOperacion_ventasInput[]
    deleteMany?: pagos_clientesScalarWhereInput | pagos_clientesScalarWhereInput[]
  }

  export type detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasNestedInput = {
    create?: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput> | detalle_ventaCreateWithoutOperacion_ventasInput[] | detalle_ventaUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutOperacion_ventasInput | detalle_ventaCreateOrConnectWithoutOperacion_ventasInput[]
    upsert?: detalle_ventaUpsertWithWhereUniqueWithoutOperacion_ventasInput | detalle_ventaUpsertWithWhereUniqueWithoutOperacion_ventasInput[]
    createMany?: detalle_ventaCreateManyOperacion_ventasInputEnvelope
    set?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    disconnect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    delete?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    update?: detalle_ventaUpdateWithWhereUniqueWithoutOperacion_ventasInput | detalle_ventaUpdateWithWhereUniqueWithoutOperacion_ventasInput[]
    updateMany?: detalle_ventaUpdateManyWithWhereWithoutOperacion_ventasInput | detalle_ventaUpdateManyWithWhereWithoutOperacion_ventasInput[]
    deleteMany?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
  }

  export type pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasNestedInput = {
    create?: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput> | pagos_clientesCreateWithoutOperacion_ventasInput[] | pagos_clientesUncheckedCreateWithoutOperacion_ventasInput[]
    connectOrCreate?: pagos_clientesCreateOrConnectWithoutOperacion_ventasInput | pagos_clientesCreateOrConnectWithoutOperacion_ventasInput[]
    upsert?: pagos_clientesUpsertWithWhereUniqueWithoutOperacion_ventasInput | pagos_clientesUpsertWithWhereUniqueWithoutOperacion_ventasInput[]
    createMany?: pagos_clientesCreateManyOperacion_ventasInputEnvelope
    set?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    disconnect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    delete?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    connect?: pagos_clientesWhereUniqueInput | pagos_clientesWhereUniqueInput[]
    update?: pagos_clientesUpdateWithWhereUniqueWithoutOperacion_ventasInput | pagos_clientesUpdateWithWhereUniqueWithoutOperacion_ventasInput[]
    updateMany?: pagos_clientesUpdateManyWithWhereWithoutOperacion_ventasInput | pagos_clientesUpdateManyWithWhereWithoutOperacion_ventasInput[]
    deleteMany?: pagos_clientesScalarWhereInput | pagos_clientesScalarWhereInput[]
  }

  export type operacion_ventasCreateNestedOneWithoutPagos_clientesInput = {
    create?: XOR<operacion_ventasCreateWithoutPagos_clientesInput, operacion_ventasUncheckedCreateWithoutPagos_clientesInput>
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutPagos_clientesInput
    connect?: operacion_ventasWhereUniqueInput
  }

  export type operacion_ventasUpdateOneRequiredWithoutPagos_clientesNestedInput = {
    create?: XOR<operacion_ventasCreateWithoutPagos_clientesInput, operacion_ventasUncheckedCreateWithoutPagos_clientesInput>
    connectOrCreate?: operacion_ventasCreateOrConnectWithoutPagos_clientesInput
    upsert?: operacion_ventasUpsertWithoutPagos_clientesInput
    connect?: operacion_ventasWhereUniqueInput
    update?: XOR<XOR<operacion_ventasUpdateToOneWithWhereWithoutPagos_clientesInput, operacion_ventasUpdateWithoutPagos_clientesInput>, operacion_ventasUncheckedUpdateWithoutPagos_clientesInput>
  }

  export type productosCreateNestedOneWithoutProducto_variantesInput = {
    create?: XOR<productosCreateWithoutProducto_variantesInput, productosUncheckedCreateWithoutProducto_variantesInput>
    connectOrCreate?: productosCreateOrConnectWithoutProducto_variantesInput
    connect?: productosWhereUniqueInput
  }

  export type productosUpdateOneRequiredWithoutProducto_variantesNestedInput = {
    create?: XOR<productosCreateWithoutProducto_variantesInput, productosUncheckedCreateWithoutProducto_variantesInput>
    connectOrCreate?: productosCreateOrConnectWithoutProducto_variantesInput
    upsert?: productosUpsertWithoutProducto_variantesInput
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutProducto_variantesInput, productosUpdateWithoutProducto_variantesInput>, productosUncheckedUpdateWithoutProducto_variantesInput>
  }

  export type detalle_compraCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput> | detalle_compraCreateWithoutProductosInput[] | detalle_compraUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutProductosInput | detalle_compraCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_compraCreateManyProductosInputEnvelope
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
  }

  export type detalle_ventaCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput> | detalle_ventaCreateWithoutProductosInput[] | detalle_ventaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutProductosInput | detalle_ventaCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_ventaCreateManyProductosInputEnvelope
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
  }

  export type inventario_movimientosCreateNestedManyWithoutProductosInput = {
    create?: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput> | inventario_movimientosCreateWithoutProductosInput[] | inventario_movimientosUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutProductosInput | inventario_movimientosCreateOrConnectWithoutProductosInput[]
    createMany?: inventario_movimientosCreateManyProductosInputEnvelope
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
  }

  export type producto_variantesCreateNestedManyWithoutProductosInput = {
    create?: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput> | producto_variantesCreateWithoutProductosInput[] | producto_variantesUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: producto_variantesCreateOrConnectWithoutProductosInput | producto_variantesCreateOrConnectWithoutProductosInput[]
    createMany?: producto_variantesCreateManyProductosInputEnvelope
    connect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
  }

  export type detalle_compraUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput> | detalle_compraCreateWithoutProductosInput[] | detalle_compraUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutProductosInput | detalle_compraCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_compraCreateManyProductosInputEnvelope
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
  }

  export type detalle_ventaUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput> | detalle_ventaCreateWithoutProductosInput[] | detalle_ventaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutProductosInput | detalle_ventaCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_ventaCreateManyProductosInputEnvelope
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
  }

  export type inventario_movimientosUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput> | inventario_movimientosCreateWithoutProductosInput[] | inventario_movimientosUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutProductosInput | inventario_movimientosCreateOrConnectWithoutProductosInput[]
    createMany?: inventario_movimientosCreateManyProductosInputEnvelope
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
  }

  export type producto_variantesUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput> | producto_variantesCreateWithoutProductosInput[] | producto_variantesUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: producto_variantesCreateOrConnectWithoutProductosInput | producto_variantesCreateOrConnectWithoutProductosInput[]
    createMany?: producto_variantesCreateManyProductosInputEnvelope
    connect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
  }

  export type detalle_compraUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput> | detalle_compraCreateWithoutProductosInput[] | detalle_compraUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutProductosInput | detalle_compraCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_compraUpsertWithWhereUniqueWithoutProductosInput | detalle_compraUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_compraCreateManyProductosInputEnvelope
    set?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    disconnect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    delete?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    update?: detalle_compraUpdateWithWhereUniqueWithoutProductosInput | detalle_compraUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_compraUpdateManyWithWhereWithoutProductosInput | detalle_compraUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
  }

  export type detalle_ventaUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput> | detalle_ventaCreateWithoutProductosInput[] | detalle_ventaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutProductosInput | detalle_ventaCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_ventaUpsertWithWhereUniqueWithoutProductosInput | detalle_ventaUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_ventaCreateManyProductosInputEnvelope
    set?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    disconnect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    delete?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    update?: detalle_ventaUpdateWithWhereUniqueWithoutProductosInput | detalle_ventaUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_ventaUpdateManyWithWhereWithoutProductosInput | detalle_ventaUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
  }

  export type inventario_movimientosUpdateManyWithoutProductosNestedInput = {
    create?: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput> | inventario_movimientosCreateWithoutProductosInput[] | inventario_movimientosUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutProductosInput | inventario_movimientosCreateOrConnectWithoutProductosInput[]
    upsert?: inventario_movimientosUpsertWithWhereUniqueWithoutProductosInput | inventario_movimientosUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: inventario_movimientosCreateManyProductosInputEnvelope
    set?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    disconnect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    delete?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    update?: inventario_movimientosUpdateWithWhereUniqueWithoutProductosInput | inventario_movimientosUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: inventario_movimientosUpdateManyWithWhereWithoutProductosInput | inventario_movimientosUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
  }

  export type producto_variantesUpdateManyWithoutProductosNestedInput = {
    create?: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput> | producto_variantesCreateWithoutProductosInput[] | producto_variantesUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: producto_variantesCreateOrConnectWithoutProductosInput | producto_variantesCreateOrConnectWithoutProductosInput[]
    upsert?: producto_variantesUpsertWithWhereUniqueWithoutProductosInput | producto_variantesUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: producto_variantesCreateManyProductosInputEnvelope
    set?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    disconnect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    delete?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    connect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    update?: producto_variantesUpdateWithWhereUniqueWithoutProductosInput | producto_variantesUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: producto_variantesUpdateManyWithWhereWithoutProductosInput | producto_variantesUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: producto_variantesScalarWhereInput | producto_variantesScalarWhereInput[]
  }

  export type detalle_compraUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput> | detalle_compraCreateWithoutProductosInput[] | detalle_compraUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_compraCreateOrConnectWithoutProductosInput | detalle_compraCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_compraUpsertWithWhereUniqueWithoutProductosInput | detalle_compraUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_compraCreateManyProductosInputEnvelope
    set?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    disconnect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    delete?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    connect?: detalle_compraWhereUniqueInput | detalle_compraWhereUniqueInput[]
    update?: detalle_compraUpdateWithWhereUniqueWithoutProductosInput | detalle_compraUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_compraUpdateManyWithWhereWithoutProductosInput | detalle_compraUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
  }

  export type detalle_ventaUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput> | detalle_ventaCreateWithoutProductosInput[] | detalle_ventaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventaCreateOrConnectWithoutProductosInput | detalle_ventaCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_ventaUpsertWithWhereUniqueWithoutProductosInput | detalle_ventaUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_ventaCreateManyProductosInputEnvelope
    set?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    disconnect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    delete?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    connect?: detalle_ventaWhereUniqueInput | detalle_ventaWhereUniqueInput[]
    update?: detalle_ventaUpdateWithWhereUniqueWithoutProductosInput | detalle_ventaUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_ventaUpdateManyWithWhereWithoutProductosInput | detalle_ventaUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
  }

  export type inventario_movimientosUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput> | inventario_movimientosCreateWithoutProductosInput[] | inventario_movimientosUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: inventario_movimientosCreateOrConnectWithoutProductosInput | inventario_movimientosCreateOrConnectWithoutProductosInput[]
    upsert?: inventario_movimientosUpsertWithWhereUniqueWithoutProductosInput | inventario_movimientosUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: inventario_movimientosCreateManyProductosInputEnvelope
    set?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    disconnect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    delete?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    connect?: inventario_movimientosWhereUniqueInput | inventario_movimientosWhereUniqueInput[]
    update?: inventario_movimientosUpdateWithWhereUniqueWithoutProductosInput | inventario_movimientosUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: inventario_movimientosUpdateManyWithWhereWithoutProductosInput | inventario_movimientosUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
  }

  export type producto_variantesUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput> | producto_variantesCreateWithoutProductosInput[] | producto_variantesUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: producto_variantesCreateOrConnectWithoutProductosInput | producto_variantesCreateOrConnectWithoutProductosInput[]
    upsert?: producto_variantesUpsertWithWhereUniqueWithoutProductosInput | producto_variantesUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: producto_variantesCreateManyProductosInputEnvelope
    set?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    disconnect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    delete?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    connect?: producto_variantesWhereUniqueInput | producto_variantesWhereUniqueInput[]
    update?: producto_variantesUpdateWithWhereUniqueWithoutProductosInput | producto_variantesUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: producto_variantesUpdateManyWithWhereWithoutProductosInput | producto_variantesUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: producto_variantesScalarWhereInput | producto_variantesScalarWhereInput[]
  }

  export type operacion_comprasCreateNestedManyWithoutProveedoresInput = {
    create?: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput> | operacion_comprasCreateWithoutProveedoresInput[] | operacion_comprasUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutProveedoresInput | operacion_comprasCreateOrConnectWithoutProveedoresInput[]
    createMany?: operacion_comprasCreateManyProveedoresInputEnvelope
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
  }

  export type operacion_comprasUncheckedCreateNestedManyWithoutProveedoresInput = {
    create?: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput> | operacion_comprasCreateWithoutProveedoresInput[] | operacion_comprasUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutProveedoresInput | operacion_comprasCreateOrConnectWithoutProveedoresInput[]
    createMany?: operacion_comprasCreateManyProveedoresInputEnvelope
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
  }

  export type operacion_comprasUpdateManyWithoutProveedoresNestedInput = {
    create?: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput> | operacion_comprasCreateWithoutProveedoresInput[] | operacion_comprasUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutProveedoresInput | operacion_comprasCreateOrConnectWithoutProveedoresInput[]
    upsert?: operacion_comprasUpsertWithWhereUniqueWithoutProveedoresInput | operacion_comprasUpsertWithWhereUniqueWithoutProveedoresInput[]
    createMany?: operacion_comprasCreateManyProveedoresInputEnvelope
    set?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    disconnect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    delete?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    update?: operacion_comprasUpdateWithWhereUniqueWithoutProveedoresInput | operacion_comprasUpdateWithWhereUniqueWithoutProveedoresInput[]
    updateMany?: operacion_comprasUpdateManyWithWhereWithoutProveedoresInput | operacion_comprasUpdateManyWithWhereWithoutProveedoresInput[]
    deleteMany?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
  }

  export type operacion_comprasUncheckedUpdateManyWithoutProveedoresNestedInput = {
    create?: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput> | operacion_comprasCreateWithoutProveedoresInput[] | operacion_comprasUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: operacion_comprasCreateOrConnectWithoutProveedoresInput | operacion_comprasCreateOrConnectWithoutProveedoresInput[]
    upsert?: operacion_comprasUpsertWithWhereUniqueWithoutProveedoresInput | operacion_comprasUpsertWithWhereUniqueWithoutProveedoresInput[]
    createMany?: operacion_comprasCreateManyProveedoresInputEnvelope
    set?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    disconnect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    delete?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    connect?: operacion_comprasWhereUniqueInput | operacion_comprasWhereUniqueInput[]
    update?: operacion_comprasUpdateWithWhereUniqueWithoutProveedoresInput | operacion_comprasUpdateWithWhereUniqueWithoutProveedoresInput[]
    updateMany?: operacion_comprasUpdateManyWithWhereWithoutProveedoresInput | operacion_comprasUpdateManyWithWhereWithoutProveedoresInput[]
    deleteMany?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
  }

  export type operacionCreateNestedManyWithoutTipo_operacionInput = {
    create?: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput> | operacionCreateWithoutTipo_operacionInput[] | operacionUncheckedCreateWithoutTipo_operacionInput[]
    connectOrCreate?: operacionCreateOrConnectWithoutTipo_operacionInput | operacionCreateOrConnectWithoutTipo_operacionInput[]
    createMany?: operacionCreateManyTipo_operacionInputEnvelope
    connect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
  }

  export type operacionUncheckedCreateNestedManyWithoutTipo_operacionInput = {
    create?: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput> | operacionCreateWithoutTipo_operacionInput[] | operacionUncheckedCreateWithoutTipo_operacionInput[]
    connectOrCreate?: operacionCreateOrConnectWithoutTipo_operacionInput | operacionCreateOrConnectWithoutTipo_operacionInput[]
    createMany?: operacionCreateManyTipo_operacionInputEnvelope
    connect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
  }

  export type operacionUpdateManyWithoutTipo_operacionNestedInput = {
    create?: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput> | operacionCreateWithoutTipo_operacionInput[] | operacionUncheckedCreateWithoutTipo_operacionInput[]
    connectOrCreate?: operacionCreateOrConnectWithoutTipo_operacionInput | operacionCreateOrConnectWithoutTipo_operacionInput[]
    upsert?: operacionUpsertWithWhereUniqueWithoutTipo_operacionInput | operacionUpsertWithWhereUniqueWithoutTipo_operacionInput[]
    createMany?: operacionCreateManyTipo_operacionInputEnvelope
    set?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    disconnect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    delete?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    connect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    update?: operacionUpdateWithWhereUniqueWithoutTipo_operacionInput | operacionUpdateWithWhereUniqueWithoutTipo_operacionInput[]
    updateMany?: operacionUpdateManyWithWhereWithoutTipo_operacionInput | operacionUpdateManyWithWhereWithoutTipo_operacionInput[]
    deleteMany?: operacionScalarWhereInput | operacionScalarWhereInput[]
  }

  export type operacionUncheckedUpdateManyWithoutTipo_operacionNestedInput = {
    create?: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput> | operacionCreateWithoutTipo_operacionInput[] | operacionUncheckedCreateWithoutTipo_operacionInput[]
    connectOrCreate?: operacionCreateOrConnectWithoutTipo_operacionInput | operacionCreateOrConnectWithoutTipo_operacionInput[]
    upsert?: operacionUpsertWithWhereUniqueWithoutTipo_operacionInput | operacionUpsertWithWhereUniqueWithoutTipo_operacionInput[]
    createMany?: operacionCreateManyTipo_operacionInputEnvelope
    set?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    disconnect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    delete?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    connect?: operacionWhereUniqueInput | operacionWhereUniqueInput[]
    update?: operacionUpdateWithWhereUniqueWithoutTipo_operacionInput | operacionUpdateWithWhereUniqueWithoutTipo_operacionInput[]
    updateMany?: operacionUpdateManyWithWhereWithoutTipo_operacionInput | operacionUpdateManyWithWhereWithoutTipo_operacionInput[]
    deleteMany?: operacionScalarWhereInput | operacionScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type asientos_contablesCreateWithoutAsiento_detallesInput = {
    id_asiento: number
    fecha: Date | string
    descripcion?: string | null
    operacion: operacionCreateNestedOneWithoutAsientos_contablesInput
  }

  export type asientos_contablesUncheckedCreateWithoutAsiento_detallesInput = {
    id_asiento: number
    id_operacion: number
    fecha: Date | string
    descripcion?: string | null
  }

  export type asientos_contablesCreateOrConnectWithoutAsiento_detallesInput = {
    where: asientos_contablesWhereUniqueInput
    create: XOR<asientos_contablesCreateWithoutAsiento_detallesInput, asientos_contablesUncheckedCreateWithoutAsiento_detallesInput>
  }

  export type asientos_contablesUpsertWithoutAsiento_detallesInput = {
    update: XOR<asientos_contablesUpdateWithoutAsiento_detallesInput, asientos_contablesUncheckedUpdateWithoutAsiento_detallesInput>
    create: XOR<asientos_contablesCreateWithoutAsiento_detallesInput, asientos_contablesUncheckedCreateWithoutAsiento_detallesInput>
    where?: asientos_contablesWhereInput
  }

  export type asientos_contablesUpdateToOneWithWhereWithoutAsiento_detallesInput = {
    where?: asientos_contablesWhereInput
    data: XOR<asientos_contablesUpdateWithoutAsiento_detallesInput, asientos_contablesUncheckedUpdateWithoutAsiento_detallesInput>
  }

  export type asientos_contablesUpdateWithoutAsiento_detallesInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    operacion?: operacionUpdateOneRequiredWithoutAsientos_contablesNestedInput
  }

  export type asientos_contablesUncheckedUpdateWithoutAsiento_detallesInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type asiento_detallesCreateWithoutAsientos_contablesInput = {
    id_detalle: number
    cuenta: string
    debe?: number | null
    haber?: number | null
  }

  export type asiento_detallesUncheckedCreateWithoutAsientos_contablesInput = {
    id_detalle: number
    cuenta: string
    debe?: number | null
    haber?: number | null
  }

  export type asiento_detallesCreateOrConnectWithoutAsientos_contablesInput = {
    where: asiento_detallesWhereUniqueInput
    create: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput>
  }

  export type asiento_detallesCreateManyAsientos_contablesInputEnvelope = {
    data: asiento_detallesCreateManyAsientos_contablesInput | asiento_detallesCreateManyAsientos_contablesInput[]
    skipDuplicates?: boolean
  }

  export type operacionCreateWithoutAsientos_contablesInput = {
    id_operacion: number
    estado: string
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutAsientos_contablesInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutAsientos_contablesInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutAsientos_contablesInput, operacionUncheckedCreateWithoutAsientos_contablesInput>
  }

  export type asiento_detallesUpsertWithWhereUniqueWithoutAsientos_contablesInput = {
    where: asiento_detallesWhereUniqueInput
    update: XOR<asiento_detallesUpdateWithoutAsientos_contablesInput, asiento_detallesUncheckedUpdateWithoutAsientos_contablesInput>
    create: XOR<asiento_detallesCreateWithoutAsientos_contablesInput, asiento_detallesUncheckedCreateWithoutAsientos_contablesInput>
  }

  export type asiento_detallesUpdateWithWhereUniqueWithoutAsientos_contablesInput = {
    where: asiento_detallesWhereUniqueInput
    data: XOR<asiento_detallesUpdateWithoutAsientos_contablesInput, asiento_detallesUncheckedUpdateWithoutAsientos_contablesInput>
  }

  export type asiento_detallesUpdateManyWithWhereWithoutAsientos_contablesInput = {
    where: asiento_detallesScalarWhereInput
    data: XOR<asiento_detallesUpdateManyMutationInput, asiento_detallesUncheckedUpdateManyWithoutAsientos_contablesInput>
  }

  export type asiento_detallesScalarWhereInput = {
    AND?: asiento_detallesScalarWhereInput | asiento_detallesScalarWhereInput[]
    OR?: asiento_detallesScalarWhereInput[]
    NOT?: asiento_detallesScalarWhereInput | asiento_detallesScalarWhereInput[]
    id_detalle?: IntFilter<"asiento_detalles"> | number
    id_asiento?: IntFilter<"asiento_detalles"> | number
    cuenta?: StringFilter<"asiento_detalles"> | string
    debe?: FloatNullableFilter<"asiento_detalles"> | number | null
    haber?: FloatNullableFilter<"asiento_detalles"> | number | null
  }

  export type operacionUpsertWithoutAsientos_contablesInput = {
    update: XOR<operacionUpdateWithoutAsientos_contablesInput, operacionUncheckedUpdateWithoutAsientos_contablesInput>
    create: XOR<operacionCreateWithoutAsientos_contablesInput, operacionUncheckedCreateWithoutAsientos_contablesInput>
    where?: operacionWhereInput
  }

  export type operacionUpdateToOneWithWhereWithoutAsientos_contablesInput = {
    where?: operacionWhereInput
    data: XOR<operacionUpdateWithoutAsientos_contablesInput, operacionUncheckedUpdateWithoutAsientos_contablesInput>
  }

  export type operacionUpdateWithoutAsientos_contablesInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutAsientos_contablesInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type operacion_ventasCreateWithoutClientesInput = {
    id_operacion_ventas: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaCreateNestedManyWithoutOperacion_ventasInput
    operacion: operacionCreateNestedOneWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasUncheckedCreateWithoutClientesInput = {
    id_operacion_ventas: number
    id_operacion: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesUncheckedCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasCreateOrConnectWithoutClientesInput = {
    where: operacion_ventasWhereUniqueInput
    create: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput>
  }

  export type operacion_ventasCreateManyClientesInputEnvelope = {
    data: operacion_ventasCreateManyClientesInput | operacion_ventasCreateManyClientesInput[]
    skipDuplicates?: boolean
  }

  export type operacion_ventasUpsertWithWhereUniqueWithoutClientesInput = {
    where: operacion_ventasWhereUniqueInput
    update: XOR<operacion_ventasUpdateWithoutClientesInput, operacion_ventasUncheckedUpdateWithoutClientesInput>
    create: XOR<operacion_ventasCreateWithoutClientesInput, operacion_ventasUncheckedCreateWithoutClientesInput>
  }

  export type operacion_ventasUpdateWithWhereUniqueWithoutClientesInput = {
    where: operacion_ventasWhereUniqueInput
    data: XOR<operacion_ventasUpdateWithoutClientesInput, operacion_ventasUncheckedUpdateWithoutClientesInput>
  }

  export type operacion_ventasUpdateManyWithWhereWithoutClientesInput = {
    where: operacion_ventasScalarWhereInput
    data: XOR<operacion_ventasUpdateManyMutationInput, operacion_ventasUncheckedUpdateManyWithoutClientesInput>
  }

  export type operacion_ventasScalarWhereInput = {
    AND?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
    OR?: operacion_ventasScalarWhereInput[]
    NOT?: operacion_ventasScalarWhereInput | operacion_ventasScalarWhereInput[]
    id_operacion_ventas?: IntFilter<"operacion_ventas"> | number
    id_operacion?: IntFilter<"operacion_ventas"> | number
    id_cliente?: IntFilter<"operacion_ventas"> | number
    fecha?: DateTimeFilter<"operacion_ventas"> | Date | string
    total?: FloatFilter<"operacion_ventas"> | number
    metodo_pago?: StringFilter<"operacion_ventas"> | string
  }

  export type operacion_comprasCreateWithoutDetalle_compraInput = {
    id_operacion_compras: number
    fecha: Date | string
    total: number
    metodo_pago: string
    operacion: operacionCreateNestedOneWithoutOperacion_comprasInput
    proveedores: proveedoresCreateNestedOneWithoutOperacion_comprasInput
  }

  export type operacion_comprasUncheckedCreateWithoutDetalle_compraInput = {
    id_operacion_compras: number
    id_operacion: number
    id_proveedor: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_comprasCreateOrConnectWithoutDetalle_compraInput = {
    where: operacion_comprasWhereUniqueInput
    create: XOR<operacion_comprasCreateWithoutDetalle_compraInput, operacion_comprasUncheckedCreateWithoutDetalle_compraInput>
  }

  export type productosCreateWithoutDetalle_compraInput = {
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_venta?: detalle_ventaCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutDetalle_compraInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutDetalle_compraInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutDetalle_compraInput, productosUncheckedCreateWithoutDetalle_compraInput>
  }

  export type operacion_comprasUpsertWithoutDetalle_compraInput = {
    update: XOR<operacion_comprasUpdateWithoutDetalle_compraInput, operacion_comprasUncheckedUpdateWithoutDetalle_compraInput>
    create: XOR<operacion_comprasCreateWithoutDetalle_compraInput, operacion_comprasUncheckedCreateWithoutDetalle_compraInput>
    where?: operacion_comprasWhereInput
  }

  export type operacion_comprasUpdateToOneWithWhereWithoutDetalle_compraInput = {
    where?: operacion_comprasWhereInput
    data: XOR<operacion_comprasUpdateWithoutDetalle_compraInput, operacion_comprasUncheckedUpdateWithoutDetalle_compraInput>
  }

  export type operacion_comprasUpdateWithoutDetalle_compraInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    operacion?: operacionUpdateOneRequiredWithoutOperacion_comprasNestedInput
    proveedores?: proveedoresUpdateOneRequiredWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateWithoutDetalle_compraInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type productosUpsertWithoutDetalle_compraInput = {
    update: XOR<productosUpdateWithoutDetalle_compraInput, productosUncheckedUpdateWithoutDetalle_compraInput>
    create: XOR<productosCreateWithoutDetalle_compraInput, productosUncheckedCreateWithoutDetalle_compraInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutDetalle_compraInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutDetalle_compraInput, productosUncheckedUpdateWithoutDetalle_compraInput>
  }

  export type productosUpdateWithoutDetalle_compraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_venta?: detalle_ventaUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutDetalle_compraInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type operacion_ventasCreateWithoutDetalle_ventaInput = {
    id_operacion_ventas: number
    fecha: Date | string
    total: number
    metodo_pago: string
    clientes: clientesCreateNestedOneWithoutOperacion_ventasInput
    operacion: operacionCreateNestedOneWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasUncheckedCreateWithoutDetalle_ventaInput = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
    pagos_clientes?: pagos_clientesUncheckedCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasCreateOrConnectWithoutDetalle_ventaInput = {
    where: operacion_ventasWhereUniqueInput
    create: XOR<operacion_ventasCreateWithoutDetalle_ventaInput, operacion_ventasUncheckedCreateWithoutDetalle_ventaInput>
  }

  export type productosCreateWithoutDetalle_ventaInput = {
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutDetalle_ventaInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutDetalle_ventaInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutDetalle_ventaInput, productosUncheckedCreateWithoutDetalle_ventaInput>
  }

  export type operacion_ventasUpsertWithoutDetalle_ventaInput = {
    update: XOR<operacion_ventasUpdateWithoutDetalle_ventaInput, operacion_ventasUncheckedUpdateWithoutDetalle_ventaInput>
    create: XOR<operacion_ventasCreateWithoutDetalle_ventaInput, operacion_ventasUncheckedCreateWithoutDetalle_ventaInput>
    where?: operacion_ventasWhereInput
  }

  export type operacion_ventasUpdateToOneWithWhereWithoutDetalle_ventaInput = {
    where?: operacion_ventasWhereInput
    data: XOR<operacion_ventasUpdateWithoutDetalle_ventaInput, operacion_ventasUncheckedUpdateWithoutDetalle_ventaInput>
  }

  export type operacion_ventasUpdateWithoutDetalle_ventaInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    clientes?: clientesUpdateOneRequiredWithoutOperacion_ventasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateWithoutDetalle_ventaInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    pagos_clientes?: pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type productosUpsertWithoutDetalle_ventaInput = {
    update: XOR<productosUpdateWithoutDetalle_ventaInput, productosUncheckedUpdateWithoutDetalle_ventaInput>
    create: XOR<productosCreateWithoutDetalle_ventaInput, productosUncheckedCreateWithoutDetalle_ventaInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutDetalle_ventaInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutDetalle_ventaInput, productosUncheckedUpdateWithoutDetalle_ventaInput>
  }

  export type productosUpdateWithoutDetalle_ventaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutDetalle_ventaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type operacionCreateWithoutInventario_movimientosInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutInventario_movimientosInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutInventario_movimientosInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutInventario_movimientosInput, operacionUncheckedCreateWithoutInventario_movimientosInput>
  }

  export type productosCreateWithoutInventario_movimientosInput = {
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutInventario_movimientosInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutProductosInput
    producto_variantes?: producto_variantesUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutInventario_movimientosInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutInventario_movimientosInput, productosUncheckedCreateWithoutInventario_movimientosInput>
  }

  export type operacionUpsertWithoutInventario_movimientosInput = {
    update: XOR<operacionUpdateWithoutInventario_movimientosInput, operacionUncheckedUpdateWithoutInventario_movimientosInput>
    create: XOR<operacionCreateWithoutInventario_movimientosInput, operacionUncheckedCreateWithoutInventario_movimientosInput>
    where?: operacionWhereInput
  }

  export type operacionUpdateToOneWithWhereWithoutInventario_movimientosInput = {
    where?: operacionWhereInput
    data: XOR<operacionUpdateWithoutInventario_movimientosInput, operacionUncheckedUpdateWithoutInventario_movimientosInput>
  }

  export type operacionUpdateWithoutInventario_movimientosInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutInventario_movimientosInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type productosUpsertWithoutInventario_movimientosInput = {
    update: XOR<productosUpdateWithoutInventario_movimientosInput, productosUncheckedUpdateWithoutInventario_movimientosInput>
    create: XOR<productosCreateWithoutInventario_movimientosInput, productosUncheckedCreateWithoutInventario_movimientosInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutInventario_movimientosInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutInventario_movimientosInput, productosUncheckedUpdateWithoutInventario_movimientosInput>
  }

  export type productosUpdateWithoutInventario_movimientosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutInventario_movimientosInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutProductosNestedInput
    producto_variantes?: producto_variantesUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type asientos_contablesCreateWithoutOperacionInput = {
    id_asiento: number
    fecha: Date | string
    descripcion?: string | null
    asiento_detalles?: asiento_detallesCreateNestedManyWithoutAsientos_contablesInput
  }

  export type asientos_contablesUncheckedCreateWithoutOperacionInput = {
    id_asiento: number
    fecha: Date | string
    descripcion?: string | null
    asiento_detalles?: asiento_detallesUncheckedCreateNestedManyWithoutAsientos_contablesInput
  }

  export type asientos_contablesCreateOrConnectWithoutOperacionInput = {
    where: asientos_contablesWhereUniqueInput
    create: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput>
  }

  export type asientos_contablesCreateManyOperacionInputEnvelope = {
    data: asientos_contablesCreateManyOperacionInput | asientos_contablesCreateManyOperacionInput[]
    skipDuplicates?: boolean
  }

  export type inventario_movimientosCreateWithoutOperacionInput = {
    id_movimiento: number
    cantidad: number
    fecha: Date | string
    motivo: string
    productos: productosCreateNestedOneWithoutInventario_movimientosInput
  }

  export type inventario_movimientosUncheckedCreateWithoutOperacionInput = {
    id_movimiento: number
    id_producto: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type inventario_movimientosCreateOrConnectWithoutOperacionInput = {
    where: inventario_movimientosWhereUniqueInput
    create: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput>
  }

  export type inventario_movimientosCreateManyOperacionInputEnvelope = {
    data: inventario_movimientosCreateManyOperacionInput | inventario_movimientosCreateManyOperacionInput[]
    skipDuplicates?: boolean
  }

  export type tipo_operacionCreateWithoutOperacionInput = {
    id_tipo_operacion: number
    tipo: string
  }

  export type tipo_operacionUncheckedCreateWithoutOperacionInput = {
    id_tipo_operacion: number
    tipo: string
  }

  export type tipo_operacionCreateOrConnectWithoutOperacionInput = {
    where: tipo_operacionWhereUniqueInput
    create: XOR<tipo_operacionCreateWithoutOperacionInput, tipo_operacionUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_comprasCreateWithoutOperacionInput = {
    id_operacion_compras: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraCreateNestedManyWithoutOperacion_comprasInput
    proveedores: proveedoresCreateNestedOneWithoutOperacion_comprasInput
  }

  export type operacion_comprasUncheckedCreateWithoutOperacionInput = {
    id_operacion_compras: number
    id_proveedor: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutOperacion_comprasInput
  }

  export type operacion_comprasCreateOrConnectWithoutOperacionInput = {
    where: operacion_comprasWhereUniqueInput
    create: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_comprasCreateManyOperacionInputEnvelope = {
    data: operacion_comprasCreateManyOperacionInput | operacion_comprasCreateManyOperacionInput[]
    skipDuplicates?: boolean
  }

  export type operacion_gastosCreateWithoutOperacionInput = {
    id_operacion_gastos: number
    nombre: string
    detalle: string
    total: number
  }

  export type operacion_gastosUncheckedCreateWithoutOperacionInput = {
    id_operacion_gastos: number
    nombre: string
    detalle: string
    total: number
  }

  export type operacion_gastosCreateOrConnectWithoutOperacionInput = {
    where: operacion_gastosWhereUniqueInput
    create: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_gastosCreateManyOperacionInputEnvelope = {
    data: operacion_gastosCreateManyOperacionInput | operacion_gastosCreateManyOperacionInput[]
    skipDuplicates?: boolean
  }

  export type operacion_ventasCreateWithoutOperacionInput = {
    id_operacion_ventas: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaCreateNestedManyWithoutOperacion_ventasInput
    clientes: clientesCreateNestedOneWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasUncheckedCreateWithoutOperacionInput = {
    id_operacion_ventas: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutOperacion_ventasInput
    pagos_clientes?: pagos_clientesUncheckedCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasCreateOrConnectWithoutOperacionInput = {
    where: operacion_ventasWhereUniqueInput
    create: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_ventasCreateManyOperacionInputEnvelope = {
    data: operacion_ventasCreateManyOperacionInput | operacion_ventasCreateManyOperacionInput[]
    skipDuplicates?: boolean
  }

  export type asientos_contablesUpsertWithWhereUniqueWithoutOperacionInput = {
    where: asientos_contablesWhereUniqueInput
    update: XOR<asientos_contablesUpdateWithoutOperacionInput, asientos_contablesUncheckedUpdateWithoutOperacionInput>
    create: XOR<asientos_contablesCreateWithoutOperacionInput, asientos_contablesUncheckedCreateWithoutOperacionInput>
  }

  export type asientos_contablesUpdateWithWhereUniqueWithoutOperacionInput = {
    where: asientos_contablesWhereUniqueInput
    data: XOR<asientos_contablesUpdateWithoutOperacionInput, asientos_contablesUncheckedUpdateWithoutOperacionInput>
  }

  export type asientos_contablesUpdateManyWithWhereWithoutOperacionInput = {
    where: asientos_contablesScalarWhereInput
    data: XOR<asientos_contablesUpdateManyMutationInput, asientos_contablesUncheckedUpdateManyWithoutOperacionInput>
  }

  export type asientos_contablesScalarWhereInput = {
    AND?: asientos_contablesScalarWhereInput | asientos_contablesScalarWhereInput[]
    OR?: asientos_contablesScalarWhereInput[]
    NOT?: asientos_contablesScalarWhereInput | asientos_contablesScalarWhereInput[]
    id_asiento?: IntFilter<"asientos_contables"> | number
    id_operacion?: IntFilter<"asientos_contables"> | number
    fecha?: DateTimeFilter<"asientos_contables"> | Date | string
    descripcion?: StringNullableFilter<"asientos_contables"> | string | null
  }

  export type inventario_movimientosUpsertWithWhereUniqueWithoutOperacionInput = {
    where: inventario_movimientosWhereUniqueInput
    update: XOR<inventario_movimientosUpdateWithoutOperacionInput, inventario_movimientosUncheckedUpdateWithoutOperacionInput>
    create: XOR<inventario_movimientosCreateWithoutOperacionInput, inventario_movimientosUncheckedCreateWithoutOperacionInput>
  }

  export type inventario_movimientosUpdateWithWhereUniqueWithoutOperacionInput = {
    where: inventario_movimientosWhereUniqueInput
    data: XOR<inventario_movimientosUpdateWithoutOperacionInput, inventario_movimientosUncheckedUpdateWithoutOperacionInput>
  }

  export type inventario_movimientosUpdateManyWithWhereWithoutOperacionInput = {
    where: inventario_movimientosScalarWhereInput
    data: XOR<inventario_movimientosUpdateManyMutationInput, inventario_movimientosUncheckedUpdateManyWithoutOperacionInput>
  }

  export type inventario_movimientosScalarWhereInput = {
    AND?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
    OR?: inventario_movimientosScalarWhereInput[]
    NOT?: inventario_movimientosScalarWhereInput | inventario_movimientosScalarWhereInput[]
    id_movimiento?: IntFilter<"inventario_movimientos"> | number
    id_operacion?: IntFilter<"inventario_movimientos"> | number
    id_producto?: IntFilter<"inventario_movimientos"> | number
    cantidad?: IntFilter<"inventario_movimientos"> | number
    fecha?: DateTimeFilter<"inventario_movimientos"> | Date | string
    motivo?: StringFilter<"inventario_movimientos"> | string
  }

  export type tipo_operacionUpsertWithoutOperacionInput = {
    update: XOR<tipo_operacionUpdateWithoutOperacionInput, tipo_operacionUncheckedUpdateWithoutOperacionInput>
    create: XOR<tipo_operacionCreateWithoutOperacionInput, tipo_operacionUncheckedCreateWithoutOperacionInput>
    where?: tipo_operacionWhereInput
  }

  export type tipo_operacionUpdateToOneWithWhereWithoutOperacionInput = {
    where?: tipo_operacionWhereInput
    data: XOR<tipo_operacionUpdateWithoutOperacionInput, tipo_operacionUncheckedUpdateWithoutOperacionInput>
  }

  export type tipo_operacionUpdateWithoutOperacionInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_operacionUncheckedUpdateWithoutOperacionInput = {
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_comprasUpsertWithWhereUniqueWithoutOperacionInput = {
    where: operacion_comprasWhereUniqueInput
    update: XOR<operacion_comprasUpdateWithoutOperacionInput, operacion_comprasUncheckedUpdateWithoutOperacionInput>
    create: XOR<operacion_comprasCreateWithoutOperacionInput, operacion_comprasUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_comprasUpdateWithWhereUniqueWithoutOperacionInput = {
    where: operacion_comprasWhereUniqueInput
    data: XOR<operacion_comprasUpdateWithoutOperacionInput, operacion_comprasUncheckedUpdateWithoutOperacionInput>
  }

  export type operacion_comprasUpdateManyWithWhereWithoutOperacionInput = {
    where: operacion_comprasScalarWhereInput
    data: XOR<operacion_comprasUpdateManyMutationInput, operacion_comprasUncheckedUpdateManyWithoutOperacionInput>
  }

  export type operacion_comprasScalarWhereInput = {
    AND?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
    OR?: operacion_comprasScalarWhereInput[]
    NOT?: operacion_comprasScalarWhereInput | operacion_comprasScalarWhereInput[]
    id_operacion_compras?: IntFilter<"operacion_compras"> | number
    id_operacion?: IntFilter<"operacion_compras"> | number
    id_proveedor?: IntFilter<"operacion_compras"> | number
    fecha?: DateTimeFilter<"operacion_compras"> | Date | string
    total?: FloatFilter<"operacion_compras"> | number
    metodo_pago?: StringFilter<"operacion_compras"> | string
  }

  export type operacion_gastosUpsertWithWhereUniqueWithoutOperacionInput = {
    where: operacion_gastosWhereUniqueInput
    update: XOR<operacion_gastosUpdateWithoutOperacionInput, operacion_gastosUncheckedUpdateWithoutOperacionInput>
    create: XOR<operacion_gastosCreateWithoutOperacionInput, operacion_gastosUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_gastosUpdateWithWhereUniqueWithoutOperacionInput = {
    where: operacion_gastosWhereUniqueInput
    data: XOR<operacion_gastosUpdateWithoutOperacionInput, operacion_gastosUncheckedUpdateWithoutOperacionInput>
  }

  export type operacion_gastosUpdateManyWithWhereWithoutOperacionInput = {
    where: operacion_gastosScalarWhereInput
    data: XOR<operacion_gastosUpdateManyMutationInput, operacion_gastosUncheckedUpdateManyWithoutOperacionInput>
  }

  export type operacion_gastosScalarWhereInput = {
    AND?: operacion_gastosScalarWhereInput | operacion_gastosScalarWhereInput[]
    OR?: operacion_gastosScalarWhereInput[]
    NOT?: operacion_gastosScalarWhereInput | operacion_gastosScalarWhereInput[]
    id_operacion_gastos?: IntFilter<"operacion_gastos"> | number
    id_operacion?: IntFilter<"operacion_gastos"> | number
    nombre?: StringFilter<"operacion_gastos"> | string
    detalle?: StringFilter<"operacion_gastos"> | string
    total?: FloatFilter<"operacion_gastos"> | number
  }

  export type operacion_ventasUpsertWithWhereUniqueWithoutOperacionInput = {
    where: operacion_ventasWhereUniqueInput
    update: XOR<operacion_ventasUpdateWithoutOperacionInput, operacion_ventasUncheckedUpdateWithoutOperacionInput>
    create: XOR<operacion_ventasCreateWithoutOperacionInput, operacion_ventasUncheckedCreateWithoutOperacionInput>
  }

  export type operacion_ventasUpdateWithWhereUniqueWithoutOperacionInput = {
    where: operacion_ventasWhereUniqueInput
    data: XOR<operacion_ventasUpdateWithoutOperacionInput, operacion_ventasUncheckedUpdateWithoutOperacionInput>
  }

  export type operacion_ventasUpdateManyWithWhereWithoutOperacionInput = {
    where: operacion_ventasScalarWhereInput
    data: XOR<operacion_ventasUpdateManyMutationInput, operacion_ventasUncheckedUpdateManyWithoutOperacionInput>
  }

  export type detalle_compraCreateWithoutOperacion_comprasInput = {
    id_detalle_compra: number
    cantidad: number
    precio_unitario: number
    productos: productosCreateNestedOneWithoutDetalle_compraInput
  }

  export type detalle_compraUncheckedCreateWithoutOperacion_comprasInput = {
    id_detalle_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_compraCreateOrConnectWithoutOperacion_comprasInput = {
    where: detalle_compraWhereUniqueInput
    create: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput>
  }

  export type detalle_compraCreateManyOperacion_comprasInputEnvelope = {
    data: detalle_compraCreateManyOperacion_comprasInput | detalle_compraCreateManyOperacion_comprasInput[]
    skipDuplicates?: boolean
  }

  export type operacionCreateWithoutOperacion_comprasInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutOperacion_comprasInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutOperacion_comprasInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutOperacion_comprasInput, operacionUncheckedCreateWithoutOperacion_comprasInput>
  }

  export type proveedoresCreateWithoutOperacion_comprasInput = {
    id_proveedor: number
    nombre: string
    celular?: string | null
    contacto?: string | null
  }

  export type proveedoresUncheckedCreateWithoutOperacion_comprasInput = {
    id_proveedor: number
    nombre: string
    celular?: string | null
    contacto?: string | null
  }

  export type proveedoresCreateOrConnectWithoutOperacion_comprasInput = {
    where: proveedoresWhereUniqueInput
    create: XOR<proveedoresCreateWithoutOperacion_comprasInput, proveedoresUncheckedCreateWithoutOperacion_comprasInput>
  }

  export type detalle_compraUpsertWithWhereUniqueWithoutOperacion_comprasInput = {
    where: detalle_compraWhereUniqueInput
    update: XOR<detalle_compraUpdateWithoutOperacion_comprasInput, detalle_compraUncheckedUpdateWithoutOperacion_comprasInput>
    create: XOR<detalle_compraCreateWithoutOperacion_comprasInput, detalle_compraUncheckedCreateWithoutOperacion_comprasInput>
  }

  export type detalle_compraUpdateWithWhereUniqueWithoutOperacion_comprasInput = {
    where: detalle_compraWhereUniqueInput
    data: XOR<detalle_compraUpdateWithoutOperacion_comprasInput, detalle_compraUncheckedUpdateWithoutOperacion_comprasInput>
  }

  export type detalle_compraUpdateManyWithWhereWithoutOperacion_comprasInput = {
    where: detalle_compraScalarWhereInput
    data: XOR<detalle_compraUpdateManyMutationInput, detalle_compraUncheckedUpdateManyWithoutOperacion_comprasInput>
  }

  export type detalle_compraScalarWhereInput = {
    AND?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
    OR?: detalle_compraScalarWhereInput[]
    NOT?: detalle_compraScalarWhereInput | detalle_compraScalarWhereInput[]
    id_detalle_compra?: IntFilter<"detalle_compra"> | number
    id_operacion_compra?: IntFilter<"detalle_compra"> | number
    id_producto?: IntFilter<"detalle_compra"> | number
    cantidad?: IntFilter<"detalle_compra"> | number
    precio_unitario?: FloatFilter<"detalle_compra"> | number
  }

  export type operacionUpsertWithoutOperacion_comprasInput = {
    update: XOR<operacionUpdateWithoutOperacion_comprasInput, operacionUncheckedUpdateWithoutOperacion_comprasInput>
    create: XOR<operacionCreateWithoutOperacion_comprasInput, operacionUncheckedCreateWithoutOperacion_comprasInput>
    where?: operacionWhereInput
  }

  export type operacionUpdateToOneWithWhereWithoutOperacion_comprasInput = {
    where?: operacionWhereInput
    data: XOR<operacionUpdateWithoutOperacion_comprasInput, operacionUncheckedUpdateWithoutOperacion_comprasInput>
  }

  export type operacionUpdateWithoutOperacion_comprasInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutOperacion_comprasInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type proveedoresUpsertWithoutOperacion_comprasInput = {
    update: XOR<proveedoresUpdateWithoutOperacion_comprasInput, proveedoresUncheckedUpdateWithoutOperacion_comprasInput>
    create: XOR<proveedoresCreateWithoutOperacion_comprasInput, proveedoresUncheckedCreateWithoutOperacion_comprasInput>
    where?: proveedoresWhereInput
  }

  export type proveedoresUpdateToOneWithWhereWithoutOperacion_comprasInput = {
    where?: proveedoresWhereInput
    data: XOR<proveedoresUpdateWithoutOperacion_comprasInput, proveedoresUncheckedUpdateWithoutOperacion_comprasInput>
  }

  export type proveedoresUpdateWithoutOperacion_comprasInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedoresUncheckedUpdateWithoutOperacion_comprasInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type operacionCreateWithoutOperacion_gastosInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutOperacion_gastosInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutOperacion_gastosInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutOperacion_gastosInput, operacionUncheckedCreateWithoutOperacion_gastosInput>
  }

  export type operacionUpsertWithoutOperacion_gastosInput = {
    update: XOR<operacionUpdateWithoutOperacion_gastosInput, operacionUncheckedUpdateWithoutOperacion_gastosInput>
    create: XOR<operacionCreateWithoutOperacion_gastosInput, operacionUncheckedCreateWithoutOperacion_gastosInput>
    where?: operacionWhereInput
  }

  export type operacionUpdateToOneWithWhereWithoutOperacion_gastosInput = {
    where?: operacionWhereInput
    data: XOR<operacionUpdateWithoutOperacion_gastosInput, operacionUncheckedUpdateWithoutOperacion_gastosInput>
  }

  export type operacionUpdateWithoutOperacion_gastosInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutOperacion_gastosInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type detalle_ventaCreateWithoutOperacion_ventasInput = {
    id_detalle_venta: number
    cantidad: number
    precio_unitario: number
    productos: productosCreateNestedOneWithoutDetalle_ventaInput
  }

  export type detalle_ventaUncheckedCreateWithoutOperacion_ventasInput = {
    id_detalle_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_ventaCreateOrConnectWithoutOperacion_ventasInput = {
    where: detalle_ventaWhereUniqueInput
    create: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type detalle_ventaCreateManyOperacion_ventasInputEnvelope = {
    data: detalle_ventaCreateManyOperacion_ventasInput | detalle_ventaCreateManyOperacion_ventasInput[]
    skipDuplicates?: boolean
  }

  export type clientesCreateWithoutOperacion_ventasInput = {
    nombre: string
    apellido: string
    celular?: string | null
  }

  export type clientesUncheckedCreateWithoutOperacion_ventasInput = {
    id_cliente?: number
    nombre: string
    apellido: string
    celular?: string | null
  }

  export type clientesCreateOrConnectWithoutOperacion_ventasInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutOperacion_ventasInput, clientesUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type operacionCreateWithoutOperacion_ventasInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    tipo_operacion: tipo_operacionCreateNestedOneWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutOperacion_ventasInput = {
    id_operacion: number
    id_tipo_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutOperacion_ventasInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutOperacion_ventasInput, operacionUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type pagos_clientesCreateWithoutOperacion_ventasInput = {
    id_pagos_clientes: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
  }

  export type pagos_clientesUncheckedCreateWithoutOperacion_ventasInput = {
    id_pagos_clientes: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
  }

  export type pagos_clientesCreateOrConnectWithoutOperacion_ventasInput = {
    where: pagos_clientesWhereUniqueInput
    create: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type pagos_clientesCreateManyOperacion_ventasInputEnvelope = {
    data: pagos_clientesCreateManyOperacion_ventasInput | pagos_clientesCreateManyOperacion_ventasInput[]
    skipDuplicates?: boolean
  }

  export type detalle_ventaUpsertWithWhereUniqueWithoutOperacion_ventasInput = {
    where: detalle_ventaWhereUniqueInput
    update: XOR<detalle_ventaUpdateWithoutOperacion_ventasInput, detalle_ventaUncheckedUpdateWithoutOperacion_ventasInput>
    create: XOR<detalle_ventaCreateWithoutOperacion_ventasInput, detalle_ventaUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type detalle_ventaUpdateWithWhereUniqueWithoutOperacion_ventasInput = {
    where: detalle_ventaWhereUniqueInput
    data: XOR<detalle_ventaUpdateWithoutOperacion_ventasInput, detalle_ventaUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type detalle_ventaUpdateManyWithWhereWithoutOperacion_ventasInput = {
    where: detalle_ventaScalarWhereInput
    data: XOR<detalle_ventaUpdateManyMutationInput, detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasInput>
  }

  export type detalle_ventaScalarWhereInput = {
    AND?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
    OR?: detalle_ventaScalarWhereInput[]
    NOT?: detalle_ventaScalarWhereInput | detalle_ventaScalarWhereInput[]
    id_detalle_venta?: IntFilter<"detalle_venta"> | number
    id_operacion_venta?: IntFilter<"detalle_venta"> | number
    id_producto?: IntFilter<"detalle_venta"> | number
    cantidad?: IntFilter<"detalle_venta"> | number
    precio_unitario?: FloatFilter<"detalle_venta"> | number
  }

  export type clientesUpsertWithoutOperacion_ventasInput = {
    update: XOR<clientesUpdateWithoutOperacion_ventasInput, clientesUncheckedUpdateWithoutOperacion_ventasInput>
    create: XOR<clientesCreateWithoutOperacion_ventasInput, clientesUncheckedCreateWithoutOperacion_ventasInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutOperacion_ventasInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutOperacion_ventasInput, clientesUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type clientesUpdateWithoutOperacion_ventasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesUncheckedUpdateWithoutOperacion_ventasInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    celular?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type operacionUpsertWithoutOperacion_ventasInput = {
    update: XOR<operacionUpdateWithoutOperacion_ventasInput, operacionUncheckedUpdateWithoutOperacion_ventasInput>
    create: XOR<operacionCreateWithoutOperacion_ventasInput, operacionUncheckedCreateWithoutOperacion_ventasInput>
    where?: operacionWhereInput
  }

  export type operacionUpdateToOneWithWhereWithoutOperacion_ventasInput = {
    where?: operacionWhereInput
    data: XOR<operacionUpdateWithoutOperacion_ventasInput, operacionUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type operacionUpdateWithoutOperacion_ventasInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    tipo_operacion?: tipo_operacionUpdateOneRequiredWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutOperacion_ventasInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_tipo_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type pagos_clientesUpsertWithWhereUniqueWithoutOperacion_ventasInput = {
    where: pagos_clientesWhereUniqueInput
    update: XOR<pagos_clientesUpdateWithoutOperacion_ventasInput, pagos_clientesUncheckedUpdateWithoutOperacion_ventasInput>
    create: XOR<pagos_clientesCreateWithoutOperacion_ventasInput, pagos_clientesUncheckedCreateWithoutOperacion_ventasInput>
  }

  export type pagos_clientesUpdateWithWhereUniqueWithoutOperacion_ventasInput = {
    where: pagos_clientesWhereUniqueInput
    data: XOR<pagos_clientesUpdateWithoutOperacion_ventasInput, pagos_clientesUncheckedUpdateWithoutOperacion_ventasInput>
  }

  export type pagos_clientesUpdateManyWithWhereWithoutOperacion_ventasInput = {
    where: pagos_clientesScalarWhereInput
    data: XOR<pagos_clientesUpdateManyMutationInput, pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasInput>
  }

  export type pagos_clientesScalarWhereInput = {
    AND?: pagos_clientesScalarWhereInput | pagos_clientesScalarWhereInput[]
    OR?: pagos_clientesScalarWhereInput[]
    NOT?: pagos_clientesScalarWhereInput | pagos_clientesScalarWhereInput[]
    id_pagos_clientes?: IntFilter<"pagos_clientes"> | number
    id_operacion_venta?: IntFilter<"pagos_clientes"> | number
    monto_pago?: FloatFilter<"pagos_clientes"> | number
    fecha_pago?: DateTimeFilter<"pagos_clientes"> | Date | string
    metodo_pago?: StringFilter<"pagos_clientes"> | string
  }

  export type operacion_ventasCreateWithoutPagos_clientesInput = {
    id_operacion_ventas: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaCreateNestedManyWithoutOperacion_ventasInput
    clientes: clientesCreateNestedOneWithoutOperacion_ventasInput
    operacion: operacionCreateNestedOneWithoutOperacion_ventasInput
  }

  export type operacion_ventasUncheckedCreateWithoutPagos_clientesInput = {
    id_operacion_ventas: number
    id_operacion: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutOperacion_ventasInput
  }

  export type operacion_ventasCreateOrConnectWithoutPagos_clientesInput = {
    where: operacion_ventasWhereUniqueInput
    create: XOR<operacion_ventasCreateWithoutPagos_clientesInput, operacion_ventasUncheckedCreateWithoutPagos_clientesInput>
  }

  export type operacion_ventasUpsertWithoutPagos_clientesInput = {
    update: XOR<operacion_ventasUpdateWithoutPagos_clientesInput, operacion_ventasUncheckedUpdateWithoutPagos_clientesInput>
    create: XOR<operacion_ventasCreateWithoutPagos_clientesInput, operacion_ventasUncheckedCreateWithoutPagos_clientesInput>
    where?: operacion_ventasWhereInput
  }

  export type operacion_ventasUpdateToOneWithWhereWithoutPagos_clientesInput = {
    where?: operacion_ventasWhereInput
    data: XOR<operacion_ventasUpdateWithoutPagos_clientesInput, operacion_ventasUncheckedUpdateWithoutPagos_clientesInput>
  }

  export type operacion_ventasUpdateWithoutPagos_clientesInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUpdateManyWithoutOperacion_ventasNestedInput
    clientes?: clientesUpdateOneRequiredWithoutOperacion_ventasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateWithoutPagos_clientesInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type productosCreateWithoutProducto_variantesInput = {
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutProducto_variantesInput = {
    id_producto?: number
    nombre: string
    categoria: string
    costo: number
    precio_unitario: number
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutProductosInput
    detalle_venta?: detalle_ventaUncheckedCreateNestedManyWithoutProductosInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutProducto_variantesInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutProducto_variantesInput, productosUncheckedCreateWithoutProducto_variantesInput>
  }

  export type productosUpsertWithoutProducto_variantesInput = {
    update: XOR<productosUpdateWithoutProducto_variantesInput, productosUncheckedUpdateWithoutProducto_variantesInput>
    create: XOR<productosCreateWithoutProducto_variantesInput, productosUncheckedCreateWithoutProducto_variantesInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutProducto_variantesInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutProducto_variantesInput, productosUncheckedUpdateWithoutProducto_variantesInput>
  }

  export type productosUpdateWithoutProducto_variantesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutProducto_variantesInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria?: StringFieldUpdateOperationsInput | string
    costo?: FloatFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutProductosNestedInput
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutProductosNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type detalle_compraCreateWithoutProductosInput = {
    id_detalle_compra: number
    cantidad: number
    precio_unitario: number
    operacion_compras: operacion_comprasCreateNestedOneWithoutDetalle_compraInput
  }

  export type detalle_compraUncheckedCreateWithoutProductosInput = {
    id_detalle_compra: number
    id_operacion_compra: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_compraCreateOrConnectWithoutProductosInput = {
    where: detalle_compraWhereUniqueInput
    create: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput>
  }

  export type detalle_compraCreateManyProductosInputEnvelope = {
    data: detalle_compraCreateManyProductosInput | detalle_compraCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type detalle_ventaCreateWithoutProductosInput = {
    id_detalle_venta: number
    cantidad: number
    precio_unitario: number
    operacion_ventas: operacion_ventasCreateNestedOneWithoutDetalle_ventaInput
  }

  export type detalle_ventaUncheckedCreateWithoutProductosInput = {
    id_detalle_venta: number
    id_operacion_venta: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_ventaCreateOrConnectWithoutProductosInput = {
    where: detalle_ventaWhereUniqueInput
    create: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput>
  }

  export type detalle_ventaCreateManyProductosInputEnvelope = {
    data: detalle_ventaCreateManyProductosInput | detalle_ventaCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type inventario_movimientosCreateWithoutProductosInput = {
    id_movimiento: number
    cantidad: number
    fecha: Date | string
    motivo: string
    operacion: operacionCreateNestedOneWithoutInventario_movimientosInput
  }

  export type inventario_movimientosUncheckedCreateWithoutProductosInput = {
    id_movimiento: number
    id_operacion: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type inventario_movimientosCreateOrConnectWithoutProductosInput = {
    where: inventario_movimientosWhereUniqueInput
    create: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput>
  }

  export type inventario_movimientosCreateManyProductosInputEnvelope = {
    data: inventario_movimientosCreateManyProductosInput | inventario_movimientosCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type producto_variantesCreateWithoutProductosInput = {
    talle: string
    stock_actual?: number
    color: string
  }

  export type producto_variantesUncheckedCreateWithoutProductosInput = {
    id_variante?: number
    talle: string
    stock_actual?: number
    color: string
  }

  export type producto_variantesCreateOrConnectWithoutProductosInput = {
    where: producto_variantesWhereUniqueInput
    create: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput>
  }

  export type producto_variantesCreateManyProductosInputEnvelope = {
    data: producto_variantesCreateManyProductosInput | producto_variantesCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type detalle_compraUpsertWithWhereUniqueWithoutProductosInput = {
    where: detalle_compraWhereUniqueInput
    update: XOR<detalle_compraUpdateWithoutProductosInput, detalle_compraUncheckedUpdateWithoutProductosInput>
    create: XOR<detalle_compraCreateWithoutProductosInput, detalle_compraUncheckedCreateWithoutProductosInput>
  }

  export type detalle_compraUpdateWithWhereUniqueWithoutProductosInput = {
    where: detalle_compraWhereUniqueInput
    data: XOR<detalle_compraUpdateWithoutProductosInput, detalle_compraUncheckedUpdateWithoutProductosInput>
  }

  export type detalle_compraUpdateManyWithWhereWithoutProductosInput = {
    where: detalle_compraScalarWhereInput
    data: XOR<detalle_compraUpdateManyMutationInput, detalle_compraUncheckedUpdateManyWithoutProductosInput>
  }

  export type detalle_ventaUpsertWithWhereUniqueWithoutProductosInput = {
    where: detalle_ventaWhereUniqueInput
    update: XOR<detalle_ventaUpdateWithoutProductosInput, detalle_ventaUncheckedUpdateWithoutProductosInput>
    create: XOR<detalle_ventaCreateWithoutProductosInput, detalle_ventaUncheckedCreateWithoutProductosInput>
  }

  export type detalle_ventaUpdateWithWhereUniqueWithoutProductosInput = {
    where: detalle_ventaWhereUniqueInput
    data: XOR<detalle_ventaUpdateWithoutProductosInput, detalle_ventaUncheckedUpdateWithoutProductosInput>
  }

  export type detalle_ventaUpdateManyWithWhereWithoutProductosInput = {
    where: detalle_ventaScalarWhereInput
    data: XOR<detalle_ventaUpdateManyMutationInput, detalle_ventaUncheckedUpdateManyWithoutProductosInput>
  }

  export type inventario_movimientosUpsertWithWhereUniqueWithoutProductosInput = {
    where: inventario_movimientosWhereUniqueInput
    update: XOR<inventario_movimientosUpdateWithoutProductosInput, inventario_movimientosUncheckedUpdateWithoutProductosInput>
    create: XOR<inventario_movimientosCreateWithoutProductosInput, inventario_movimientosUncheckedCreateWithoutProductosInput>
  }

  export type inventario_movimientosUpdateWithWhereUniqueWithoutProductosInput = {
    where: inventario_movimientosWhereUniqueInput
    data: XOR<inventario_movimientosUpdateWithoutProductosInput, inventario_movimientosUncheckedUpdateWithoutProductosInput>
  }

  export type inventario_movimientosUpdateManyWithWhereWithoutProductosInput = {
    where: inventario_movimientosScalarWhereInput
    data: XOR<inventario_movimientosUpdateManyMutationInput, inventario_movimientosUncheckedUpdateManyWithoutProductosInput>
  }

  export type producto_variantesUpsertWithWhereUniqueWithoutProductosInput = {
    where: producto_variantesWhereUniqueInput
    update: XOR<producto_variantesUpdateWithoutProductosInput, producto_variantesUncheckedUpdateWithoutProductosInput>
    create: XOR<producto_variantesCreateWithoutProductosInput, producto_variantesUncheckedCreateWithoutProductosInput>
  }

  export type producto_variantesUpdateWithWhereUniqueWithoutProductosInput = {
    where: producto_variantesWhereUniqueInput
    data: XOR<producto_variantesUpdateWithoutProductosInput, producto_variantesUncheckedUpdateWithoutProductosInput>
  }

  export type producto_variantesUpdateManyWithWhereWithoutProductosInput = {
    where: producto_variantesScalarWhereInput
    data: XOR<producto_variantesUpdateManyMutationInput, producto_variantesUncheckedUpdateManyWithoutProductosInput>
  }

  export type producto_variantesScalarWhereInput = {
    AND?: producto_variantesScalarWhereInput | producto_variantesScalarWhereInput[]
    OR?: producto_variantesScalarWhereInput[]
    NOT?: producto_variantesScalarWhereInput | producto_variantesScalarWhereInput[]
    id_variante?: IntFilter<"producto_variantes"> | number
    id_producto?: IntFilter<"producto_variantes"> | number
    talle?: StringFilter<"producto_variantes"> | string
    stock_actual?: IntFilter<"producto_variantes"> | number
    color?: StringFilter<"producto_variantes"> | string
  }

  export type operacion_comprasCreateWithoutProveedoresInput = {
    id_operacion_compras: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraCreateNestedManyWithoutOperacion_comprasInput
    operacion: operacionCreateNestedOneWithoutOperacion_comprasInput
  }

  export type operacion_comprasUncheckedCreateWithoutProveedoresInput = {
    id_operacion_compras: number
    id_operacion: number
    fecha: Date | string
    total: number
    metodo_pago: string
    detalle_compra?: detalle_compraUncheckedCreateNestedManyWithoutOperacion_comprasInput
  }

  export type operacion_comprasCreateOrConnectWithoutProveedoresInput = {
    where: operacion_comprasWhereUniqueInput
    create: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput>
  }

  export type operacion_comprasCreateManyProveedoresInputEnvelope = {
    data: operacion_comprasCreateManyProveedoresInput | operacion_comprasCreateManyProveedoresInput[]
    skipDuplicates?: boolean
  }

  export type operacion_comprasUpsertWithWhereUniqueWithoutProveedoresInput = {
    where: operacion_comprasWhereUniqueInput
    update: XOR<operacion_comprasUpdateWithoutProveedoresInput, operacion_comprasUncheckedUpdateWithoutProveedoresInput>
    create: XOR<operacion_comprasCreateWithoutProveedoresInput, operacion_comprasUncheckedCreateWithoutProveedoresInput>
  }

  export type operacion_comprasUpdateWithWhereUniqueWithoutProveedoresInput = {
    where: operacion_comprasWhereUniqueInput
    data: XOR<operacion_comprasUpdateWithoutProveedoresInput, operacion_comprasUncheckedUpdateWithoutProveedoresInput>
  }

  export type operacion_comprasUpdateManyWithWhereWithoutProveedoresInput = {
    where: operacion_comprasScalarWhereInput
    data: XOR<operacion_comprasUpdateManyMutationInput, operacion_comprasUncheckedUpdateManyWithoutProveedoresInput>
  }

  export type operacionCreateWithoutTipo_operacionInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasCreateNestedManyWithoutOperacionInput
  }

  export type operacionUncheckedCreateWithoutTipo_operacionInput = {
    id_operacion: number
    estado: string
    asientos_contables?: asientos_contablesUncheckedCreateNestedManyWithoutOperacionInput
    inventario_movimientos?: inventario_movimientosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_compras?: operacion_comprasUncheckedCreateNestedManyWithoutOperacionInput
    operacion_gastos?: operacion_gastosUncheckedCreateNestedManyWithoutOperacionInput
    operacion_ventas?: operacion_ventasUncheckedCreateNestedManyWithoutOperacionInput
  }

  export type operacionCreateOrConnectWithoutTipo_operacionInput = {
    where: operacionWhereUniqueInput
    create: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput>
  }

  export type operacionCreateManyTipo_operacionInputEnvelope = {
    data: operacionCreateManyTipo_operacionInput | operacionCreateManyTipo_operacionInput[]
    skipDuplicates?: boolean
  }

  export type operacionUpsertWithWhereUniqueWithoutTipo_operacionInput = {
    where: operacionWhereUniqueInput
    update: XOR<operacionUpdateWithoutTipo_operacionInput, operacionUncheckedUpdateWithoutTipo_operacionInput>
    create: XOR<operacionCreateWithoutTipo_operacionInput, operacionUncheckedCreateWithoutTipo_operacionInput>
  }

  export type operacionUpdateWithWhereUniqueWithoutTipo_operacionInput = {
    where: operacionWhereUniqueInput
    data: XOR<operacionUpdateWithoutTipo_operacionInput, operacionUncheckedUpdateWithoutTipo_operacionInput>
  }

  export type operacionUpdateManyWithWhereWithoutTipo_operacionInput = {
    where: operacionScalarWhereInput
    data: XOR<operacionUpdateManyMutationInput, operacionUncheckedUpdateManyWithoutTipo_operacionInput>
  }

  export type operacionScalarWhereInput = {
    AND?: operacionScalarWhereInput | operacionScalarWhereInput[]
    OR?: operacionScalarWhereInput[]
    NOT?: operacionScalarWhereInput | operacionScalarWhereInput[]
    id_operacion?: IntFilter<"operacion"> | number
    id_tipo_operacion?: IntFilter<"operacion"> | number
    estado?: StringFilter<"operacion"> | string
  }

  export type asiento_detallesCreateManyAsientos_contablesInput = {
    id_detalle: number
    cuenta: string
    debe?: number | null
    haber?: number | null
  }

  export type asiento_detallesUpdateWithoutAsientos_contablesInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type asiento_detallesUncheckedUpdateWithoutAsientos_contablesInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type asiento_detallesUncheckedUpdateManyWithoutAsientos_contablesInput = {
    id_detalle?: IntFieldUpdateOperationsInput | number
    cuenta?: StringFieldUpdateOperationsInput | string
    debe?: NullableFloatFieldUpdateOperationsInput | number | null
    haber?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type operacion_ventasCreateManyClientesInput = {
    id_operacion_ventas: number
    id_operacion: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_ventasUpdateWithoutClientesInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUpdateManyWithoutOperacion_ventasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateWithoutClientesInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateManyWithoutClientesInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type asientos_contablesCreateManyOperacionInput = {
    id_asiento: number
    fecha: Date | string
    descripcion?: string | null
  }

  export type inventario_movimientosCreateManyOperacionInput = {
    id_movimiento: number
    id_producto: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type operacion_comprasCreateManyOperacionInput = {
    id_operacion_compras: number
    id_proveedor: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_gastosCreateManyOperacionInput = {
    id_operacion_gastos: number
    nombre: string
    detalle: string
    total: number
  }

  export type operacion_ventasCreateManyOperacionInput = {
    id_operacion_ventas: number
    id_cliente: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type asientos_contablesUpdateWithoutOperacionInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    asiento_detalles?: asiento_detallesUpdateManyWithoutAsientos_contablesNestedInput
  }

  export type asientos_contablesUncheckedUpdateWithoutOperacionInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    asiento_detalles?: asiento_detallesUncheckedUpdateManyWithoutAsientos_contablesNestedInput
  }

  export type asientos_contablesUncheckedUpdateManyWithoutOperacionInput = {
    id_asiento?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type inventario_movimientosUpdateWithoutOperacionInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    productos?: productosUpdateOneRequiredWithoutInventario_movimientosNestedInput
  }

  export type inventario_movimientosUncheckedUpdateWithoutOperacionInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type inventario_movimientosUncheckedUpdateManyWithoutOperacionInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_comprasUpdateWithoutOperacionInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUpdateManyWithoutOperacion_comprasNestedInput
    proveedores?: proveedoresUpdateOneRequiredWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateWithoutOperacionInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateManyWithoutOperacionInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_gastosUpdateWithoutOperacionInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_gastosUncheckedUpdateWithoutOperacionInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_gastosUncheckedUpdateManyWithoutOperacionInput = {
    id_operacion_gastos?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalle?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type operacion_ventasUpdateWithoutOperacionInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUpdateManyWithoutOperacion_ventasNestedInput
    clientes?: clientesUpdateOneRequiredWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateWithoutOperacionInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_venta?: detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasNestedInput
    pagos_clientes?: pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasNestedInput
  }

  export type operacion_ventasUncheckedUpdateManyWithoutOperacionInput = {
    id_operacion_ventas?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_compraCreateManyOperacion_comprasInput = {
    id_detalle_compra: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_compraUpdateWithoutOperacion_comprasInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    productos?: productosUpdateOneRequiredWithoutDetalle_compraNestedInput
  }

  export type detalle_compraUncheckedUpdateWithoutOperacion_comprasInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_compraUncheckedUpdateManyWithoutOperacion_comprasInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaCreateManyOperacion_ventasInput = {
    id_detalle_venta: number
    id_producto: number
    cantidad: number
    precio_unitario: number
  }

  export type pagos_clientesCreateManyOperacion_ventasInput = {
    id_pagos_clientes: number
    monto_pago: number
    fecha_pago: Date | string
    metodo_pago: string
  }

  export type detalle_ventaUpdateWithoutOperacion_ventasInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    productos?: productosUpdateOneRequiredWithoutDetalle_ventaNestedInput
  }

  export type detalle_ventaUncheckedUpdateWithoutOperacion_ventasInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaUncheckedUpdateManyWithoutOperacion_ventasInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type pagos_clientesUpdateWithoutOperacion_ventasInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type pagos_clientesUncheckedUpdateWithoutOperacion_ventasInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type pagos_clientesUncheckedUpdateManyWithoutOperacion_ventasInput = {
    id_pagos_clientes?: IntFieldUpdateOperationsInput | number
    monto_pago?: FloatFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type detalle_compraCreateManyProductosInput = {
    id_detalle_compra: number
    id_operacion_compra: number
    cantidad: number
    precio_unitario: number
  }

  export type detalle_ventaCreateManyProductosInput = {
    id_detalle_venta: number
    id_operacion_venta: number
    cantidad: number
    precio_unitario: number
  }

  export type inventario_movimientosCreateManyProductosInput = {
    id_movimiento: number
    id_operacion: number
    cantidad: number
    fecha: Date | string
    motivo: string
  }

  export type producto_variantesCreateManyProductosInput = {
    id_variante?: number
    talle: string
    stock_actual?: number
    color: string
  }

  export type detalle_compraUpdateWithoutProductosInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    operacion_compras?: operacion_comprasUpdateOneRequiredWithoutDetalle_compraNestedInput
  }

  export type detalle_compraUncheckedUpdateWithoutProductosInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_operacion_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_compraUncheckedUpdateManyWithoutProductosInput = {
    id_detalle_compra?: IntFieldUpdateOperationsInput | number
    id_operacion_compra?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaUpdateWithoutProductosInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
    operacion_ventas?: operacion_ventasUpdateOneRequiredWithoutDetalle_ventaNestedInput
  }

  export type detalle_ventaUncheckedUpdateWithoutProductosInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type detalle_ventaUncheckedUpdateManyWithoutProductosInput = {
    id_detalle_venta?: IntFieldUpdateOperationsInput | number
    id_operacion_venta?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type inventario_movimientosUpdateWithoutProductosInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    operacion?: operacionUpdateOneRequiredWithoutInventario_movimientosNestedInput
  }

  export type inventario_movimientosUncheckedUpdateWithoutProductosInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type inventario_movimientosUncheckedUpdateManyWithoutProductosInput = {
    id_movimiento?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesUpdateWithoutProductosInput = {
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesUncheckedUpdateWithoutProductosInput = {
    id_variante?: IntFieldUpdateOperationsInput | number
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type producto_variantesUncheckedUpdateManyWithoutProductosInput = {
    id_variante?: IntFieldUpdateOperationsInput | number
    talle?: StringFieldUpdateOperationsInput | string
    stock_actual?: IntFieldUpdateOperationsInput | number
    color?: StringFieldUpdateOperationsInput | string
  }

  export type operacion_comprasCreateManyProveedoresInput = {
    id_operacion_compras: number
    id_operacion: number
    fecha: Date | string
    total: number
    metodo_pago: string
  }

  export type operacion_comprasUpdateWithoutProveedoresInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUpdateManyWithoutOperacion_comprasNestedInput
    operacion?: operacionUpdateOneRequiredWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateWithoutProveedoresInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
    detalle_compra?: detalle_compraUncheckedUpdateManyWithoutOperacion_comprasNestedInput
  }

  export type operacion_comprasUncheckedUpdateManyWithoutProveedoresInput = {
    id_operacion_compras?: IntFieldUpdateOperationsInput | number
    id_operacion?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: FloatFieldUpdateOperationsInput | number
    metodo_pago?: StringFieldUpdateOperationsInput | string
  }

  export type operacionCreateManyTipo_operacionInput = {
    id_operacion: number
    estado: string
  }

  export type operacionUpdateWithoutTipo_operacionInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateWithoutTipo_operacionInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    asientos_contables?: asientos_contablesUncheckedUpdateManyWithoutOperacionNestedInput
    inventario_movimientos?: inventario_movimientosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_compras?: operacion_comprasUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_gastos?: operacion_gastosUncheckedUpdateManyWithoutOperacionNestedInput
    operacion_ventas?: operacion_ventasUncheckedUpdateManyWithoutOperacionNestedInput
  }

  export type operacionUncheckedUpdateManyWithoutTipo_operacionInput = {
    id_operacion?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}