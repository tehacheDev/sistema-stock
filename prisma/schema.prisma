generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma/client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categoria_producto {
  id_categoria_producto Int        @id @default(autoincrement())
  nombre                String     @unique @db.VarChar(50)
  producto              producto[]
}

model cliente {
  id_cliente      Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(50)
  apellido        String            @db.VarChar(50)
  celular         String?           @db.VarChar(30)
  operacion_venta operacion_venta[]

  @@unique([nombre, apellido, celular])
}

model estado_operacion {
  id_estado_operacion Int         @id @default(autoincrement())
  nombre              String      @unique @db.VarChar(50)
  operacion           operacion[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model inventario_movimiento {
  id_movimiento        Int               @id @default(autoincrement())
  id_producto_variante Int
  tipo_movimiento      String            @db.VarChar(20)
  cantidad             Int
  id_operacion         Int?
  fecha_movimiento     DateTime          @default(now()) @db.Timestamp(6)
  comentario           String?
  operacion            operacion?        @relation(fields: [id_operacion], references: [id_operacion])
  producto_variante    producto_variante @relation(fields: [id_producto_variante], references: [id_producto_variante], onDelete: Cascade)

  @@index([id_operacion], map: "ix_im_operacion")
  @@index([id_producto_variante], map: "ix_im_producto_variante")
}

model metodo_pago {
  id_metodo_pago  Int               @id @default(autoincrement())
  nombre          String            @unique @db.VarChar(50)
  operacion_venta operacion_venta[]
  pago            pago[]
}

model operacion {
  id_operacion          Int                     @id @default(autoincrement())
  id_tipo_operacion     Int
  id_estado_operacion   Int
  fecha_creacion        DateTime                @default(now()) @db.Timestamp(6)
  fecha_actualizacion   DateTime                @default(now()) @db.Timestamp(6)
  inventario_movimiento inventario_movimiento[]
  estado_operacion      estado_operacion        @relation(fields: [id_estado_operacion], references: [id_estado_operacion])
  tipo_operacion        tipo_operacion          @relation(fields: [id_tipo_operacion], references: [id_tipo_operacion])
  operacion_venta       operacion_venta[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model operacion_venta {
  id_venta       Int             @id @default(autoincrement())
  id_operacion   Int
  id_cliente     Int
  id_metodo_pago Int
  total          Decimal         @db.Decimal(12, 2)
  cliente        cliente         @relation(fields: [id_cliente], references: [id_cliente])
  metodo_pago    metodo_pago     @relation(fields: [id_metodo_pago], references: [id_metodo_pago])
  operacion      operacion       @relation(fields: [id_operacion], references: [id_operacion], onDelete: Cascade, onUpdate: NoAction)
  pago           pago[]
  venta_detalle  venta_detalle[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pago {
  id_pago         Int             @id @default(autoincrement())
  id_venta        Int
  id_metodo_pago  Int
  monto_pagado    Decimal         @db.Decimal(12, 2)
  fecha_creacion  DateTime        @default(now()) @db.Timestamp(6)
  metodo_pago     metodo_pago     @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction)
  operacion_venta operacion_venta @relation(fields: [id_venta], references: [id_venta], onDelete: Cascade, onUpdate: NoAction)
}

model producto {
  id_producto        Int                 @id @default(autoincrement())
  id_categoria       Int
  nombre             String              @db.VarChar(100)
  costo              Decimal             @db.Decimal(10, 2)
  precio_unitario    Decimal             @db.Decimal(10, 2)
  categoria_producto categoria_producto  @relation(fields: [id_categoria], references: [id_categoria_producto])
  producto_variante  producto_variante[]
}

model producto_variante {
  id_producto_variante  Int                     @id @default(autoincrement())
  id_producto           Int
  talle                 String                  @db.VarChar(20)
  color                 String                  @db.VarChar(30)
  stock                 Int
  inventario_movimiento inventario_movimiento[]
  producto              producto                @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)
  venta_detalle         venta_detalle[]

  @@unique([id_producto, talle, color])
}

model tipo_operacion {
  id_tipo_operacion Int         @id @default(autoincrement())
  nombre            String      @unique @db.VarChar(50)
  operacion         operacion[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model venta_detalle {
  id_venta             Int
  id_producto_variante Int
  cantidad             Int
  precio_unitario      Decimal           @db.Decimal(10, 2)
  producto_variante    producto_variante @relation(fields: [id_producto_variante], references: [id_producto_variante], onUpdate: NoAction)
  operacion_venta      operacion_venta   @relation(fields: [id_venta], references: [id_venta], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_venta, id_producto_variante])
}
